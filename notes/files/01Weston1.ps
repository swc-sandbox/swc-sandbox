%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: weston.dvi
%%Pages: 16
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips weston.dvi -o weston.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.02.26:1025
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (weston.dvi)
@start
%DVIPSBitmapFont: Fa cmmi8 8 1
/Fa 1 77 df<90383FFFFEA2010090C8FC5C5CA21301A25CA21303A25CA21307A25CA213
0FA25CA2131FA25CA2133FA291C7EA0180A24914031700017E5C160601FE140EA2495C16
3C12015E49EB01F84B5A0003141FB7FC5E292D7DAC30>76 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmti8 8 38
/Fb 38 119 df<1338137C13FC1201EA03F8EA07E0EA0FC0EA1F80EA3E005A5A12E01240
0E0D69AD24>19 D<EA0780EA0FC0EA1FE0123FA3121F120FEA00C0A21201138012031300
5A120E5A5A5A5A5A0B1571AD16>39 D<EA0380EA0FE0121FA213F0A213E0EA0760120013
E013C0120113801203EA07001206120E5A5A12F012C00C157B8716>44
D<387FFFC0A2B5FCA26C130012057A901A>I<121C127F12FFA412FE12380808788716>I<
16E01501821503A21507150FA2151FA2153B157B157315E382EC01C114031581EC0701A2
140EA2141C143C143802707F15005C13015C49B5FCA249C7FCA2130E131E131C4980167E
5B13F0485AA21203D80FF014FFD8FFFC011F13F0A22C2F7CAE35>65
D<011FB512FCEEFF80903A00FE000FC0EE03E04AEB01F017F80101140017FC5CA2130317
F84A1301A20107EC03F017E04AEB07C0EE0F80010FEC3F0016FE9138C007F891B512E049
14F89138C0007C4A7F82013F1580A291C7120FA25BA2017E141FA213FEEE3F005B167E00
015D4B5A49495A4B5A0003EC3F80B600FEC7FC15F82E2D7BAC32>I<DA01FE133091390F
FFC07091393F01E0F09138F80079D903E0133D4948EB1FE0D91F80130F49C7FC017E1407
4915C0485A485A5B00071680485AA2485A170048CAFCA25A127EA312FE5AA51638481578
16707E16F0007C5D15014B5A6C5D4BC7FC6C140E6C6C133C6C6C5B6C6C485A3900F80FC0
D97FFFC8FCEB0FF82C2F75AD33>I<011FB612FEA2903900FE0001EE007E4A143EA20101
151E171C5CA21303A25C16E001071301170002E05B1503130F15074A485A91B5FC5BECC0
1F4A6CC7FCA2133FA2DA000E13E0A2491401030013C0017E1403178001FE14071700495C
161E12015E49147CED01FC0003EC0FF8B7FC5E2F2D7CAC30>69 D<011FB612F8A2903900
FE000716014A13001778130117705CA21303A25C16E001071301170002E05B1503130F15
074A485A91B5FC5BECC01F4A6CC7FCA2133FA2EC000EA25B92C8FC137EA213FEA25BA212
01A25BA21203B512F0A22D2D7CAC2E>I<903B1FFFF81FFFF8A2D900FEC7EAFE00A24A5C
A2010114015F5CA2010314035F5CA2010714075F5CA2010F140F5F5C91B6FC5B9139C000
1F805CA2013F143F94C7FC91C7FCA2495C167E137EA201FE14FE5E5BA2000114015E5BA2
00031403B500C0B512C0A2352D7BAC35>72 D<90381FFFF8A2903800FE00A25CA21301A2
5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C7FCA25BA2137EA213FE
A25BA21201A25BA21203B512C0A21D2D7CAC1B>I<90381FFFFEA2D900FEC7FCA25CA213
01A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C7121CA249143C16
38017E1478167001FE14F0A249EB01E0A200011403ED07C049130FED3F80000314FFB7FC
1600262D7BAC2D>76 D<D91FFFED0FFF600100EE3FC0A2F07F8018EF902601EF8014FF94
3801DF0014CFEF039F01034B5A183E028F140E171C0107167EDA87C0EB387C1407177001
0FEDE0FC60010EEC01C0EE0380011E158193380701F090381C03E0160E013CEC1C036001
381438A20178EC700704E05B90387001F0EDF1C001F09038F3800F6001E0EBF700A20001
02FE131F4B91C7FC13C0486C6C5AD80FF05DD8FFFE9039F00FFFF815E0402D7BAC40>I<
011FB512E016FC903900FE003FEE0FC04AEB07E016030101EC01F0A24A14F8A21303EE03
F05CA20107EC07E017C04AEB0F80EE1F00010F143E16FC9138C007F091B512805B9138C0
0FE091388003F06F7E133F6F7E91C7FCA2491301A2017E5CA201FE1303A2495C17080001
163C17384914E0EEF07800031670B5D8C00113E09238007FC0C9EA1F002E2E7BAC34>82
D<91380FF00C91383FFC1C9138F80F3C903903C007BC9039078003FC90390F0001F8131E
491300A24914F0A313F816E0A216007F7F6D7EEB7FF8ECFF806D13E06D13F801077F0101
7FEB001FEC01FF6E7E8181A281121CA35D003C141EA25DA2007E5C5D007F495A6D485A26
F1F01FC7FC38E07FFC38C00FF0262F7BAD28>I<000FB712F0A23A1FE00FE00701001401
001E02C013E0481500141F12380078EC8001A20070013F14C012F0481400A25CC791C7FC
147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133F00
3FB57EA22C2D74AC33>I<EB07C0EB1FF090387C39C0EBF81FEA01F03803E00FEA07C012
0FD81F801380A2EA3F00141F481400127EA25C00FE133E5AA2EC7E18EC7C385AA214FCD8
78011378397C03F870A2393C0F78E0381E1E3D390FF81FC03903E00F001D1F799D24>97
D<13F8121FA21201A25BA21203A25BA21207A25BA2120FEBC7C0EB9FF0EBF878381FF03C
EBE03EEBC01EEB801FEA3F00A2123EA2007E133FA2127CA2147F00FC137E5AA214FCA214
F8130114F0EB03E0EA780714C0383C0F80381E3E00EA0FF8EA03E0182F78AD21>I<EB01
F8EB0FFE90383E0780EBFC03D801F013C03803E0070007130FEA0FC001801380121F48C8
FCA25A127EA312FE5AA5EC0180007CEB03C0EC0780EC0F006C131E001E137C380F83F038
07FFC0C648C7FC1A1F799D21>I<153EEC07FEA2EC007EA2157CA215FCA215F8A21401A2
15F0A21403EB07C390381FF3E0EB7C3BEBF81FEA01F03903E00FC0EA07C0120FEA1F8015
80EA3F00141F5A007E1400A25C12FE48133EA2EC7E18153848137CA214FCD87801137839
7C03F870A2393C0F78E0381E1E3D390FF81FC03903E00F001F2F79AD24>I<EB03F8EB0F
FEEB3E0FEBF8073901F00380EA03E0EA07C0000F1307D81F8013005C383F001E5C387F03
F8EBFFE049C7FC007EC8FC12FE5AA4127CEC0180EC03C0EC07806CEB0F00141E6C137C38
0F83F03803FFC0C648C7FC1A1F799D21>I<EC01F0EC07FCEC0F9EEC1F1EEC1E3EEC3E7E
A3EC7C381500A314FC5CA590387FFFF0A2903801F000A313035CA413075CA4130F5CA413
1F91C7FCA45B133EA4137E137CA3EA38F812FCA25B12FDEAF1E0EAF3C0EA7F80001EC8FC
1F3D81AE16>I<14F8EB03FE90380F873890381F03F8137EEB7C0113F81201EA03F015F0
EA07E01403120F01C013E0A21407121F018013C0A2140FA21580141F120F143FEC7F006C
6C5AEA03C33801FFBF38007E3E1300147EA2147CA214FC00385BEAFC015C495A48485A38
F01F80D87FFEC7FCEA1FF01D2C7C9D21>I<131FEA03FFA2EA003FA2133EA2137EA2137C
A213FCA25BA21201147E9038F3FF809038F787C03903FE03E013FC13F8A2EA07F013E0A2
13C0000F130715C01380A2001F130F15801300141F481406150E003E133F143E007E141E
EC7E1C007C137CEC3C3812FC157048EB1FE00070EB07801F2F7BAD24>I<130E131FEB3F
80A2EB1F00130E90C7FCA9EA03E0EA0FF0EA1E78EA1C7C12381278127013FCEAF0F812E0
12E1EAC1F0120112035B12075BA2120F13831387121F13075BEA3F0E123EEA1E1C133C13
38EA0FF0EA03C0112E7AAC16>I<131FEA03FFA2EA003FA2133EA2137EA2137CA213FCA2
5BA21201EC01E09038F007F0EC1E380003EB3878EC71F8EBE0E1EBE1C13807E381EC00E0
49130013CEEA0FFC13F0A213FF381F9FC0EB87E0EB03F01301003F14301570123EA2007E
14F015E0007C13E014E100FC14C0903800F38048EB7F000070131E1D2F7BAD21>107
D<137CEA0FFCA21200A213F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380
A2121FA21300A25AA2123EA2127EA2127CA2EAFC30137012F8A213F013E012F012F113C0
12FBEA7F80EA1E000E2F7AAD12>I<3B07801FC007F03B1FE07FF01FFC3B3DF1E0F8783E
3B38F3C078F01E3B78FF007DC01FD870FEEB7F80A2D8F1FC1400D8E1F8137EA249137C00
C302FC5B0003163E495BA200070101147E177C01C05B17FC000F0103ECF83018700180EB
E00117F0001F010715F0040313E0010001C013E0EFE1C048010F1301EFE380003E913980
00FF00001C6DC7123C341F7A9D3A>I<3907801FC0391FE07FF0393DF1E0F83938F3C078
3978FF007CEA70FEA2EAF1FCEAE1F8A25B00C314FC00035C5BA2000713015D13C0140300
0FECE0C015E1EB800715C1001F14C3020F13800100138391380787005A158E003EEB03FC
001CEB00F0221F7A9D28>I<EB03F8EB0FFE90383E0F809038FC07C03801F003D803E013
E01207390FC001F01380121FEA3F0014035A127EA2140700FE14E05AA2EC0FC0A2EC1F80
A2007CEB3F00143E5C6C5B381E01F0380F07C06CB4C7FCEA01FC1C1F799D24>I<90383C
01F09038FF07FC3901E79E1E9038C7BC0F000301F81380903887F00702E013C038078FC0
130F1480A2D8061F130F12001400A249131F1680133EA2017EEB3F00A2017C133E157E01
FC137C5DEBFE015D486C485AEC0F80D9F3FEC7FCEBF0F8000390C8FCA25BA21207A25BA2
120FA2EAFFFCA2222B7F9D24>I<903807C06090381FF0E0EB7C39EBF81FEA01F03903E0
0FC0EA07C0120FEA1F801580EA3F00A248131F007E1400A300FE5B48133EA3147E48137C
A214FCEA7801387C03F8A2EA3C0FEA1E1F380FF9F0EA03E1EA000113035CA313075CA213
0FA23801FFFCA21B2B799D21>I<3807803E391FE0FF80393CF3C1C03938F781E03878FF
07EA70FE13FC12F139E1F8038091C7FC5B12C312035BA21207A25BA2120FA25BA2121FA2
90C8FCA25AA2123E121C1B1F7A9D1E>I<EB0FC0EB7FF0EBF03C3801E01C3803C01EEA07
80143EA2000F133C1418EBC00013F813FF6C13C06C13E06C13F0EA007F130713031301EA
780012FCA2130100F813E012E0EB03C038F0078038781F00EA1FFCEA07F0171F7A9D1D>
I<131C133EA2137EA2137CA213FCA25BA21201A2B512E0A23803F000A25BA21207A25BA2
120FA25BA2121FA290C7FCA24813C01301123E130314801307003C1300130E131E6C5AEA
0FF0EA07C0132B7AA918>I<EA03C0D80FF01338D81E78137CD81C7C13FC003814F81278
1270EBFC01D8F0F813F012E012E138C1F003000114E0120313E01407000714C013C0A2EC
0FC3000F14871380A2141F158F0007EB3F0E147F01C0131C3903E1E7BC3901FF83F83900
7E01E0201F7A9D26>I<3903C001C0390FF003E0391E7807F0EA1C7C1238007813030070
130113FCD8F0F813E012E000E1130038C1F001000114C0120313E014030007148013C0A2
EC0700120F1380140EA25C12076D5A00035B6D5AC6B45A013FC7FC1C1F7A9D21>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc msbm7 7 2
/Fc 2 82 df<D901FE133090380FFFC090397F83F8709039FE007FF0D803CC131FD8071C
EB0E30D80E18EB07B0D80C381301D81C3014F0D838701300D83060147016301270006015
0013E0EAE0C012C0AA12E012607FEA70601230A2EA3870D81C30140CD80C38141CD80E18
1478D8071CEB01F0D803CEEB07C03A00F7807F0090387FFFFC010F13F0010190C7FC262A
7EA820>67 D<ECFF80010F13F890383F80FE9039FF007F80D801CCEB19C0D8039CEB1CE0
4848EB0E70D80E30EB0638001C81D81870EB070CD83860EB030E0030150600701507D860
E0148349130100E0168000C01581AA00E01583006016006D1303D870605C003015060038
150ED81870EB070CD81C30EB061C000E5DD80738EB0E70D8039C495AD801CCEB19C06CB4
EB7F8090263F80FEC7FC90380FFFF801031380EB0181ECC1C0EB00E0EC70E0EC3870EC1E
38EC079C0201B5FC6E7E29337EA82E>81 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr5 5 3
/Fd 3 51 df<EA01FCEA07FF380F0780381C01C0383800E0A2007813F000701370A200F0
1378AB00701370A2007813F0003813E0A2381C01C0380F07803807FF00EA01FC151D7D9B
1C>48 D<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>I<EA03FCEA0F
FF383C0FC0387003E0387801F0EAFC0014F8A214781278C712F814F0A2EB01E0EB03C0EB
0780EB0F00131C5B13E03801C018EA0380EA0600481338383FFFF05AB5FCA2151C7D9B1C
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsy5 5 1
/Fe 1 49 df<EA0380EA07C0A3EA0F80A313005A121EA2123E123CA212381278A21270A2
5AA20A157D9612>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmex10 10 8
/Ff 8 90 df<1406140F141FA2141E143EA2147CA214F8A214F01301A2EB03E0A2EB07C0
A21480130FA2EB1F00A2133EA2133C137CA25BA2485AA25B1203A2485AA2485AA290C7FC
5AA2123EA25AA2127812F8A41278127CA27EA27EA27E7FA26C7EA26C7EA212017FA26C7E
A2137CA2133C133EA27FA2EB0F80A2130714C0A2EB03E0A2EB01F0A2130014F8A2147CA2
143EA2141E141FA2140F14061862788227>10 D<126012F07EA21278127CA27EA27EA27E
7FA26C7EA26C7EA212017FA26C7EA2137CA2133C133EA27FA2EB0F80A2130714C0A2EB03
E0A2EB01F0A2130014F8A2147CA2143EA2141E141FA4141E143EA2147CA214F8A214F013
01A2EB03E0A2EB07C0A21480130FA2EB1F00A2133EA2133C137CA25BA2485AA25B1203A2
485AA2485AA290C7FC5AA2123EA25AA2127812F8A25A126018627A8227>I<160F161F16
3E167C16F8ED01F0ED03E0ED07C0150FED1F801600153E157E5D4A5A5D14034A5A5D140F
4A5AA24AC7FC143E147E5CA2495AA2495AA2495AA2130F5CA2495AA2133F91C8FCA25B13
7E13FEA25B1201A25B1203A35B1207A35B120FA35BA2121FA45B123FA690C9FC5AAA12FE
B3AC127FAA7E7FA6121F7FA4120FA27FA312077FA312037FA312017FA212007FA2137E13
7F7FA280131FA26D7EA2801307A26D7EA26D7EA26D7EA2147E143E143F6E7EA26E7E1407
816E7E1401816E7E157E153E811680ED0FC01507ED03E0ED01F0ED00F8167C163E161F16
0F28C66E823D>18 D<12F07E127C7E7E6C7E6C7E6C7E7F6C7E1200137C137E7F6D7E130F
806D7E1303806D7EA26D7E147C147E80A26E7EA26E7EA26E7EA2811403A26E7EA2811400
A281157E157FA2811680A2151F16C0A3150F16E0A3150716F0A31503A216F8A4150116FC
A6150016FEAA167FB3AC16FEAA16FC1501A616F81503A416F0A21507A316E0150FA316C0
151FA31680153FA216005DA2157E15FE5DA214015DA24A5AA214075DA24A5AA24A5AA24A
C7FCA2147E147C14FC495AA2495A5C1307495A5C131F49C8FC137E137C5B1201485A5B48
5A485A48C9FC123E5A5A5A28C67E823D>I<161E167EED01FE1507ED0FF8ED3FE0ED7FC0
EDFF80913801FE004A5A4A5A5D140F4A5A5D143F5D147F92C7FCA25C5CB3B3B3A313015C
A3495AA213075C495AA2495A495A137F49C8FC485A485AEA07F0EA1FE0485AB4C9FC12FC
A2B4FCEA3FC06C7EEA07F0EA03FC6C7E6C7E6D7E133F6D7E6D7EA26D7E801303A26D7EA3
801300B3B3B3A38080A281143F81141F816E7E1407816E7E6E7E913800FF80ED7FC0ED3F
E0ED0FF8ED07FE1501ED007E161E27C675823E>26 D<12F012FCB4FC13C0EA3FE0EA0FF8
6C7E6C7EC67E6D7E6D7E131F806D7E1307801303801301A2801300B3B3B3A38080A36E7E
A281141F6E7EA26E7E6E7E816E7E6E7EED7F80ED1FC0ED0FF0ED07F8ED01FEED007EA2ED
01FEED07F8ED0FF0ED1FC0ED7F80EDFF004A5A4A5A5D4A5A4A5AA24A5A143F5DA24AC7FC
A35C5CB3B3B3A313015CA213035C13075C130F495A5C133F495A49C8FCEA03FE485A485A
EA3FE0B45A90C9FC12FC12F027C675823E>I<BF12E08AA38A6C90CCFC0900806C6D1907
6C6D07007F6C6D1A1F1D076C6DF201FF6C6D747E6C6DF33F801E0F6C6D1B076D6CF303C0
6D6D1A01F600E06D7F6D6D1B706D1D30816D6D1B186D6D1B007F816E7E6E7FA26E7F6E7F
6E7FA26E7F6E7F6E7FA26F7E6F7F6F7FA26F7F6F7F81836F7F6F7F167F83707F707F8284
707F707FA2707F82715A60173F715A604D5A4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F16
3F4CCEFC16FE4B5A4B5A4B5AA24B5A4B5A4B5A4BCFFC15FEA24A5A4A5A4A481B184A481B
304A5A4B1B70023F1C604ACF12E002FE1B014948F303C049481B074948F30F801E1F4948
1B7F4948F3FF0049481A0349CE120F01FEF37FFEF403FF48481A7F4848077FB55A48BEFC
48655AA248655ABFFC666D747B7F78>88 D<BE12FEA5000302E0C9000F1480C66CF2FC00
011F1AF06D626D62A26D62B3B3B3B3B3A4496D4C7FA2496D4C7F496D4C7F017F01FF4BB5
12FC0003B600E0020FECFF80B8D88003B712FEA55F747B7F6A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi7 7 15
/Fg 15 114 df<48B61280000715C0481580481500263C0C06C7FC127012C0EB1C0EEA00
18A21338A2EB701EA313F013E01201141F120313C0000780A2380F800FA26C486CC7FC22
1A7D9827>25 D<010FB5FC013F148049140048B6FC2603F07EC7FC3807C01FEA0F80497E
5A123EA2003C5B127CA30078133E12F8143C0078137C14785C6C485A495A381E0F80D80F
FEC8FCEA03F8211A7D9826>27 D<48B512F8000714FC4814F84814F0D83C07C7FC1270EA
C006130E1200A3131E131CA2133CA35BA313F8A3485AA26C5A1E1A7D981F>I<013FB612
F0A2903901FC00074A1301160001031560A25CA21307A25CED0180010F0103130093C7FC
14C05D131F151EECFFFEA290383F801E150C1400A249131C1518137E92C8FC13FEA25BA2
1201A25BA21203B512F0A22C287DA72A>70 D<90263FFFF0EB7FF8A2D901FCC7EA1FC04A
EC1E005F010315704C5A4AEB03804CC7FC0107141C5E4A13E04B5A010FEB0780030EC8FC
4A5A157C011F13FE14C3EC877F149E90393FB83F8014F09138C01FC0148049486C7EA201
7E6D7EA201FE6D7EA2496D7EA200016E7EA249147FA2000382B539C007FFF8A235287DA7
38>75 D<4AB4FC021F13E091387E01F8903901F8007ED907E0131FD90F80EB0F8049C7EA
07C0137E49EC03E0485A4915F0484814011207485A4915F8121F90C8FC5A17F0007E1503
A4007CED07E012FC17C0160F1780161F007C1600163E007E157E003E017C5BD901FE5B3A
1F038701F09039070387C03A0F86018F80D807C6019FC7FCD803F613FC3900FF03F09039
3FFFC006EB07FDD90001130E6F5A163C6F5AEDFFF85E6E5B5E6F5A033EC7FC2D347DA834
>81 D<903B3FFFE00FFFC0A2010190390001FC006D4814F017C0027F495A4CC7FC6E130E
6F5A021F5B6F5A5E91380FE1C0EDE380DA07F7C8FC15FE6E5A5D6E7EA2811403EC077F14
0E4A7E02187FEC301F02607F14C049486C7EEB030001066D7E5B01386D7E5B01F06D7E48
5AD80FF0497ED8FFFC90381FFFE0A232287DA736>88 D<EB1F80EB7FC0EBF0E73803C03F
EA078048487EA2121E003E133E123C127CA2485BA4485B1530A3903801F060A2EA780301
0E13C0393C1CF980381FF07F3907C01E001C1B7C9924>97 D<EA01F0123FA2EA03E0A212
07A25BA2120FA25BA2121F139FEB3FC0EBE0E0383FC0F0EB0078A2123E007E137CA2127C
A212FC14F85AA338F001F0A214E0130314C0EB078038700F00EA781E6C5AEA1FF0EA07C0
16297CA71D>I<EB0FE0EB3FF8EBF81C3801E00E3803803E0007137EEA0F00001E137C12
3E003C1300127CA25AA45AA31404140C0078131814306C13E0381E07C0380FFF00EA03F8
171B7C991E>I<15F8141FA2EC01F0A21403A215E0A21407A215C0A2140FEB1F8F90387F
CF80EBF0EF3803C03FEA0780390F001F00A2001E5B123E003C133E127C147E5A147CA214
FC5AECF830A3903801F060A2EA7803010E13C0393C1CF980381FF07F3907C01E001D297C
A723>I<EC03E0EC0FF0EC1E38EC3C3C157CEC7CFC1478ECF8F815701500A2495AA590B5
12E0A2903803E000A4495AA5495AA649C7FCA5133EA4133C137C123CEA7C78127EEAFC70
13F0EA78E0EA71C0EA3F80001EC8FC1E357CA820>102 D<130E131F5BA2133E131C90C7
FCA7EA03E0487EEA0C78EA187C1230A212605B12C0A2EA01F0A3485AA2485AA2EBC180EA
0F81A2381F0300A213066C5A131CEA07F06C5A11287DA617>105
D<3907801FC0390FE07FF03918F0E0F83930F1807CEBFB00D860FE133C5B5B00C1147C5B
1201A248485BA34A5AEA07C01660EC03E0A23A0F8007C0C0A2EDC180913803C300D81F00
13C7EC01FE000EEB00F8231B7D9929>110 D<EB1F03EB7F873801E0CF3803C07FEA0780
380F003E5A121E003E137E003C137C127CA24813FC14F8A3EAF00114F0A3130314E0EA70
07EA780FEA3C3F381FF7C0EA07C7EA0007130F1480A3131F14005B3803FFF0A218257C99
1E>113 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy7 7 5
/Fh 5 113 df<B712FEA327037A8F34>0 D<1338A50060130C00F8133E00FC137E00FE13
FE383FBBF83807FFC000011300EA007C48B4FC000713C0383FBBF838FE38FE00FC137E00
F8133E0060130C00001300A517197B9A22>3 D<12E012F812FEEA3F80EA0FE0EA03F8EA
00FEEB3F80EB0FE0EB03F8EB00FEEC3F80EC0FE0EC03F8EC00FEED3F80ED0FE0ED03F8ED
00FE163E16FEED03F8ED0FE0ED3F80EDFE00EC03F8EC0FE0EC3F8002FEC7FCEB03F8EB0F
E0EB3F8001FEC8FCEA03F8EA0FE0EA3F80007EC9FC12F812E0CAFCAB007FB612FCB712FE
A227357AA734>21 D<13E0EA01F0EA03F8A3EA07F0A313E0A2120F13C0A3EA1F80A21300
A25A123EA35AA3127812F8A25A12100D1E7D9F13>48 D<186018E0170118C01703188017
07EF0F00170E171E171C173C17381778177017F05F16014C5A5F160794C7FC5E160E161E
161C163C1638486C147800075DD81FC05C003F1401D8F7E05C00C31403D803F05C000114
076D91C8FC00005C6D130E017C131E017E5B013E1338013F13786D1370EC80F0010F5B14
C101075B14E301035B14F76DB4C9FC5C13005C147C14781438333A7B8237>112
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmti10 10 47
/Fi 47 123 df<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B
1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F8000
7EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1
C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7
FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82
BA2F>12 D<150C151C153815F0EC01E0EC03C0EC0780EC0F00141E5C147C5C5C495A1303
495A5C130F49C7FCA2133EA25BA25BA2485AA212035B12075BA2120F5BA2121FA290C8FC
A25AA2123EA2127EA2127CA412FC5AAD1278A57EA3121C121EA2120E7EA26C7E6C7EA212
001E5274BD22>40 D<140C140E80EC0380A2EC01C015E0A2140015F0A21578A4157C153C
AB157CA715FCA215F8A21401A215F0A21403A215E0A21407A215C0140F1580A2141F1500
A2143EA25CA25CA2495AA2495A5C1307495A91C7FC5B133E133C5B5B485A12035B48C8FC
120E5A12785A12C01E527FBD22>I<EA03C0EA07F0120F121F13F8A313F0EA07B0EA0030
13701360A213E013C01201EA038013005A120E5A5A5A5A5A0D197A8819>44
D<387FFFF8A2B5FCA214F0150579941E>I<120EEA3F80127F12FFA31300127E123C0909
778819>I<EC03F8EC1FFEEC7C1F9138F80780D901E013C0903903C003E0EB0780010F13
01D91F0013F0A2133E137E017C130313FCA2485AA2000314075BA2120716E049130F120F
A34848EB1FC0A44848EB3F80A448C7EA7F00A3157E007E14FEA25D00FE13015DA248495A
A25D007C13075D4A5AA24AC7FC6C133E5C6C5B380F83E03807FF80C648C8FC243A77B72A
>48 D<15181538157815F0140114031407EC0FE0141F147FEB03FF90383FEFC0148FEB1C
1F13001580A2143FA21500A25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25C
A2130FA25CA2131FA25CA2133FA291C7FC497EB61280A31D3877B72A>I<EC03F8EC0FFE
91383C0F809138F007C0903901E003E0D903C013F09038078001020013F8130E131E9039
1C6000FCEB3870EC30011370A213F013E0EC70030001016013F813C014E0ECC00701C114
F0903881800F018314E09039C7001FC001FEEB3F80D80078140090C7127E5D4A5A4A5AEC
07C0EC1F80023EC7FC14FCEB01F0EB07C0495A011EC8FC137C4914C0484813015B485A48
48130348C71380000E1407001E140F48EC1F00D83FF85B397FFFC07E39783FFFFCEA700F
D8F0075BD8E0015B6D13C0021FC7FC263A79B72A>I<EC03FCEC1FFF91387E07C09138F0
03E0903903C001F0D9078013F849C7FC131E011C14FC133CEB38C0EB78E0EB7060150101
F014F813E0A2ECE003D971C013F090387F8007D91E0013E090C7EA0FC0ED1F80ED3F0015
7E5D49B45A4913E092C7FC9038000FC0EC03F014016E7E81A381A5007E130100FE5CA314
03485C00E05C14074A5A5D4A5A007049C7FC0078137E6C13F8381E07F03807FF80D801FC
C8FC263A78B72A>I<16E0ED01F01503A3150716E0A3150F16C0A2151F1680A2ED3F00A3
157EA2157C15FC5D14015D14035D14075D140F5D141F92C7FC143EA25CECF81C153E9038
01F07EEB03E014C090380780FE130F49485A133EEB7C01137801F05BEA01E03803C003EA
0FFE391FFFC3F04813FB267C01FF13403AF0003FFFE000601307C71400EC0FE05DA3141F
5DA3143F92C7FCA4143E141C24487DB72A>I<010314186E13F8903907F007F091B512E0
16C01600495B15F8010E13E0020CC7FC011EC8FC131CA3133C1338A313781370A2147F90
38F3FFC09038EF83E09038FC01F0496C7E485A497F49137CC8FC157EA315FEA41401000C
5C123F5A1403485C5A4A5A12F800E05C140F4A5A5D6C49C7FC0070137E00785B387C01F8
383E07F0381FFFC06C90C8FCEA01F8253A77B72A>I<157F913803FFC0020F13E0EC3F81
91387E00F002F81370903903F003F0903807E007EB0FC0EB1F80020013E04914C0017E90
C7FC13FE5B485AA21203485AA2380FE07E9038E1FF809038E783E0391FCE01F09038DC00
F813F84848137C5B157E5B485AA390C712FE5A5AA214015D5AA214035DA348495A5D140F
5D4A5A6C49C7FC127C147C6C485A6C485A6CB45A6C1380D801FCC8FC243A76B72A>I<D9
707C130ED9F3FE131E496C133C48B5133816784815F0EC0F019039FC0703E03A07F00307
C001E0138F3A0FC001FF80497E48C7EA0F00001E5C48141E153E48143C157C485C5A4A5A
C7FC4A5AA24A5A140FA24A5AA24AC7FCA25C147E14FE5C1301A25C1303A2495AA3130F5C
A2131F5CA2133FA25C137FA391C8FC137E133C273A74B72A>I<EC01FCEC0FFF023F13C0
91387E07E0903901F803F0903803E001D907C013F890380F8000A249C7FCA2133EA21501
017E14F0A21503017F14E0ED07C09138800F809138C01F0090383FF03E6E5A90381FFCF0
ECFFE06D138013036D7F497F90380F7FF890383E3FFCEB781F48486C7E3803E0073907C0
01FF48487E001F8090C7FC003E80127E127CA200FC143E5AA25DA25DA24A5A6C495A007C
495A007E495A6C013FC7FC381F80FE380FFFF8000313E0C66CC8FC253A78B72A>I<EC01
FCEC0FFF023F138091387E07C0903901F803E0EB03F0903907E001F0EB0FC0EB1F80013F
14F814005B137E13FEA2485AA2150312035BA2ED07F012075B150FA216E00003141FA215
3FED7FC0120115FF6C6C5A90397803BF8090383C0F3FD91FFC1300903807F07F90C7FC15
7E15FE5D14015D4A5AA2003E495A007F495A5D4AC7FC00FE5B48137E007013F8387803F0
387C0FE0383FFF806C48C8FCEA03F8253A78B72A>I<133C137E13FF5AA313FE13FCEA00
701300B2120EEA3F80127F12FFA31300127E123C102477A319>I<EB0780EB0FC0EB1FE0
133FA314C01480EB0E0090C7FCB2EA03C0487E487E121FA45B1207EA006013E05BA21201
5B120390C7FC5A120E5A121812385A5A5A13347AA319>I<0007B812FE4817FFA26C17FE
CCFCAE007FB812C0B912E0A26C17C03816779F40>61 D<EE01C01603A21607160FA2161F
83163FA2167F16FF16EF150116CFED038FA2ED070FA2150E151E151C1538A203707FA2ED
E007A2EC01C014031580EC0700A2140EA25CA25C027FB5FCA291B6FC9139E00007F84948
1303A2495A130791C7FC5B130E5BA25B1378137013F0EA03F8486C4A7EB56C48B512F0A3
343C7BBB3E>65 D<0107B512FCA25E9026000FF8C7FC5D5D141FA25DA2143FA25DA2147F
A292C8FCA25CA25CA21301A25CA21303A25CA21307A25CA2130F170C4A141CA2011F153C
17384A1478A2013F157017F04A14E01601017F140317C091C71207160F49EC1F80163F49
14FF000102071300B8FCA25E2E397BB834>76 D<902603FFF891B512E0A281D900079238
07F8006F6E5A61020F5E81DA0E7F5DA2021E6D1307033F92C7FC141C82DA3C1F5C70130E
EC380FA202786D131E0307141C147082DAF003143C70133814E0150101016E1378030014
705C8201036E13F0604A1480163F010715C1041F5B91C7FC17E149EC0FE360010E15F316
07011E15FF95C8FC011C80A2013C805F1338160013785F01F8157CEA03FC267FFFE0143C
B51538A243397CB83E>78 D<0103B612F017FEEFFF80903B0007F8003FC04BEB0FF01707
020FEC03F8EF01FC5DA2021F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7120F18
E04AEC1FC0EF3F004A14FEEE01F80101EC0FE091B6128004FCC7FC9138FC003F0103EC0F
80834A6D7E8301071403A25C83010F14075F5CA2011F140FA25CA2133F161F4AECE007A2
017F160F180E91C7FC49020F131C007F01FE153CB5913807F078040313F0CAEAFFE0EF3F
80383B7CB83D>82 D<0007B812E0A25AD9F800EB001F01C049EB07C0485AD90001140312
1E001C5C003C17801403123800785C00701607140700F01700485CA2140FC792C7FC5DA2
141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2
130FA25CEB3FF0007FB512F8B6FCA2333971B83B>84 D<14F8EB07FE90381F871C90383E
03FE137CEBF801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A214
07485C5AA2140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C485B90
38038F8E391F0F079E3907FE03FC3901F000F0222677A42A>97 D<133FEA1FFFA3C67E13
7EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE9038EF0F80390FFC07C013F89038
F003E013E0D81FC013F0A21380A2123F1300A214075A127EA2140F12FE4814E0A2141F15
C05AEC3F80A215005C147E5C387801F8007C5B383C03E0383E07C0381E1F80D80FFEC7FC
EA01F01C3B77B926>I<147F903803FFC090380FC1E090381F0070017E13784913383901
F801F83803F003120713E0120FD81FC013F091C7FC485AA2127F90C8FCA35A5AA45AA315
3015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00380F81F83803FFE0C690
C7FC1D2677A426>I<ED01F815FFA3150316F0A21507A216E0A2150FA216C0A2151FA216
80A2153FA202F81300EB07FE90381F877F90383E03FF017C5BEBF80112013803F0004848
5B120FEBC001121F5DEA3F801403127F01005BA214075A485CA2140FA248ECC1C0A2141F
15C3ED8380143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC
3901F000F0253B77B92A>I<147F903803FFC090380FC1E090383F00F0017E13785B485A
485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8
FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E003807
81F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F91401
15F1020313F8EDF0F0160014075DA4140F5DA4141F5D010FB512C05B16809039003F8000
92C7FCA45C147EA414FE5CA413015CA413035CA413075CA4130F5CA3131F5CA391C8FC5B
121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C82BA19>I<EC07C0EC3F
F09138FC38E0903901F01FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E13
0F13FE4914C01201151F1203491480A2153F1207491400A25DA249137EA215FEA25D0003
1301140314076C6C485A0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D
121C007E131F5D00FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA4
26>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC
1FFCEC783E9038FFE01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F0007
15005BA25D000F147E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A216
704814E0007E15F016E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A>
I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA2
12385B1270A25BEAF07E12E013FEC65AA212015B1203A25B12075BA2000F13E013C013C1
001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>I<EB03F0
EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB0F80ED3FE015F09039
FE01C1F09038FC0387EC0707140E0001011C13E0EBF83891383003800270C7FC00035BEB
F1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E147F80001F809039801F
81C0A21583003F013F138001001303A21507481500007E133EEC1E0E151E00FE6D5A48EB
07F80038EB01E0243B7BB926>107 D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25B
A2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123F
A290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA
0F80123B79B915>I<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E
3C03E1E01F261C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C0
02805B4A4848EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C000117
7E495C18FE031F5C120349DA8001131C18F8033F153C00070403133849020013F0A24B15
70000F17E049017E15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C
3E2679A444>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39
383FF00114E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F
00015D5B151F5E12034990383F8380160316070007027F130049137EA2160E000F147C49
141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC09038
0FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F12
7F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F
80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C0
90391FE03FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013
E05CEA01E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5E
EC80035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA2
5BA21201A25BA21203A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E
783C0F381C7C703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FC
EAE0FE5BA2120012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E2126
79A423>114 D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F000
01130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C013
00143F141F140F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB4
5AD801FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E00
7FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C00
3F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B3
1C>I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C0
1270013F131F00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE12
0349EBFC0EA20201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A
00F83C78E090393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071E
EB7F80EA0E1F121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B
150E12015B151E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC00
01130E3800F83CEB7FF8EB0FC0212679A426>I<01F01507D803FC903903801F80D8071E
903907C03FC0D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8F07E
168000E0ED000313FEC64849130718000001147E5B03FE5B0003160E495BA2171E000701
01141C01E05B173C1738A217781770020314F05F0003010713016D486C485A000190391E
7C07802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>I<13F0D803FCEB
01C0D8071EEB03E0D80E1F1307121C123C0038140F4914C01270A249131FD8F07E148012
E013FEC648133F160012015B5D0003147E5BA215FE00075C5BA214015DA314035D140700
03130FEBF01F3901F87FE038007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E
147C007E13FC387001F8EB03E06C485A383C1F80D80FFEC8FCEA03F0233679A428>121
D<903903C0038090380FF007D91FF81300496C5A017F130E9038FFFE1E9038F83FFC3901
F007F849C65A495B1401C7485A4A5A4AC7FC141E5C5C5C495A495A495A49C8FC131E5B49
131C5B4848133C48481338491378000714F8390FF801F0391FFF07E0383E1FFFD83C0F5B
00785CD8700790C7FC38F003FC38E000F021267BA422>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmsy10 10 24
/Fj 24 111 df<007FB81280B912C0A26C17803204799641>0 D<121C127FEAFF80A5EA
7F00121C0909799917>I<0060150600F8150F6C151F007E153F6C157E6C6C14FC6C6CEB
01F86C6CEB03F06C6CEB07E06C6CEB0FC06C6CEB1F80017EEB3F006D137E6D6C5A90380F
C1F8903807E3F0903803F7E06DB45A6D5B6EC7FCA24A7E497F903803F7E0903807E3F090
380FC1F890381F80FC90383F007E017E7F49EB1F804848EB0FC04848EB07E04848EB03F0
4848EB01F84848EB00FC48C8127E007E153F48151F48150F00601506282874A841>I<15
301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A3007FB812F8B912FCA26C17F8
36367BB641>6 D<EB1FF0EBFFFE487F000714C0390FF01FE0391F8003F0393F0001F800
3E130048147CA20078143C00F8143EA248141EA56C143EA20078143C007C147CA26C14F8
003F1301391F8003F0390FF01FE06CB512C0000114006C5BEB1FF01F1F7BA42A>14
D<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA96C14FCA36C
14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>I<007FB812F8B912FC
A26C17F8CCFCAE007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F83628
7BA841>17 D<020FB6128091B712C01303010F1680D91FF8C9FCEB7F8001FECAFCEA01F8
485A485A485A5B48CBFCA2123EA25AA2127812F8A25AA87EA21278127CA27EA27EA26C7E
7F6C7E6C7E6C7EEA00FEEB7F80EB1FF86DB71280010316C01300020F158091CAFCAE001F
B812804817C0A26C1780324479B441>I<126012F812FEEA7F80EA3FE0EA0FF8EA03FEC6
6C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8
ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0171FEF7F80933801FF00EE
07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948
C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAE007F
B81280B912C0A26C1780324479B441>21 D<D93F801508D9FFF0151C00037F4813FE487F
4814C09026C07FE0143C273F000FF01438003CD907FC147848EB01FE6E6C6C13F0007091
383FC00300F091391FF80FE0486EB5FC030314C06F14806F6C1300EE3FFC0040ED07F036
137B9D41>24 D<1478A414F85CA213015C1303495AA2495A49CCFC5B137E5B485A485AEA
0FE0003FBA12FEBCFCA2003F19FED80FE0CCFCEA03F06C7E6C7E137E7F7F6D7E6D7EA26D
7E1301801300A2801478A4482C7BAA53>32 D<181EA4181F84A285180785727EA2727E72
7E85197E85F11F80F10FC0F107F0007FBA12FCBCFCA26C19FCCCEA07F0F10FC0F11F80F1
3F00197E61614E5A4E5AA24E5A61180F96C7FCA260181EA4482C7BAA53>I<D90FF0ED07
F0D93FFEED3FFE90B56C91B5FC00036E903903F807C02707F07FF0903907C001E0270F80
1FF890390F8000F090260007FC013EC71270001E6D6C491438486D6C0178141C00386D6D
5A48DA7FC1150E92383FE3E0006091261FF3C01406EEF78000E0DA0FFF1507486E90C812
036F5AA26F7E6F7F707EA24C7E6C4A6D14070060DBEFF81406ED03CF0070912607C7FC14
0E92380F83FE6CDB01FF141CDB1E006D133C6C023E6D6C13786C4A6D6C13F0000FD901F0
90381FF8016C6C484890390FFE0FE02703E01FC00103B512C0C6B5C76C1400D97FFC9138
007FFCD90FE0ED0FF048267BA453>49 D<91381FFFFE91B6FC1303010F14FED91FF0C7FC
EB7F8001FEC8FCEA01F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE
16FFA216FE00F0C9FCA27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80
EB1FF06DB512FE010314FF1300021F13FE283279AD37>I<126012F0AD12FCA412F0AD12
6006207BA400>55 D<ED03FE92381FFF80037F13C00203B5FCEC07C091381E003F4A131F
14F049481480495A495A49C7EA3F005B133E49147EA249147C000115FC495C0003EC01E0
495C000791C8FC5B120FA2485AA3123F90CAFCA35AA2127EA312FEA87E161E5E6D14F812
7F6D495A4B5A6C6C5C6D495A6C6C49C7FC01FE133C390FFF80F86CEBFFE06C1480C649C8
FCEB3FF02A3D7FBA2C>67 D<DA0FF81507DAFFFC151E01036D153E010F177ED93F035EEB
78013801E00048484C5A485A000F5C48C74B5A5A003E1301484D5A127812C0C7494A5AA3
02034B5AA25D4EC7FCA214074B5C187EA24A5A49B75A13075B4915FD903B001F800001F8
A24AC7FC170360147EA2170714FE4A5DA34948140FA25C130360495AA2051FEB07804948
EE0F00193F4AEDE03E011F705A91C8EBFFF8013E17E0013C6F138090C9D807F8C7FC413D
7FB846>72 D<0060161800F0163CB3B26C167CA2007C16F8A26CED01F0003F15036C6CEC
07E06C6CEC0FC0D807F0EC3F80D803FE903801FF003A00FFC00FFC6DB55A011F14E00103
91C7FC9038007FF82E347CB137>91 D<EC01F8140FEC3F80ECFC00495A495A495AA2130F
5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E13
1F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102
D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC
1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA
07F0EAFFC000FCC8FC1D537ABD2A>I<14C0EB01E01303A214C01307A21480130FA2EB1F
00A2131E133EA25BA2137813F8A2485AA25B1203A25B1207A2485AA290C7FC5AA2123EA2
123C127CA2127812F8A41278127CA2123C123EA27EA27E7FA26C7EA212037FA212017FA2
6C7EA21378137CA27FA2131E131FA2EB0F80A2130714C0A2130314E0A21301EB00C01352
78BD20>I<126012F07EA21278127CA2123C123EA27EA27E7FA26C7EA212037FA26C7EA2
12007FA21378137CA27FA2131E131FA2EB0F80A2130714C0A2130314E0A414C01307A214
80130FA2EB1F00A2131E133EA25BA2137813F8A25B1201A2485AA25B1207A2485AA290C7
FC5AA2123EA2123C127CA2127812F8A25A126013527CBD20>I<126012F0B3B3B3B3A912
60045377BD17>I<126012F07EA21278127CA2123C123EA2121E121FA27E7FA212077FA2
12037FA212017FA212007FA21378137CA2133C133EA2131E131FA27F80A2130780A26D7E
A2130180A2130080A21478147CA2143C143EA2141E141FA2801580A2140715C0A2140315
E0A2140115F0A2140015F8A21578157CA2153C153EA2151E150C1F537BBD2A>110
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmcsc10 10 29
/Fk 29 123 df<B512FCA516057E941F>45 D<121C127FEAFF80A5EA7F00121C09097788
1B>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8EB7FF0B612F8A31D3877B72E>
49 D<150EA3151FA24B7EA34B7EA3EDDFE0A202017F158FA29138030FF81507A202067F
1503020E7FEC0C01A2021C7FEC1800A24A80167FA24A6D7EA202E0804A131FA249488016
0FA249B67EA249810106C71203A249811601A2498182A2496F7EA20170820160153F13E0
6D821203D80FFCED7FF8B56C010FB512E0A33B3C7CBB44>65 D<B812FEA3000190388000
076C90C8FC173F838383A383A318801701A21660A294C7FCA416E0A21501150791B5FCA3
EC000715011500A21660A693C8FCAD4813C0B612E0A331397CB83B>70
D<DB7FC01330912607FFF81370023F13FE913AFFC01F80F0903A03FE0003E1D907F8EB00
F3D91FE0147B4948143F4948141F49C8120F4848150748481503A24848150148481500A2
485A1870123F5B1830127FA34993C7FC12FFAA047FB512C0127F7F9339003FF800EF0FF0
123FA27F121F7F120FA26C7E6C7EA26C7E6C6C151F6D7E6D6C143FD91FF0147BD907F814
F1D903FEEB01E0903B00FFE00FC070023FB5EA0030020701FC90C7FC9138007FE03A3D7A
BA47>I<B5933801FFFE6E5DA2000119002600DFC0ED06FEA2D9CFE0150CA3D9C7F01518
A2D9C3F81530A3D9C1FC1560A2D9C0FE15C0A3027FEC0180A26E6CEB0300A36E6C1306A2
6E6C5BA26E6C5BA36E6C5BA26E6C5BA36E6C5BA292387F0180A3DB3F83C7FCA2ED1FC6A3
ED0FECA2ED07F8A3486C6D5A487ED80FFC6D48497EB500C092B512FEA26F5A47397BB852
>77 D<B7FC16F016FE000190398001FF806C90C7EA3FE0EE0FF0707E707E707EA2838284
A695C7FC5E5F5F1603EE07F04C5AEE3F80DB01FEC8FC91B512F816E091380003FCED00FE
EE7F80707E707E707EA2160783A583A61930A28316031970486D6D6C1360B66D14E09438
7F81C094383FC380CA380FFF00EF01FC3C3B7CB842>82 D<003FB812FCA3D9C001EB8003
90C790C7FC007C173E0078171E0070170EA300601706A400E01707481703A4C81500B3B0
020313C0010FB612F0A338397CB841>84 D<1407A24A7EA34A7EA3EC37E0A2EC77F01463
A2ECC1F8A201017F1480A2903803007EA301067FA2010E80010C131FA2496D7EA2013FB5
7EA29038300007496D7EA3496D7EA200018149130012036D801207D81FE0903801FF80D8
FFF8010F13F8A22D2C7DAB33>97 D<91383FC006903901FFF80E90390FE03E1E90381F00
07017EEB03BE01F8EB01FE484813004848147E0007153E485A001F151E5B003F150E90C8
FC5A1606A212FE1600AA007F1506A37E6D140E001F150C7F000F151C6C6C141800031538
6C6C14706C6C14E0017EEB01C0011FEB078090390FE03E00903801FFF89038003FC0272D
7BAB31>99 D<B612F015FE3907F8007F6C48EB0FC0ED03E06F7E6F7E167C167E82A2EE1F
80A217C0160FA317E0AA17C0A3EE1F80A217005E163E5E16FC4B5A4B5AED0FC0486CEB7F
80B600FEC7FC15F02B2B7CAA34>I<B712E0A23907F8000F6C481303ED00F01670A21630
A41618A215C01600A31401A2140790B5FCA2EBF0071401A21400A21606A21500A2160CA4
161CA2163C167C16F8486C1307B7FCA2272B7CAA2E>I<B712C0A23907F8001F6C481303
ED01E01500A21660A41630A215C01600A31401A2140790B5FCA2EBF0071401A21400A492
C7FCAB487EB512E0A2242B7CAA2C>I<91383FE003903901FFF807903907E01E0F90391F
00078F017EEB01DF496DB4FC484880484880484880485A001F815B003F8190C8FC5A82A2
12FE93C7FCA892383FFFF8A2007F02001380EE3F00A27E7F121F7F120F6C7E6C7E6C6C5C
6C7E017E5C011FEB01CF903907E00F87903901FFFE039026003FF0C7FC2D2D7BAB35>I<
B539C07FFFE0A23B07F80003FC006C486D5AB190B6FCA29038F00001B2486C497EB539C0
7FFFE0A22B2B7CAA33>I<B512C0A23807F8006C5AB3B3487EB512C0A2122B7CAA19>I<B5
12E0A2D807F8C8FC6C5AB3A61660A416C0A31501A21503A21507ED1F80486C13FFB7FCA2
232B7CAA2B>108 D<D8FFF0ED3FFC6D157F0007178000031700017C15DFA26DEC019FA3
6DEC031FA26D6C1306A36D6C130CA26D6C1318A26D6C1330A36D6C1360A2027C13C0A391
383E0180A291381F0300A3EC0F86A2EC07CCA3EC03F8A2486C6C5AA2D81FE0ED3F803CFF
FC00E007FFFCA2362B7CAA3E>I<D8FFF0903807FFE07F0007020013006C6C143C7F017F
14187F806D7E130F806D7E6D7EA26D7E6D7E147E147FEC3F80141F15C0EC0FE0EC07F014
0315F8EC01FC140015FE157FED3F98151F16D8ED0FF81507A215031501A2486C13001678
D81FE01438EAFFFC16182B2B7CAA33>I<EC7FC0903803FFF890380FC07E90393F001F80
017CEB07C04848EB03F048486D7E4913004848147C000F157E484880A248C8EA1F80A248
16C0A2007E150FA200FE16E0AA007FED1FC0A36C16806D143F001F1600A26C6C147E6C6C
5CA26C6C495A6C6C495AD8007CEB07C0013FEB1F8090260FC07EC7FC903803FFF8903800
7FC02B2D7BAB35>I<B612E015FC3907F800FE6C48EB1F80ED0FC0ED07E016F01503A216
F8A516F0A2150716E0ED0FC0ED1F80EDFE0090B55A15E001F0C8FCB1487EB512C0A2252B
7CAA2E>I<EC7FC0903803FFF890380FC07E90393F001F80017CEB07C04848EB03F04848
6D7E4913004848147C000F157E484880A2003F168090C8121F4816C0A2007E150FA200FE
16E0AA007E16C0007F151FA26C1680A26C6CEC3F00141F3A0FC03FC07E0007903870E07C
9039E0E060FC3A03F0C071F8D801F8EB3BF0D8007CEB3FC090393FE01F8090260FF07EC7
FC902603FFFC13609038007FDEEC001E6F13E016011683EEFFC0A28117806F13006F5AED
00782B387BAB35>I<B67E15F03907F800FE6C48133FED0FC06F7EA26F7E82A65E4B5AA2
4B5A033FC7FC15FE90B512F05D9038F001F8EC007E816F7EA26F7EA582A4171816F01507
1738486C903803F830B5D8C00113709238007FE0C9EA1F802D2C7CAA32>I<017F136039
01FFE0E0380780F9380E001F48130748130312780070130100F01300A315607EA26C1400
7E127F13C0EA3FFEEBFFE06C13F8000713FE6C7FC61480010F13C01300EC0FE01407EC03
F01401A212C01400A37E15E06C1301A26CEB03C06CEB0780B4EB0F0038F3E01E38E0FFF8
38C01FE01C2D7BAB26>I<007FB712C0A23A7E003FC00F007890381F8003007015011600
126000E016E0A2481660A5C71500B3A8EC7FE0011FB57EA22B2B7DAA31>I<B539C007FF
E0A2D807F8C713006C48143CA21618B3A916386C6C1430A2000015706D5C017C5C6D1301
6D495A90260F800FC7FC903803E03C903800FFF8EC3FC02B2C7CAA33>I<B56CEB3FFEA2
D80FFCC7EA0FF06C48EC07E00003ED03C01780000116006D5C00001506A2017E5CA2017F
141C6D141880011F5CA26D6C5BA28001075CA26D6C485AA2ECF803010191C7FCA2903800
FC06A2ECFE0EEC7E0C147F6E5AA2EC1FB0A215F06E5AA26E5AA36E5AA22F2C7EAA33>I<
003FB6FCA29038E0007F90C712FE003E495A123C0038495A48495AA24A5A00605C141F4A
5AA2C748C7FC14FEA2495A495AA2495A5C130F495AA2495A49C8FCED018013FE485AA248
5A4913031207485AED0700485A48485B5D48C75A00FE49B4FCB7FCA2212B7BAA2A>122
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl msbm10 10 5
/Fl 5 91 df<DB7FF813600207B513E0023F14C09139FFF81FF101039038C007FF90390F
EF0001D91F9EEB007FD93E3C143CD97878141ED9F070140F2601E0F0140748485AD80781
1503380F01C0D80E031501001E5B001C1600EA3C07003890C9FCA200781760007017005B
130E12F012E0AB12F01270130F7F12781238A2003C7FEA1C03121E000E6D150CD80F0116
1C260781E0153CD803C016786C6C6C15F02600F0701401D97878EC03E0D93E3CEC07C0D9
1F9FEC1F8090260FEFC0EB7F00903A03FFF807FC010090B55A023F14E002071480912600
7FF8C7FC363D7DBA27>67 D<007FB612C0B712FC6C15FF2703C01E071380000190393C01
C7E00238EBE1F0923800E0F81738EEF03CEE701C171E170EA7171E171CEEF03CEEE03817
F8923801E1F0EEC7E0923803FF80023FB5120016FC16E00238C8FCB3A60003133C007FB5
12F0B6FC7E2F397EB834>80 D<913801FFF0021F13FF027F14C0903A01FFC07FF0010790
38001FFCD91FFCEB07FFD93F78903803DF80D97C70903801C7C0D9F0F0ECE1E048484890
3800E0F0D803C1EDF078260781C0EC703C0103ED781C000F49EC381E000E170ED81E07ED
3C0F001C90C8EA1C07003C188000381703007818C00070170149151E010E150EA200F018
E000E01700AB00F01701007018C0A2010F151E6D151C0078170300381880003C1707001C
1800001E6DEC3C0FD80E03ED380E000F171E00076DEC781C0181ED703C2603C1E0ECF078
D801E04B5A6C6C6C903801E1E0D97C70ECC7C0D93F78903803DF80D91FFC49B4C7FCD907
FFEB1FFC01019038C07FF06D6CB512C0021F91C8FC6E13FC913807001E6F7E6E6C6C7E02
01EB03E09238E001F8913B00F000FF01C0037CEB3FFF6F130F92261F80011380923A07E0
007E00923903FC03FC0300B512F0043F13C0DC07FEC7FC3B4B7DBA35>I<007FB612E0B7
12FE6C6F7E2703C01E0313E0000190393C00F3F00238EB70F8EE783CEE381E83EE3C0716
1C18801703A617071800EE3C0FEE380E173EEE78FCEEF7F892380FFFE0023FB5128004FC
C7FC16B8913838F03CED701CED781EED380EED3C0FED1C07031E7FED0E03030F7FED0701
EE81E0ED0380707E030113701778EEE0380300133C707EEE700EEE780F9338380780EE3C
03041C13C093381E01E00003013C90380E00F0007FB539F00FFFFEB67F6C8137397DB836
>I<0007B712FC5AA23B0E1FF003C038903A3F0007807801FC4A5AD80FF0495B49EB0E01
D81F80011E5BED3C0390C738380780001E027890C7FCED700FEDF00E001C903801E01E4B
5A02031338C7EB80780207137091380F00F091380E01E0021E5BEC1C03023C5BEC380702
7890C8FC4A5AECE01E0101131CECC03C0103133890380780784A5A495BEB0E01011E49EB
0180D93C0314039038380780017890C7FCD9700F1407EBF00E3801E01E4948EC0F000003
1338D980785C00071370D900F05C48495CD81E0115F7261C03C0EB01E7003C49495AD838
07EC0F8E007890C7EA3F0E4848EB01FEB812FEA331397DB83E>90
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr8 8 64
/Fm 64 123 df<13E0EA01F01203A2EA07E0EA0FC0EA1F00121E5A5A12E012400C0C72AD
23>19 D<13031307130E131C1338137013F0EA01E013C01203EA0780A2EA0F00A2121EA3
5AA45AA512F8A25AAB7EA21278A57EA47EA37EA2EA0780A2EA03C0120113E0EA00F01370
1338131C130E1307130310437AB11B>40 D<12C07E12707E7E7E120FEA0780120313C0EA
01E0A2EA00F0A21378A3133CA4131EA5131FA2130FAB131FA2131EA5133CA41378A313F0
A2EA01E0A2EA03C013801207EA0F00120E5A5A5A5A5A10437CB11B>I<123C127EB4FCA2
1380A2127F123D1201A312031300A25A1206120E5A5A5A126009157A8714>44
D<B512C0A412047F9018>I<123C127E12FFA4127E123C08087A8714>I<EB3FC0EBFFF038
03E07C48487E48487E497E001EEB0780A2003E14C0A248EB03E0A500FC14F0B0007C14E0
A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E3803F0FC3800FFF0EB3FC01C2D
7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23
>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E012F000FC14
F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C495A495A495A
495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A4814C0B6FCA2
1C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F80003F14C0A2EB800F13
00A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00FC143FEC1F8015C0
140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C00070131F6C1480001EEB3F
00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E143EA2147E14FEA2EB01BE
1303143E1306130E130C131813381330136013E013C0EA0180120313001206120E120C5A
123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7EAC23>I<000CEB0180
380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7FF8380DE07C380F80
1F01001380000E130F000CEB07C0C713E0A2140315F0A4127812FCA448EB07E012E00060
14C00070130F6C14806CEB1F006C133E380780F83801FFE038007F801C2D7DAB23>I<EB
03F8EB0FFE90383E0780EBF8013901F007C03803E00FEA07C0EA0F80A2391F00078091C7
FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FDC01EB4487E01001380EC07C04814E0
A214034814F0A4127CA3127EA2003E14E01407121E001F14C06CEB0F803907801F003803
C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<1230123C003FB512F8A215F05A15E03970
0001C000601480140348EB0700140E140CC7121C5C143014705C495AA2495AA249C7FCA2
5B130E131EA2133EA3133C137CA413FCA913781D2E7CAC23>I<EB1FC0EBFFF03803E07C
3807801E48487E001EEB0780A248EB03C0A4123E1407003F1480381FC00F01E01300EBF8
1E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803C7FFD807831380D81F0013C0001E13
3F48EB1FE0007C13070078EB03F012F84813011400A46C14E000781301007C14C0003C13
036CEB0780390F800F003807E03C3801FFF038003FC01C2D7DAB23>I<EB3F80EBFFF038
03E0783807C03E48487E48487E003E14801407007E14C0127C00FC14E01403A315F0A500
7C1307127EA2003E130F7E6C131F3807803B3803E0F33800FFC390383F03E013001407A2
15C0A2140F001E1480003F14005C143E143C003E5B001C5B380E03E03807FF80D801FEC7
FC1C2D7DAB23>I<4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC30FCA2EC70FEEC607EA2
4A7EA349486C7EA2010380EC000FA201066D7EA3496D7EA2011FB57EA29038180001496D
7EA349147EA201E0147F4980A20001ED1F801203000716C0D80FF0EC3FE0D8FFFC0103B5
FCA2302F7EAE35>65 D<B612FCEDFF803A03F8000FC00001EC03F06F7E6F7E82167E167F
A6167E16FE5E4B5A4B5AED0FE0ED7F8090B6C7FC16E09039F80003F0ED01FC6F7E167F82
1780161F17C0A61780163F17005E16FEED03FC0003EC0FF0B712C04BC7FC2A2D7DAC32>
I<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC71277017C143F4848141F
4848140F48481407A248481403121F491401123F90C8FC481500A300FE1600AB127F17C0
A27E7F001F15016D1580120F6C6C1403EE07006C6C14066C6C140ED8007C5C013F147890
390F8001E0903903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>I<B612F815FF3A03F8
001FE00001EC03F0ED00F8167E82EE1F80160F17C0EE07E0A2EE03F0A217F81601A317FC
AA17F8A3EE03F0A217E0160717C0160FEE1F80EE3F00167E5EED03F00003EC1FE0B71280
03F8C7FC2E2D7DAC36>I<B712FEA23903F800010001EC003E828282A282A31780160115
18A293C7FCA31538157815F890B5FCA2EBF800157815381518A21760A392C712C0A41601
17801603A21607160F163F0003913801FF00B8FCA22B2D7EAC30>I<B712FCA23903F800
030001EC007C163E161E160EA21606A3160716031518A21600A31538157815F890B5FCA2
EBF800157815381518A592C7FCAB487EB512F8A2282D7EAC2E>I<DA1FF013C09138FFFE
01903903F00F8390390F8001E3013FC71277017C143F4848141F4848140F48481407A248
481403121F491401123F90C8FC481500A300FE1600A992381FFFFEA2007F9138001FE0EE
0FC0A27E7F121F7F120F6C7EA26C7E6C6C141FEA007C013F143FD90F8013F3903903F007
C10100B51200DA1FF813002F2F7CAD37>I<B539F03FFFFCA2D803FCC713006C48147EB2
90B612FEA201F8C7127EB3486C14FFB5D8F03F13FCA22E2D7DAC35>I<B512F0A23803FC
006C5AB3B3A3487EB512F0A2142D7EAC19>I<90387FFFF0A201001300147EB3AD123812
FEA314FE5C1278387001F86C485A381E07E03807FF80D801FCC7FC1C2E7DAC24>I<B500
F0EB7FFEA2D803FCC7EA1FF06C48EC0FC01700161E16385E5E4B5A4B5A4BC7FC150E5D5D
15F0EC01C04A5A4A7E4A7E141F4A7EEC73F8ECE1FCEBF9C09038FF80FE9038FE007F497F
49806F7E6F7E1507826F7E6F7EA26F7E167F821780EE1FC017E0486CEC3FF0B5D8F001B5
FCA2302D7DAC37>I<B512F8A2D803FCC8FC6C5AB3A7160CA41618A41638A2167816F815
01ED07F00003141FB7FCA2262D7EAC2C>I<D8FFF8923807FFC06D5D0003EFF00000015F
01BE151BA2019F1533A3D98F801463A2D987C014C3A2D983E0EB0183A3D981F0EB0303A2
D980F81306A3027C130CA26E1318A36E1330A291380F8060A2913807C0C0A3913803E180
A2913801F300A3EC00FEA2157C487ED80FF04B7EB5D93801B512C0A23A2D7DAC41>I<D8
FFF8903803FFFC7F00019138003FC06DEC0F006D1406EBBF80A2EB9FC0EB8FE0138780EB
83F8138180EB80FE147E147FEC3F80EC1FC0140F15E0EC07F0140315F8EC01FC140015FE
157FED3F86151F16C6ED0FE6150716F6ED03FE1501A21500167E163EA2486C141ED80FF0
140EB5FC16062E2D7DAC35>I<EC3FF0903801FFFE903907E01F8090391F8007E090393E
0001F001FCEB00FC4848147E4848804848EC1F8049140F000F16C04848EC07E0A248C8EA
03F0A24816F8A2007E1501A200FE16FCAA007FED03F8A36C16F06D1407001F16E0A26C6C
EC0FC06D141F000716806C6CEC3F006C6C147E6C6C5C017E495A90391F8007E0903907E0
1F80902601FFFEC7FC9038003FF02E2F7CAD37>I<B612FCEDFF803A03F8000FE00001EC
03F0ED00F882167E167F821780A617005E167E5E5EED03F0ED0FE090B6128003FCC7FC01
F8C9FCB2487EB512F0A2292D7EAC30>I<B612C015FC3903F8007F0001EC0FC06F7E6F7E
6F7E82150082A55E15015E4B5A4B5A4B5A037FC7FC90B512FC15F09038F800FC153E6F7E
150F826F7EA582A5170316F815031707486C903801FC0EB539F000FE1CEE3FF8C9EA07E0
302E7DAC34>82 D<90383F80303901FFF0703807C07C390F000EF0001E13074813034813
011400127000F01470A315307EA26C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF
00011480D8003F13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA21578
7E6C14706C14F06CEB01E039F78003C039E3F00F0038E07FFE38C00FF01E2F7CAD27>I<
007FB712F8A29039000FC003007C150000701638A200601618A200E0161CA248160CA5C7
1500B3A94A7E011FB512E0A22E2D7EAC33>I<B539F003FFFCA2D803FCC7EA3FC06C48EC
0F001606B3AB160E0000150C7F161C017C1418017E14386D5C6D146090390F8001E09039
07E00380902601F80FC7FC9038007FFCEC0FF02E2E7DAC35>I<B500C090380FFFC0A2D8
07FCC73803FE006C48EC00F800015E5F6C7E5F6D1401017E5DA26D4AC7FCA26E5B011F14
0680010F5CA26D6C5BA26E133801031430A26D6C5BA26E13E001005C8091387E0180A26E
48C8FCA21583EC1F86A2EC0FCCA215FC6E5AA26E5AA36E5AA26E5A322E7FAC35>I<B53C
801FFFF001FFF8A22707FC000190C7EA3FC0D803F06D48EC1F00047E140EA26C6C027F14
0CA26D171C0000DBDF801318A26D1738017E9026018FC01330A2017F17706D90260307E0
1360A2028016E0011F90260603F05BA202C01501010F90260C01F85BA202E01503010790
261800FC90C7FCA202F05D010349EB7E06A202F8150E010149EB3F0CA202FC151C010049
EB1F98A202FE15B8DA7F80EB0FF0A2023F5D92C71207A26E5D021E1403A2020E5D020C14
01452E7FAC48>I<B500C090380FFFC0A2D807FEC73801FE006C48EC00F8000116E06C6C
5D1601017F4A5A6D6C91C7FC5E6D6C130E6D6C130C5E6D6C13386D6C13305E6D6C13E06D
6C5B4B5AEC7F03DA3F83C8FC1586EC1FCEEC0FEC15F814076E5AB04A7E49B512C0A2322D
7FAC35>89 D<EAFFE0A3EAE000B3B3B3A7EAFFE0A30B4379B114>91
D<EAFFE0A31200B3B3B3A712FFA30B437FB114>93 D<13FF000713C0380F01F0381C00F8
003F137C80A2143F001E7FC7FCA4EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F0012
7E00FE14065AA3143F7E007E137F007FEBEF8C391F83C7FC390FFF03F83901FC01E01F20
7D9E23>97 D<EA07C012FFA2120F1207AC14FE9038C7FF809038CF03E09038DC01F09038
F8007C49137E49133E497F1680A2150F16C0A9ED1F80A216005D6D133E6D5B01B05B9038
BC01F090380E07E0390607FF80260001FCC7FC222F7EAD27>I<EB1FE0EB7FFC3801F01E
3803E0073907C01F80EA0F80EA1F005A003EEB0F00007E90C7FCA2127C12FCA9127EA215
C07E6C130101801380380FC0033907E007003801F03E38007FF8EB1FC01A207E9E1F>I<
15F8141FA214011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F0048
1300123E127EA25AA9127C127EA2003E13017EEB8003000F13073903E00EFC3A01F03CFF
C038007FF090391FC0F800222F7EAD27>I<EB1F80EBFFF03803E0783807C03E380F801E
381F001FEC0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C012
3F6C1301390F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>I<01
3F13F89038FFC3FE3903E1FF1E3807807C000F140C391F003E00A2003E7FA76C133EA26C
6C5A00071378380FE1F0380CFFC0D81C3FC7FC90C8FCA3121E121F380FFFF814FF6C14C0
4814F0391E0007F848130048147C12F848143CA46C147C007C14F86CEB01F06CEB03E039
07E01F803901FFFE0038003FF01F2D7E9D23>103 D<EA07C012FFA2120F1207AC14FE90
38C3FF809038C703E09038DE01F013F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A222
2E7EAD27>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C012FFA2120F1207B3
A5EA0FE0EAFFFCA20E2E7EAD14>I<EA07C012FFA2120F1207ADEC1FFEA2EC0FF0EC07C0
5D020EC7FC5C5C5C5CEBC3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E143E80816E7E
14076E7E816E7E486C487E3AFFFE07FF80A2212E7EAD25>107 D<EA07C012FFA2120F12
07B3B3A3EA0FE0EAFFFEA20F2E7EAD14>I<2607C07FEB07F03BFFC3FFC03FFC903AC783
F0783F3C0FCE01F8E01F803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249
137CB2486C01FEEB0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF8090
38C703E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27
>I<EB1FE0EB7FF83801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248
EB00F8A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901
F03E0038007FF8EB1FE01E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F0
3907F800FC49137E49133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D13
7C5D9038FC01F09038CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E
9D27>I<90380FE01890387FF8383801F81C3903E00E783807C007390F8003F8001F1301
EA3F00A2007E1300A212FE5AA8127EA36C13017EEB8003380FC0073803E00E3801F03C38
007FF0EB1FC090C7FCA94A7E91381FFFC0A2222B7E9D25>I<380781F838FF87FEEB8E3F
EA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E7E9D1C>I<3801FE183807FF
B8381E01F8EA3C00481378481338A21418A27E7EB41300EA7FF06CB4FC6C13C06C13F000
0113F838001FFC130138C0007E143EA26C131EA27EA26C133CA26C137838FF01F038E3FF
C000C0130017207E9E1C>I<1360A413E0A312011203A21207121FB512F0A23803E000AF
1418A714383801F03014703800F860EB3FE0EB0F80152A7FA81B>I<D807C013F800FF13
1FA2000F130100071300B21401A314033803E007EC0EFC3A01F81CFFC038007FF890391F
E0F800221F7E9D27>I<3AFFFC01FFC0A23A0FE0007E000007147C15380003143015706C
6C1360A26C6C5BA390387C0180A26D48C7FCA2EB3F07EB1F06A2EB0F8CA214DCEB07D8A2
EB03F0A36D5AA26D5A221E7F9C25>I<3BFFFC3FFE07FFA23B0FE003F001F801C09038E0
00F00007010114E0812603E00314C0A2913807F8012701F006781380A29039F80E7C0300
00D90C3C1300A290397C181E06A2151F6D486C5AA2168C90391F600798A216D890390FC0
03F0A36D486C5AA36DC75A301E7F9C33>I<3AFFFC01FFC0A23A0FE0007E000007147C15
38000314306D137000011460A26C6C5BA2EBFC01017C5BEB7E03013E90C7FCA2EB1F06A2
148EEB0F8CA2EB07D8A2EB03F0A36D5AA26D5AA2495AA2130391C8FC1278EAFC06A25B13
1CEA7838EA7070EA3FE0EA0F80222B7F9C25>121 D<003FB51280A2EB003F003C140000
38137E00305BEA700100605B495A495A130F00005B495A49C7FC5B137E9038FC0180EA01
F8120313F03807E003EA0FC0001F1400138048485A007E5B00FE133FB6FCA2191D7E9C1F
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmr10 10 78
/Fn 78 123 df<B812E0A30001903880003F6C90C71207EE03F0160116001770A21730A4
17381718A41700B3B04813C0B612E0A32D397DB834>0 D<15E0A34A7EA34A7EA34A7EA3
4A7EA2140DEC1DFF14191418A24A7F157FA202607F153FA202C07F151FA2D901807F150F
A2D903007F1507A20106801503A2010E80130C1501011C80131881A24981167FA2498116
3FA24981161FA20001821203486C81D81FF84A7EB50107B512E0A3333C7DBB3A>3
D<011FB512FEA39026001FFEC8FCEC07F8A8EC3FFE0103B512E0D91FF713FC90397F07F8
7F01FCEC1F80D803F8EC0FE0D807F06E7ED80FE06E7E001F82D83FC06E7EA2007F820180
8000FF1780A7007F170001C05C003F5EA2D81FE04A5A000F5ED807F04A5AD803F84A5AD8
00FCEC1F80017F027FC7FC90391FF7FFFC0103B512E09026003FFEC8FCEC07F8A8EC1FFE
011FB512FEA331397BB83C>8 D<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07
E001FF0F903B1F8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC15
03ACB812F8A32801F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CF
C00380903C1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E
5A03030203C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E26
7FFFE0B500C1B51280A3413B7FBA45>14 D<B612F8A31D037AB02A>22
D<121C127FEAFF80A8EA7F00AB123EAB121CABC7FCA8121C127FEAFF80A5EA7F00121C09
3C79BB17>33 D<001C131C007F137F39FF80FF80A26D13C0A3007F137F001C131C000013
00A40001130101801380A20003130301001300485B00061306000E130E485B485B485B00
6013601A197DB92A>I<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313
005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E131E
5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA312
1EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E014
60135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C13
3E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E
133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<153015
78B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C09097988
17>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA2
48C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D
5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7D
B72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C38
79B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E1230
00706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F
4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B4913034848140048
5A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901
F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D
4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A2
16C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C49
5A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2
157815F8A2140114031407A2140F141F141B14331473146314C313011483EB0303130713
06130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B7
12F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F0
03F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E0
07E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C
12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38
007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790
387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F
90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA24914
8016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B
6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003F
B612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5DC712014A5A
92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA513
7FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F84848
6C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC13
3C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F39
03E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0FE0
00F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E013
7C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C090
38FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA248EC
1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF3907E001DF0003149F3801F00339
00FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A5A4A
5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A>
I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>
I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A412031300
A25A1206A2120E5A121812385A1260093479A317>I<007FB812F8B912FCA26C17F8CCFC
AE007FB812F8B912FCA26C17F836167B9F41>61 D<1538A3157CA315FEA34A7EA34A6C7E
A202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A2
02C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E
7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7D
BB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA2
83A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F070
7E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B8
12C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E
07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F120148
48151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED
0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C
5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F00201
1380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8
707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218
E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816
C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706
A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A3
18E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397D
B839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E17
06A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD48
13C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03
FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F484815
07A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF
3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8
EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA
41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A648
6D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A
397EB81E>I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F
4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E14
0E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2
707E707EA2707E707F8484486D497FB6011FEBFF80A339397DB841>75
D<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A21601160316
0FEE1FE0486D13FFB8FCA32D397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0
ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2
027F1406A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180
A3913900FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D4849
7EB500C00203B512F8A2ED018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC
1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E8114
0F6E7E8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F
1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED8
0FFC151EB500C0140EA2170637397DB83E>I<EC03FF021F13E09138FE01FC903901F800
7ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F
4848ED3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FC
AC007F17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F00031700
6C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC9039
00FE01FC91381FFFE0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF80
6C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817
F0EE0FE0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B6
12FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA2
4C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E
707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800
FE0ECAEA3FFCEF07F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903F807E3
3907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C
1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480
010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216
F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8
010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE1303
48EE01F00078160000701770A300601730A400E01738481718A4C71600B3B0913807FF80
011FB612E0A335397DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF
0F001706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6C
EB07806D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B5D8
FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03
C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA2
6D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007
A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA2
03E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA20201
5E4B1407A2020093C8FC4B80503B7EB855>87 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A4
0D5378BD17>91 D<3901800180000313033907000700000E130E485B0018131800381338
003013300070137000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F13
7FA2393F803F80390E000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D
537FBD17>I<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E
7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC16
0C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE0
3A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E
9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E16
7FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F009038
81E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F800
70484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FE
AA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C
07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF
90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA212
7E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39
007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803
E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FC
A248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C
6C137090387E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1
E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB48
7E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901
F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C48
5A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6C
ECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15
F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC
26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3
800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA
0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A31238
7EB717>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3
B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719
>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4A
C7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E8114
00157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA312
0F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF891
3AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907
F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<39
03F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA3
5BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038
F800F84848137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A4
00FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C
6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FF
EB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F8491301
16FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039
F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903
F813C090381FFE0190387E07819038FC01C33903F000E3000714774848133749133F001F
141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF39
01F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<
3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC
0080491300A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E00
3F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC6
7F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38
F3C07C38E1FFF038C03F801A277DA521>I<1318A51338A31378A313F812011203120700
1FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F8
1A347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12
016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA4
2E>I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C13
06A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180
A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8
009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006
156FA2017E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF8
7090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7F
A20100141E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80
000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5A
A2147F804A7E8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E4913
7F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA3
3A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D
6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA314
38A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0
EA0FC027357EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE01230
0070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290387F00
0613FEA2485A485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5
FCA21F247EA325>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr7 7 32
/Fo 32 117 df<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA212
1C123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00E0
136013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013
E0120013F0A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E01201
13C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<140EB3A2B812E0A3C7000EC8
FCB3A22B2B7DA333>43 D<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480
A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A38
03E0F86CB45A38003F801B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB48
7EB512F8A215267BA521>I<13FF000313E0380E03F0381800F848137C48137E00787F12
FC6CEB1F80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870
018013E0EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF0003
13E0380F01F8381C007C0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB
07E03801FF8091C7FC380001E06D7E147C80143F801580A21238127C12FEA21500485B00
78133E00705B6C5B381F01F03807FFC0C690C7FC19277DA521>I<1438A2147814F81301
A2130313071306130C131C131813301370136013C012011380EA03005A120E120C121C5A
12305A12E0B612E0A2C7EAF800A7497E90383FFFE0A21B277EA621>I<0018130C001F13
7CEBFFF85C5C1480D819FCC7FC0018C8FCA7137F3819FFE0381F81F0381E0078001C7F00
18133EC7FC80A21580A21230127C12FCA3150012F00060133E127000305B001C5B380F03
E03803FFC0C648C7FC19277DA521>I<EB0FE0EB3FF8EBF81C3801E0063803C01F48485A
EA0F005A121E003E131E91C7FC5AA21304EB3FC038FCFFF038FDC078EB003CB4133E4813
1E141FA2481480A4127CA4003C1400123E001E131E143E6C133C6C6C5A3803C1F03801FF
C06C6CC7FC19277DA521>I<1230123C003FB512E0A215C0481480A23970000700006013
0E140C48131C5C5CC75A5C1301495AA249C7FC5B130E131EA3133E133CA2137CA413FCA8
13781B287DA621>I<137F3803FFE0380781F8380E007C48131E5A801278A3127C007E13
1EEA3F80EBE03C6C6C5A380FFCF03807FFC06C5BC613E0487F38079FFC380F07FEEA1E03
48C67E48133FEC1F8048130FA21407A315001278140E6C5B6C5B380F80F03803FFE0C66C
C7FC19277DA521>I<137F3801FFC03807C1E0380F0070001E1378003E7F003C133E007C
131EA200FC131FA41580A4007C133FA2123C003E137F001E135F380F01DF3807FF9F3801
FE1FD8001013001300A2143E123C007E133CA25C5C007C5B383003C0381C0780D80FFFC7
FCEA03F819277DA521>I<140EA2141FA34A7EA3EC6FC0A2ECEFE014C7A290380183F0A3
90380301F8A201067F1400A249137EA2011C137F01187FA24980013FB5FCA2903960000F
C0A201E080491307A248486D7EA200038115011207D81FC0497ED8FFF890383FFFE0A22B
2A7EA931>65 D<91387FC002903903FFF80690390FE01E0E90383F0007017CEB019ED801
F0EB00FE4848147E4848143E5B000F151E48C8FC48150E123EA2007E1506A2127C00FC15
00A8127C007E1506A2123EA2003F150C7E6C7E000715186D14386C6C14306C6C1460D800
7CEB01C0013FEB038090390FE01E00903803FFF89038007FC0272A7DA82F>67
D<B612F015FE3A07F0003F800003EC07C0ED01F06F7E167C82A282EE0F80A3EE07C0A317
E0A917C0A2160F1780A2EE1F00A2163E5E5E4B5AED07E00007EC3F80B600FEC7FC15F02B
287EA732>I<B712F0A23907F000070003EC00F816781638A21618A3160C1560A21600A2
15E0A2140390B5FCA2EBF0031400A21560A21606A2ED000CA4161C16181638A21678ED01
F80007EC07F0B7FCA227287EA72D>I<B539C07FFFE0A23B07F80003FC006C486D5AAF90
B6FCA29038F00001B1486C497EB539C07FFFE0A22B287EA731>72
D<B512E0A2D807F8C8FC6C5AB3A416C0A315011680A31503A21507150FED3F00000714FF
B7FCA222287EA729>76 D<D8FFF0EDFFF06D5C0007EEFE0000035E017CEC037CA26D1406
A26D140CA36D6C1318A26D6C1330A36D6C1360A26D6C13C0A3903900F80180A291387C03
00A2EC3E06A36E5AA2EC0F98A3EC07F0A26E5AEA0780D80FC015FE3CFFFC01C01FFFF0A2
34287DA73C>I<D8FFF0903807FFE07FD803FC9038007E006D143C1618137F6D7E6D7EA2
6D7E6D7E6D7EA26D7E6D7E147FA2EC3F80EC1FC0EC0FE015F01407EC03F8EC01FCEC00FE
A2157FED3F98ED1FD8A2ED0FF815071503A215011500486C1478487ED8FFFC143816182B
287EA731>I<EC7FC0903803FFF890381FC07F90393E000F8001F8EB03E048486D7E4848
6D7E4848147C484880A248C87E481680003E150F007E16C0A2007C1507A200FC16E0A900
7EED0FC0A36CED1F80A26C16006D5C6C6C147E0007157C6C6C5C6C6C495AD800FCEB07E0
013EEB0F8090261FC07FC7FC903807FFFC9038007FC02B2A7DA833>I<B67E15F03907F0
00FC0003143FED0F806F7E82150382A55E15075E4B5A033FC7FC15FC90B512F0A29038F0
01FCEC007F6F7E151F82150FA71730A3923807E070486C1560B539C003F0E0923800FFC0
C9EA3F002C297EA730>82 D<90387F80203903FFF06039078078E0380E000E4813074813
03007813010070130012F0A21560A27E1500127C127FEA3FE013FF6C13F06C13FC000313
FFC61480010F13C0010013E0EC0FF014031401EC00F8A200C01478A46C1470A26C14F06C
14E06CEB01C000EFEB078039E3E01F0038C0FFFC38801FF01D2A7DA825>I<007FB7FCA2
3A7E003F003F0078150F007081006081A200E01680481501A5C791C7FCB3A64A7E013FB5
FCA229287EA72F>I<B539C007FFE0A2D807F8C7EA7E006C48143C1618B3A816386C6C14
3016706C6C1460017C14E0017E495A6D495A90260F8007C7FC903807E03E903801FFF890
38003FC02B297EA731>I<B56CEBFFF8A2D807F8C7EA1FC06C48EC0F00160E6C7E160C6D
141C00001518A2017E5CA2017F14706D146080011F5CA26D6C485AA2ECE003010791C7FC
14F001031306A2ECF80E0101130CECFC1C01001318A2EC7E30A2EC7F70EC3F6015E06E5A
A26E5AA36EC8FCA22D297FA731>I<B590B5EB3FFEA2D80FF8D90FF8EB07F06C486D48EB
03E00003EF01C003031580A26C6C6EEB0300A36C6CD906FC1306A26D160E017ED90C7E13
0CA2017F027F131C6D496C1318A290261F80386D5AED301FA290260FC0706D5AED600FA2
6D6C486C6C5AA214F0903B03F18003F180A202F914F3902801FB0001FBC7FCA202FF14FF
6D486D5AA2027E5C027C147CA202381438A33F297FA743>I<EB3F80EBFFE03803E0F838
07803C48487E001E7F003E1480A248EB07C0A300FC14E0A7007C14C0A2007E130F003E14
80001E1400001F5B380F803E3803E0F86CB45A38003F801B1C7E9A21>111
D<380F07C038FF1FF0EB38F8EA1F71EA0F6113C1EBC0F014005BAF487EEAFFFCA2151A7E
991A>114 D<3803F840380FFEC0EA3C07EA7803EA7001EAF000A37E6C1300EA7FC013FC
6CB4FC6C1380000713C0C613E0130738C003F0130113007EA26C13E0130100F813C038EE
078038C7FF00EA81FC141C7E9A1A>I<13C0A41201A312031207120F121FB512E0A23807
C000AC1430A73803E060A23801F0C03800FF80EB3F0014257FA31A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmmi10 10 52
/Fp 52 123 df<EC3FC0ECFFF8903807E07C90380F801FD93F00EB800C017E130F499038
07C01C4848ECE018485A484801031338000FEDF0305B001F16704848156017E0007F16C0
90C713F1178016F34816004815F716FE5EA2485D5EA4007E1407150F003E91381DF81800
3F14796C02E11338270F8007C013303B07E03F007CF02601FFF8EB3FC026003FC0EB0F80
2E267DA435>11 D<EB07F0D91FFC1430D97FFE147090B5146000036E13E0486E13C0D9F0
1F1301270F8007E01380261F00011303001CD900F0130048EC7007160648EC300E0060EC
380CED181C00E01518C8121CED0C3816301670166016E05EA2150D5EA2150F93C7FCA215
0EA3150CA3151CA215181538A45DA45DA44A5AA35D2C377FA42B>13
D<1406A6ED7FC0913807FFE0ED806091381FFFE091383C7F8002F0C7FC495A495A495A49
C8FC130E131E5B5B5BA2485AA2485A485AA248C9FCA3121EA2123E123CA3127C1278A412
F8A57EA2127C127E127F7F6C7E13F0EA1FFE380FFFC06C13F86C13FEC66D7E013F7F0107
7F1300EC1FF0140714031401A35DA290381803C0131C90380F0780D903FEC7FCEB00F823
4B7CB924>16 D<EC03F0EC0FFCEC3E1EEC780F14F001011480903803E007D907C013C0EB
0F80131F14004914E0137EA25BA2485A1203A249130F1207A2485AA2ED1FC0121F5BA290
B6FC481580A3903880007F007F150090C7FCA215FEA2127E4A5AA200FE5C1403A2007C5C
4A5AA24A5AA24A5A92C7FC5C6C137E147C001E5B495A6C485A380787806CB4C8FCEA00F8
233C7EBA27>18 D<15FE913803FF8091380F83E091383E01F091387C00F85C494813FC01
03147C4948137E5C130F495AA249C7FC16FE5B137EA2150113FE4914FCA20001140316F8
5BED07F01203ED0FE04914C0151F000715806DEB3F00157E6D5B390FEE01F09038E707E0
9038C3FF80D9C0FCC7FC001F90C8FCA25BA2123FA290C9FCA25AA2127EA212FEA25AA212
7027377EA42B>26 D<027FB512C00103B612E0130F5B017F15C09026FF81FEC7FC3901FC
007E48487F485A497F484880485AA248C7FCA2127EA2153F00FE92C7FC5AA25D157E5A5D
A24A5AA24A5A007C495A5D003C495A003E013FC8FC6C137C380F81F83803FFE0C66CC9FC
2B257DA32F>I<013FB512FE90B7FC5A5A4815FE260F801CC7FCEA1E005A00385B5A5A48
1378C7FC147014F0A4495AA31303A3495AA3130FA25C131FA3133FA291C8FC131E28257E
A324>I<0140151E01E0153F00015E484816805B120790C9123F000E161F170F5A170748
1700A2003014C014010070010314061260A2170E00E04948130C5A171C92C7FC5FA26C49
5C4A14F04A7E6C017F495A4A6C485A3AF801F7E00F3BFE0FF3F83F80267FFFE3B5FC02C1
91C7FC6C01815B02005BD80FFCEB7FF0D803F0EB0FC031267FA434>33
D<EE1F8001C0EC7FE00001913801FFF848484913FC90C75A4891380FC07E000691381F00
3E000E023E131E000C023C130F001C4A13070018147000385C00305C4A5AA2007049C712
0612601406170E170C00E049141CA2173800605B0070167017E00078013813016CED03C0
003E0130EB0F806C0170EB1F0001C0147ED80FF0495A3A07FFF01FF8000190B512E06C15
80013F49C7FC010F13F8010113C0D903E0C8FCA25C1307A4495AA3131FA349C9FCA3131E
30377DA436>39 D<13F8EA03FC120FEA1FF8EA3F80EA7E00127C5AA25AA47EA2127C127E
EA3F80EA1FF8EA0FFC1203EA00F80E167CA817>44 D<121C127FEAFF80A5EA7F00121C09
09798817>58 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A12
06120E5A5A5A12600A19798817>I<150C151E153EA2153C157CA2157815F8A215F01401
A215E01403A215C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C
1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B12
01A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12
601F537BBD2A>61 D<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07
FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007F
C0EE1FF0EE07FCEE01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC0
4B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0
EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>I<9339FF8001C0
030F13E0037F9038F80380913A01FF807E07913A07F8000F0FDA1FE0EB079FDA3F809038
03BF0002FFC76CB4FCD901FC80495A4948157E495A495A4948153E017F163C49C9FC5B12
01484816385B1207485A1830121F4993C7FCA2485AA3127F5BA312FF90CCFCA41703A25F
1706A26C160E170C171C5F6C7E5F001F5E6D4A5A6C6C4A5A16076C6C020EC8FC6C6C143C
6C6C5C6CB4495A90393FE00FC0010FB5C9FC010313FC9038007FC03A3D7CBA3B>67
D<0103B812F05BA290260007F8C7123F4B1407F003E0020F150118005DA2141FA25D19C0
143FA24B1330A2027F1470190092C7126017E05C16014A495A160F49B6FCA25F9138FC00
0F01031407A24A6DC8FCA201075C18034A130660010F160693C7FC4A150E180C011F161C
18184A1538A2013F5E18F04A4A5AA2017F15074D5A91C8123F49913803FF80B9FCA295C7
FC3C397DB83D>69 D<0103B812E05BA290260007F8C7123F4B140FF003C0140F18015DA2
141FA25D1980143FA25D1760027F14E095C7FC92C75AA24A1301A24A495A16070101141F
91B6FC94C8FCA2903903FC001F824A130EA21307A24A130CA2010F141CA24A90C9FCA213
1FA25CA2133FA25CA2137FA291CBFC497EB612C0A33B397DB835>I<DCFF8013E0030F13
F0037F9038FC01C0913A01FF803E03913A07FC000F07DA0FE0EB038FDA3FC0903801DF80
4AC812FFEB01FED903F8157F4948ED3F00495A495A494881017F161E49C9FC5B12014848
161C5B1207485A1818121F4993C7FCA2485AA3127F5BA312FF90CCFC93387FFFFE93B5FC
A29338007FC0715A177F95C7FCA27E5F5F7F123F16016C7E5F6C6C14036D14071207D803
FCEC1EF86C6C143C26007F80EBF07890393FF007E0010FB5EA8030010349C9FC9038003F
E03B3D7DBA41>I<0103B5D8F803B512F8495DA290260007F8C73807F8004B5DA2020F15
0F615DA2021F151F615DA2023F153F615DA2027F157F96C7FC92C8FCA24A5D605CA249B7
FC60A202FCC7120101031503605CA201071507605CA2010F150F605CA2011F151F605CA2
013F153F605CA2017F157F95C8FC91C8FC496C4A7EB690B6FCA345397DB845>I<0103B5
00F8903807FFFC5BA290260007F8C813804BEDFC0019F0020F4B5AF003804B4AC7FC180E
021F1538604B5CEF0380023F4AC8FC170E4B133C1770027F5C4C5ADB0007C9FC160E4A5B
167E4A13FE4B7E01015B92380E7F80ECFC1CED383F010301E07FECFDC04A486C7EECFF00
D907FC6D7E5C4A130783130F707E5C1601011F81A24A6D7EA2013F6F7EA24A143F84137F
717E91C8123F496C81B60107B512C0A26146397DB847>75 D<0103B6FC5B5E90260007FC
C8FC5D5D140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA213
03A25CA2130718404A15C0A2010F150118804A1403A2011F16005F4A1406170E013F151E
171C4A143C177C017F5D160391C7120F49EC7FF0B8FCA25F32397DB839>I<902603FFF8
93383FFF80496081D900079438FF80000206DC01BFC7FCA2020E4C5A1A7E020C1606190C
DA1C7E16FE4F5A02181630A20238166162023016C1F00181DA703F158395380303F00260
1506A202E0ED0C076202C01518183001016D6C140F06605B028015C0A20103923801801F
DD03005B140092380FC00649173F4D91C8FC01065DA2010E4B5B4D137E130C6F6C5A011C
17FEDCE1805B011802E3C7FCA2013802E6130104EC5C1330ED03F8017016034C5C01F05C
D807FC4C7EB500E0D9C007B512F01680150151397CB851>I<902603FFF891381FFFF849
6D5CA2D90007030113006FEC007C02061678DA0EFF157081020C6D1460A2DA1C3F15E070
5CEC181F82023815016F6C5C1430150702706D1303030392C7FC02607FA2DAE0015C7013
06ECC0008201016E130EEF800C5C163F0103EDC01C041F131891C713E0160F49EDF03818
300106140717F8010E02031370EFFC60130CEE01FE011C16E004005B011815FF177F1338
600130153FA20170151F95C8FC01F081EA07FCB512E01706A245397DB843>I<4BB4FC03
1F13F09238FE01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7EA07E002FCEC03
F0495A4948EC01F8495A4948EC00FC495A49C912FE49167E13FE49167F1201485AA2485A
A2120F5B001F17FFA2485AA34848ED01FEA400FFEE03FC90C9FCA2EF07F8A2EF0FF0A218
E0171F18C0EF3F806C167F180017FE4C5A6C6C5D1603001F4B5A6D4A5A000FED1F806C6C
4AC7FC6D147E0003EC01F8D801FC495AD8007EEB0FC090263F807FC8FC903807FFF80100
1380383D7CBA3F>I<0103B7FC4916E018F8903B0007F80007FC4BEB00FE187F020FED3F
80F01FC05DA2021F16E0A25DA2143FF03FC05DA2027FED7F80A292C8130018FE4A4A5A60
4AEC07F04D5A0101ED3FC04CB4C7FC91B612FC17E0D903FCCAFCA25CA21307A25CA2130F
A25CA2131FA25CA2133FA25CA2137FA291CBFC497EB6FCA33B397DB835>I<4BB4FC031F
13F09238FE01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7EA07E002FCEC03F0
495A4948EC01F8495A4948EC00FC495A013F16FE49C9FC13FE187F485A12035B12075B12
0F4916FF121FA2485AA34848ED01FEA448C9EA03FCA3EF07F8A218F0170F18E0171F18C0
EF3F807EEF7F0017FEDA07C05B6C90391FF001F8903980383803001F496C485A9139E00C
0FE0260FC0C0EB1F80D807E1D90E3FC7FC0280137ED803F1EB07F8D801F95C3A007FC00F
C0903A3FE07F0003903807FFFE0100018F5BDA000F1306170E171E705A177CEEC1F816FF
5FA25F5F6F5B6F48C7FCED00F8384B7CBA42>I<92391FE00380DBFFFC130002036D5A91
390FE01F8F91393F0007DF027EEB01FE02F81300495A4948147E177C4948143C495AA201
1F153891C8FCA3491530A28094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D80
6D80021F7F02037FEC003F03037F1500167F163F161FA3120C160FA2001C151F94C7FCA3
003C153EA25E003E5D127E007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E0
3FFFF8010F13E0D8C00190C9FC313D7CBA33>83 D<0003B812FEA25A903AF8003FC00101
C0913880007E4848163C90C7007F141C121E001C92C7FCA2485CA200305C007017180060
130112E0485CA21403C716005DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147F
A292C9FCA25CA25CA21301A25CA21303A25CEB0FFC003FB6FC5AA237397EB831>I<003F
B56C48B51280485DA226007F80C7381FF00091C8EA07C0604993C7FCA2491506A2000116
0E170C5BA20003161C17185BA20007163817305BA2000F167017605BA2001F16E05F5BA2
003F15015F5BA2007F150394C8FC90C8FCA25E4815065A160E160C161C161816385E127E
5E4B5A6C4A5A4BC9FC6C6C131E6C6C5B6C6C13F83903F807E06CB55A6C6C48CAFCEB0FF0
393B7BB839>I<267FFFFC91383FFFC0B55DA2000390C83807FC006C48ED03E060600000
94C7FC5F17065FA25F6D5DA26D5D17E05F4C5AA24CC8FC6E1306A2013F5C161C16185EA2
5E6E5BA2011F495A150393C9FC1506A25D6E5AA2010F5B157015605DA2ECE18002E3CAFC
14F3EB07F614FE5C5CA25C5CA26D5AA25C91CBFC3A3B7CB830>I<49B500F890387FFFF0
95B5FC1AE0D90003018090380FFC004BC713E00201ED07804EC7FC6E6C140E606F5C705B
606F6C485A4D5A031F91C8FCEEE0065F6F6C5A5F03075B705A16F96FB45A94C9FC6F5AA3
6F7EA34B7FED037F9238063FC0150E4B6C7E1538ED700F03E07F15C04A486C7EEC030002
0613034A805C4A6D7E14704A1300494880495A49C86C7E130E011E153F017E4B7ED803FF
4B7E007F01E0011FEBFFC0B5FC6144397EB845>88 D<147E903803FF8090390FC1C38090
391F00EFC0017E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D007F
147E90C7FCA215FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E010F
1330003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267D
A42C>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0FCEBE3FF
9038E707C0390FFE03E09038F801F001F013F8EBE000485A15FC5BA2123F90C7FCA21401
5A127EA2140312FE4814F8A2140715F05AEC0FE0A215C0EC1F80143F00781400007C137E
5C383C01F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924>I<EC3FC0903801FFF09038
07E03C90380F800E90383F0007017E131F49137F484813FF485A485A120F4913FE001F14
3848481300A2127F90C8FCA35A5AA45AA315031507007E1406150E003E143C003F14706C
14E0390F8007C03907C03F003801FFF838003FC020267DA424>I<163FED1FFFA3ED007F
167EA216FEA216FCA21501A216F8A21503A216F0A21507A2027E13E0903803FF8790380F
C1CF90381F00EF017EEB7FC049133F485A4848131F000715805B000F143F485A1600485A
5D127F90C7127EA215FE5A485CA21401A248ECF80CA21403161CEDF0181407007C153800
7E010F1330003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F00
283B7DB92B>I<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A48
5A1207485A49131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC
5A5AA7007E140315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF8
38003FC020267DA427>I<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700
161C4A48C7FCA414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F
92C8FCA45C147EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90
C9FC131E12FEEA7C3CEA7878EA1FF0EA07C0294C7CBA29>I<EC07E0EC1FF891387C1C38
903901F80EFC903803F007903807E003EB0FC090381F8001D93F0013F85B017E130313FE
16F0485A150712034914E0A2150F12074914C0A2151FA2491480A2153FA2160000035C6D
5B00015B4A5A3900F8077E90387C1EFEEB1FF8903807E0FC90C7FC1401A25DA21403001E
5C123F387F80075D00FF495A49485A4849C7FC007C137E383C01F8381FFFE0000390C8FC
26367FA428>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C9FCA35B9038
7E03F8EC0FFF91383C0F809039FEF007C0D9FDC07FEBFF80EC0003485A5BA24913071203
5BA2150F00075D5BA2151F000F5D5B153F93C7FC121F4990387F0180157EEDFE03003F02
FC130090C7FC5EEDF80648150E007E150C161C5E00FEEC787048EC3FE00038EC0F80293B
7CB930>I<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA03FEEA070F000E138012
1C121812381230EA701F1260133F00E0130012C05BEA007EA213FE5B1201A25B12035BA2
0007131813E01438000F133013C01470EB806014E014C01381EB838038078700EA03FEEA
00F815397EB71D>I<150FED3F80A2157FA31600151C92C7FCABEC0F80EC3FE0ECF0F090
3801C0F849487E14005B130E130C131CEB1801133801305BA2EB0003A25DA21407A25DA2
140FA25DA2141FA25DA2143FA292C7FCA25CA2147EA214FEA25CA21301001E5B123F387F
83F0A238FF87E0495A00FE5BD87C1FC8FCEA707EEA3FF8EA0FC0214981B722>I<D803E0
137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C00705B0060
5BA200E090C712FC485A137EA20000140101FE5C5BA2150300015D5B15075E120349010F
133016C0031F13700007ED80605B17E0EE00C0000F15014915801603EE0700001FEC0F0E
49EB07FC0007C7EA01F02C267EA432>110 D<90390F8003F090391FE00FFC903939F03C
1F903A70F8700F80903AE0FDE007C09038C0FF80030013E00001491303018015F05CEA03
8113015CA2D800031407A25CA20107140FA24A14E0A2010F141F17C05CEE3F80131FEE7F
004A137E16FE013F5C6E485A4B5A6E485A90397F700F80DA383FC7FC90387E1FFCEC07E0
01FEC9FCA25BA21201A25BA21203A25B1207B512C0A32C3583A42A>112
D<02FC13C0903803FF0190380F838390383F01C790397E00EF8049137F485A4848133F00
0715005B485A001F5C157E485AA2007F14FE90C75AA3481301485CA31403485CA314075D
140F127C141F007E495A003E137F381F01EF380F839F3903FF1F80EA00FC1300143F92C7
FCA35C147EA314FE5C130190387FFFF0A322357DA425>I<3903E001F83907F807FE390E
3C1E07391C3E381F3A183F703F800038EBE07F0030EBC0FF00705B00601500EC007E153C
D8E07F90C7FCEAC07EA2120013FE5BA312015BA312035BA312075BA3120F5BA3121F5B00
07C9FC21267EA425>I<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007FB51280
A2B6FCD8007EC7FCA313FE5BA312015BA312035BA312075BA3120FEBC006A2140E001F13
0CEB801C141814385C146014E0380F81C038078780D803FEC7FCEA00F819357EB31E>
116 D<13F8D803FE1438D8070F147C000E6D13FC121C1218003814011230D8701F5C1260
1503EAE03F00C001005B5BD8007E1307A201FE5C5B150F1201495CA2151F120349EC80C0
A2153F1681EE0180A2ED7F0303FF130012014A5B3A00F8079F0E90397C0E0F1C90393FFC
07F8903907F001F02A267EA430>I<01F8EB03C0D803FEEB07E0D8070F130F000E018013
F0121C12180038140700301403D8701F130112601500D8E03F14E000C090C7FC5BEA007E
16C013FE5B1501000115805B150316001203495B1506150E150C151C151815385D00015C
6D485A6C6C485AD97E0FC7FCEB1FFEEB07F024267EA428>I<01F816F0D803FE9138E001
F8D8070F903801F003000ED9800314FC121C12180038020713010030EDE000D8701F167C
1260030F143CD8E03F163800C001005B5BD8007E131F183001FE5C5B033F147000011760
4991C7FCA218E000034A14C049137E17011880170318005F03FE1306170E000101015C01
F801BF5B3B00FC039F8070903A7E0F0FC0E0903A1FFC03FFC0902703F0007FC7FC36267E
A43B>I<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038383F80
3A03800FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7123F
A292C8FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F81143801835C
00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F0
29267EA42F>I<13F8D803FE1470D8070F14F8000EEB8001121C121800381403003015F0
EA701F1260013F130700E0010013E012C05BD8007E130F16C013FE5B151F000115805BA2
153F000315005BA25D157EA315FE5D1401000113033800F80790387C1FF8EB3FF9EB0FE1
EB00035DA2000E1307D83F805B007F495AA24A5A92C7FCEB003E007C5B00705B6C485A38
1E07C06CB4C8FCEA01FC25367EA429>I<D901E01360D90FF813E0496C13C090383FFE01
90397FFF038090B5EA07009038F81FFF3901E003FE9038C0001C495B5DC85A4A5A4A5A4A
C7FC140E5C5C14F0495AEB038049C8FC130E5B4913035B495B484813064848130E48C75A
D80FFC137C391FFF81F8381E0FFFD838075B486C5B00605CD8E00190C7FC38C0007C2326
7DA427>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmbx10 10 23
/Fq 23 115 df<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B
>46 D<141E143E14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A4213779B630>
49 D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380263F000313C0
5AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0A216E05C16C0
4A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849481378495A495A495A01
3EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB630>I<EB03FF
011F13E0017F13F83901FF03FE4848C67E4848EB7F80484814C0001FEC3FE0123F49EB1F
F0127F16F8A212FF16FCA516FEA5007F143FA3123F157F6C7E000F14FF6C6C5A3903FE03
DF6CB5129F6C6C131FD91FFC13FCEB00201400A216F8D80FE0133F487E486C14F0A216E0
157F16C0EDFF80495A6C4848130090388007FE390FE01FF86CB55A6C14C0C691C7FCEB1F
F027387CB630>57 D<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F302
038015E1A202078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80027C7F
02FC814A7FA20101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8123F49
82013E151FA2017E82017C8101FE83B500F80107B61280A4413A7DB948>65
D<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1F
FFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F485A180F
123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F1707A26C6C1780180F
6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A010701C0EB0FE06D01FC
EBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7BB945>67
D<B87E17F817FF18C028007FF8000713F09338007FF8EF1FFE717E050313807113C0A271
13E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC19FEA419FC183FA219F8187F19F0F0
FFE0A24D13C04D13804D1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC178040397D
B849>I<B912F0A426007FF8C7FCEF1FF8170717031701A21700A21878A3043C137C183C
A41800167CA216FC150391B5FCA4ECF8031500167CA2163C180FA3181EA293C7FCA2183E
A2183C187CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A338397DB83F>I<B6D8FC
03B612F0A426007FF8C70001EBE000B3A391B8FCA402F8C71201B3A6B6D8FC03B612F0A4
44397DB84B>72 D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5E
EE0FFE167FB8FCA431397DB839>76 D<B500F80403B512F06E5EA26E5ED8007FF1E000A2
D97BFF161EA201796D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A5AA26E
6C4A5AA26E6C141EA36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA26F6C485AA2
6F6C48C7FCA2923803FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC6D4848B612
F0A2EE0F80EE070054397DB85B>I<B500FC0203B512F0A28080C66C6D90390003F0006F
6E5A81017B7F13798101787F6E7E6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E153F826F13
806F13C06F13E06F13F06F13F88117FCEE7FFEEE3FFF7013817013C17013E18218F17013
F97013FDEF7FFF8383A28383838383187FA2183F181F01FC160FB500FC150718031801A2
44397DB84B>I<EDFFF8020FEBFF80027F14F0903A01FFC01FFC010790380007FFD91FFC
010113C0D93FF06D6C7E49486E7E49486E7E48496E7E48834890C86C7EA248486F1380A2
48486F13C0A2003F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18E0A26D5D
001F18C0A26C6C4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49485A6D
B401075B0107D9C01F90C7FC010190B512FC6D6C14F0020F1480020001F8C8FC3D3B7BB9
48>I<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717EA2717EA284A7
60A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFCEE0FFF707F70
7F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F130394390FFF87C0
71EBFF8005011400CBEA1FFC443A7DB848>82 D<D907FF130E013FEBE01E90B5EAF83E00
03ECFE7E3A07FC01FFFE390FF0001F4848130F48481303491301007F140090C8FC167E5A
163EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE6F7E6C816C15F06C816C
81C681133F010F801301D9000F1480EC007F030F13C01503818100F0157FA3163FA27E17
807E167F6C16007E6D14FE01E0495A01F813039039FF801FF800FC90B512E0D8F83F5CD8
F00749C7FC39E0007FF02A3B7BB935>I<003FB91280A4D9F800EBF003D87FC09238007F
C049161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7FCB3AE010F
B7FCA43B387DB742>I<B600FC011FB512C0A426007FF8C8381FC000725AB3B3181F013F
94C7FC8060011F163E6D6C157E187C6D6C15FC6D6D495A6D6DEB07F06D01F0EB1FE0DA7F
FEEBFFC0021FB6C8FC02075C020014F0030F1380423A7DB849>I<B600F00103B512E0A4
C601F0C83807F0006E5E017F5F6E150FA2013F5F6E151F011F94C7FC6E5D6D163E6F147E
6D167CA26F14FC6D5E6F13016D5E6F13036D5E811707027F5D6F130F023F5D6F131F021F
92C8FC815F6E143EEE807E6E147CEEC0FC6E5C16E016E16E5C16F36E5C16FF6F5BA36F5B
A26F90C9FCA26F5AA36F5AA26F5AA26F5A433A7EB848>I<903803FF80011F13F0017F13
FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B003FEC0FF0A2485A16F8
150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14F86D14F000071403D801
FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA42C>101
D<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E
4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>104
D<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F81903983F0
3FF0DA3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291
C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>109 D<903801FFC0010F13F8017F13
FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81491303007F81A300FF
1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C
6CB5C7FC011F13FC010113C029257DA430>111 D<9038FE03F000FFEB0FFEEC3FFF9138
7C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512
FEA422257EA427>114 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 930 716 a Fq(THE)41 b(MODULAR)h(CUR)-11 b(VES)42
b Fp(X)2229 728 y Fo(0)2266 716 y Fn(\(11\))f Fq(AND)g
Fp(X)2785 728 y Fo(1)2822 716 y Fn(\(11\))1694 965 y
Fm(TOM)23 b(WESTON)555 1273 y Fn(This)35 b(pap)r(er)g(is)h(in)n(tended)
f(as)g(a)g(brief)g(in)n(tro)r(duction)g(to)g(the)h(theory)e(of)i(mo)r
(duli)f(spaces)456 1372 y(through)21 b(the)h(concrete)e(examples)h(of)h
(certain)f(mo)r(dular)g(curv)n(es.)34 b(The)21 b(motiv)-5
b(ating)22 b(question,)456 1472 y(whic)n(h)29 b(w)n(e)g(seek)g(to)g
(answ)n(er,)g(is)g(whether)g(or)g(not)g(there)h(exist)f(an)n(y)g
(rational)f(elliptic)i(curv)n(es)456 1572 y(o)n(v)n(er)23
b Fl(Q)36 b Fn(with)25 b(a)f(rational)g(p)r(oin)n(t)h(of)f(order)g(11.)
35 b(This)24 b(problem,)h(whic)n(h)g(seems)f(quite)h(hop)r(eless)456
1671 y(in)j(terms)f(of)h(explicit)g(p)r(olynomials,)f(turns)g(out)h(to)
f(ha)n(v)n(e)g(a)g(b)r(eautiful)i(solution)e(in)h(terms)g(of)456
1771 y(mo)r(dular)f(curv)n(es.)555 1870 y(The)37 b(p)r(ortions)f(of)g
(this)h(pap)r(er)f(dealing)g(with)h(explicit)g(computations)f(for)g
Fp(X)3112 1882 y Fo(0)3149 1870 y Fn(\(11\))g(are)456
1970 y(based)30 b(on)g(a)g(talk)g(giv)n(en)g(b)n(y)h(Matthew)f
(Emerton,)h(incorp)r(orating)e(some)h(mo)r(di\014cations)g(b)n(y)456
2070 y(Keith)g(Conrad)e(and)i(Rob)r(ert)g(P)n(ollac)n(k.)41
b(Throughout)29 b(the)i(pap)r(er)e(all)h(algebraic)e(curv)n(es)g(are)
456 2169 y(assumed)i(to)h(b)r(e)h(smo)r(oth)f(and)g(pro)5
b(jectiv)n(e.)46 b(W)-7 b(e)31 b(giv)n(e)g(v)n(ery)f(few)h(complete)g
(pro)r(ofs;)h(to)f(giv)n(e)456 2269 y(complete)k(details)f(w)n(ould)h
(ha)n(v)n(e)f(made)g(the)i(pap)r(er)e(man)n(y)h(times)g(longer,)g(and)g
(w)n(e)g(will)g(b)r(e)456 2369 y(con)n(ten)n(t)27 b(to)g(giv)n(e)g(the)
h(main)f(ideas.)1682 2585 y(1.)41 b Fk(The)32 b Fp(j)5
b Fk(-line)555 2734 y Fn(F)-7 b(or)22 b(this)g(section)g(w)n(e)g(are)f
(in)n(terested)h(in)h(classifying)e(elliptic)i(curv)n(es)e(up)h(to)h
(isomorphism;)456 2834 y(if)32 b Fp(K)37 b Fn(is)31 b(a)g(\014eld,)i(w)
n(e)e(will)h(denote)f(b)n(y)h(Ell)o(\()p Fp(K)6 b Fn(\))32
b(the)g(set)f(of)h(isomorphism)e(classes)g(of)i(elliptic)456
2933 y(curv)n(es)c(de\014ned)j(o)n(v)n(er)d Fp(K)6 b
Fn(.)43 b(Here)30 b(w)n(e)f(consider)g(t)n(w)n(o)g(elliptic)i(curv)n
(es)d Fp(E)2724 2945 y Fo(1)2792 2933 y Fn(and)i Fp(E)3017
2945 y Fo(2)3084 2933 y Fn(o)n(v)n(er)e Fp(K)36 b Fn(to)456
3033 y(b)r(e)28 b(isomorphic)e(if)i(there)g(is)f(an)g(isomorphism)g
Fp(E)2023 3045 y Fo(1)2083 3033 y Fj(!)c Fp(E)2250 3045
y Fo(2)2316 3033 y Fn(de\014ned)28 b(o)n(v)n(er)d Fp(K)6
b Fn(.)555 3133 y(W)-7 b(e)36 b(will)f(b)r(egin)g(with)h(a)e
(description)h(of)g(Ell)o(\()p Fl(C)15 b Fn(\))q(.)65
b(Recall)35 b(that)g(an)g(elliptic)g(curv)n(e)f(o)n(v)n(er)456
3232 y Fl(C)52 b Fn(can)32 b(b)r(e)g(realized)e(as)h
Fl(C)15 b Fp(=)p Fn(\003)37 b(for)32 b(some)f(lattice)g(\003)f
Fj(\022)f Fl(C)15 b Fn(;)40 b(here)31 b(b)n(y)h(lattice)g(w)n(e)f(mean)
g(a)h(free)456 3332 y Fl(Z)o Fn(-mo)q(dule)23 b(of)28
b(rank)e(2)i(generated)f(b)n(y)g(t)n(w)n(o)g Fl(R)p Fn(-linearly)33
b(indep)r(enden)n(t)c(complex)e(n)n(um)n(b)r(ers.)37
b(If)456 3432 y Fp(!)508 3444 y Fo(1)545 3432 y Fn(,)31
b Fp(!)651 3444 y Fo(2)718 3432 y Fn(are)e(complex)h(n)n(um)n(b)r(ers)g
(whic)n(h)g(are)g(linearly)f(indep)r(enden)n(t)i(o)n(v)n(er)e
Fl(R)p Fn(,)37 b(w)n(e)30 b(will)h(write)456 3531 y Fj(h)p
Fp(!)540 3543 y Fo(1)577 3531 y Fp(;)14 b(!)666 3543
y Fo(2)703 3531 y Fj(i)25 b Fn(for)g(the)g(lattice)h(whic)n(h)f(they)g
(generate.)35 b(Tw)n(o)25 b(complex)f(elliptic)i(curv)n(es)e
Fl(C)15 b Fp(=)p Fn(\003)3243 3543 y Fo(1)3311 3531 y
Fn(and)456 3631 y Fl(C)g Fp(=)p Fn(\003)610 3643 y Fo(2)679
3631 y Fn(are)26 b(isomorphic)f(\(o)n(v)n(er)g Fl(C)15
b Fn(\))34 b(if)27 b(and)f(only)h(if)g(the)g(lattices)g(\003)2543
3643 y Fo(1)2607 3631 y Fn(and)f(\003)2825 3643 y Fo(2)2889
3631 y Fn(are)g Fi(homothetic)p Fn(;)456 3730 y(that)h(is,)h(if)g
(there)f(is)h(some)f Fp(\013)c Fj(2)h Fl(C)1531 3700
y Fh(\003)1602 3730 y Fn(suc)n(h)k(that)f Fp(\013)p Fn(\003)2080
3742 y Fo(1)2141 3730 y Fn(=)c(\003)2287 3742 y Fo(2)2323
3730 y Fn(.)37 b(\(T)-7 b(o)28 b(go)e(from)i(the)g Fl(C)15
b Fp(=)p Fn(\003)32 b(form)c(to)456 3830 y(the)d(usual)g(W)-7
b(eierstrass)23 b(form)i Fp(y)1486 3800 y Fo(2)1546 3830
y Fn(=)e Fp(x)1681 3800 y Fo(3)1732 3830 y Fn(+)13 b
Fp(ax)g Fn(+)g Fp(b)26 b Fn(one)e(uses)h(the)h(W)-7 b(eierstrass)23
b(functions)j(and)456 3930 y(its)h(deriv)-5 b(ativ)n(e;)27
b(for)g(details)h(on)f(all)g(of)h(this,)g(see)f([14)o(,)h(Chapter)f(6])
g(and)h([15)o(,)f(Chapter)g(1].\))555 4029 y(Using)32
b(this)h(description)f(of)g(complex)g(elliptic)h(curv)n(es,)f(w)n(e)g
(see)g(that)h(in)g(order)e(to)h(get)g(a)456 4129 y(description)d(of)h
(Ell\()p Fl(C)15 b Fn(\))36 b(it)31 b(will)f(su\016ce)g(for)g(us)g(to)g
(classify)f(lattices)h(up)g(to)g(homothet)n(y)-7 b(.)44
b(W)-7 b(e)456 4229 y(summarize)28 b(the)i(construction;)f(see)g([13)o
(,)h(Chapter)f(7,)g(Sections)h(1)e(and)i(2])f(or)f([15)o(,)i(Chapter)
456 4328 y(1,)37 b(Sections)e(1)g(and)h(2])f(for)g(more)f(details.)61
b(The)36 b(\014rst)f(step)h(is)f(to)g(normalize)g(the)h(lattices)456
4428 y(somewhat.)52 b(Whenev)n(er)32 b(w)n(e)g(are)g(dealing)g(with)i
(a)e(basis)g Fj(h)q Fp(!)2412 4440 y Fo(1)2449 4428 y
Fp(;)14 b(!)2538 4440 y Fo(2)2574 4428 y Fj(i)34 b Fn(of)e(a)h(lattice)
g(\003,)h(w)n(e)e(will)456 4527 y(assume)26 b(that)i
Fp(!)974 4539 y Fo(1)1011 4527 y Fp(;)14 b(!)1100 4539
y Fo(2)1164 4527 y Fn(are)26 b(ordered)g(so)h(that)g(Im)14
b Fp(!)2048 4539 y Fo(2)2085 4527 y Fp(=!)2179 4539 y
Fo(1)2239 4527 y Fp(>)22 b Fn(0.)37 b(This)27 b(lattice)g(\003)g(is)h
(homothetic)456 4627 y(to)i(the)g(lattice)h(\003)1020
4639 y Fg(\034)1088 4627 y Fn(=)c Fj(h)q Fn(1)p Fp(;)14
b(\034)9 b Fj(i)p Fn(,)31 b(where)f Fp(\034)37 b Fn(=)27
b Fp(!)1883 4639 y Fo(2)1920 4627 y Fp(=!)2014 4639 y
Fo(1)2051 4627 y Fn(;)k(th)n(us)g(w)n(e)f(can)f(restrict)h(our)f(atten)
n(tion)i(to)456 4727 y(lattices)c(of)h(this)f(form)h(\003)1253
4739 y Fg(\034)1322 4727 y Fn(with)g Fp(\034)k Fj(2)24
b(H)q Fn(,)j Fj(H)i Fn(denoting)e(the)h(upp)r(er)g(half)g(plane)f(in)h
Fl(C)15 b Fn(.)555 4826 y(Tw)n(o)27 b(suc)n(h)h(lattices)g(can)f(still)
h(b)r(e)g(homothetic.)38 b(T)-7 b(o)28 b(determine)g(when)g(this)g
(happ)r(ens,)g(w)n(e)456 4926 y(consider)20 b(a)h(single)g(lattice)h
(\003)1367 4938 y Fg(\034)1408 4926 y Fn(.)35 b(The)21
b(p)r(ossible)g(ordered)g(bases)f(of)i(\003)2589 4938
y Fg(\034)2651 4926 y Fn(are)f(precisely)f(the)i(bases)456
5071 y Fj(h)p Fp(c\034)28 b Fn(+)18 b Fp(d;)c(a\034)28
b Fn(+)18 b Fp(b)p Fj(i)23 b Fn(with)1218 4954 y Ff(\022)1320
5020 y Fp(a)87 b(b)1324 5120 y(c)g(d)1532 4954 y Ff(\023)1616
5071 y Fj(2)24 b Fn(SL)1793 5083 y Fo(2)1830 5071 y Fn(\()p
Fl(Z)o Fn(\).)30 b(\(Recall)23 b(that)g(SL)2560 5083
y Fo(2)2597 5071 y Fn(\()p Fl(Z)o Fn(\))18 b(is)23 b(the)g(group)f(of)h
(2)9 b Fj(\002)g Fn(2)456 5216 y(matrices)35 b(with)i(in)n(teger)f(en)n
(tries)g(and)g(determinan)n(t)h(1.)63 b(Here)37 b(the)g(p)r(ositiv)n(e)
f(determinan)n(t)1933 5315 y Fo(1)p eop
%%Page: 2 2
2 1 bop 456 251 a Fo(2)1223 b(TOM)22 b(WESTON)456 450
y Fn(condition)31 b(insures)f(that)i(our)e(basis)h(will)h(still)f
(satisfy)2247 417 y Fg(a\034)7 b Fo(+)p Fg(b)p 2247 431
154 4 v 2247 479 a(c\034)g Fo(+)p Fg(d)2440 450 y Fj(2)29
b(H)q Fn(.\))49 b(These)31 b(lattices)g(are)f(in)456
567 y(turn)d(homothetic)h(to)g(the)g(lattices)f(\003)1663
579 y Fg(\034)1701 563 y Fe(0)1754 567 y Fn(with)h Fp(\034)1988
537 y Fh(0)2036 567 y Fn(=)2133 534 y Fg(a\034)7 b Fo(+)p
Fg(b)p 2133 548 V 2133 596 a(c\034)g Fo(+)p Fg(d)2297
567 y Fn(,)28 b(and)f(these)h(are)e(the)i(only)g(lattices)456
669 y(of)f(this)h(form)f(whic)n(h)h(are)e(homothetic)i(to)f(\003)1877
681 y Fg(\034)1919 669 y Fn(.)555 768 y(W)-7 b(e)30 b(rephrase)d(our)i
(results)g(as)f(follo)n(ws:)39 b(w)n(e)29 b(de\014ne)h(an)f(action)f
(of)i(the)f(group)f(SL)3170 780 y Fo(2)3208 768 y Fn(\()p
Fl(Z)o Fn(\))c(on)456 868 y Fj(H)k Fn(b)n(y)1542 919
y Ff(\022)1645 986 y Fp(a)87 b(b)1649 1086 y(c)g(d)1857
919 y Ff(\023)1932 1037 y Fp(\034)32 b Fn(=)2098 980
y Fp(a\034)c Fn(+)18 b Fp(b)p 2098 1017 227 4 v 2098
1093 a(c\034)28 b Fn(+)18 b Fp(d)2335 1037 y(:)456 1227
y Fn(\(One)31 b(c)n(hec)n(ks)f(easily)h(that)g(this)h(really)e(is)h(a)g
(group)f(action.\))48 b(W)-7 b(e)32 b(ha)n(v)n(e)e(a)h(map)g(from)g
Fj(H)i Fn(to)456 1327 y(the)d(set)g(of)f(homothet)n(y)h(classes)e(of)i
(lattices)g(giv)n(en)f(b)n(y)g Fp(\034)37 b Fj(7!)27
b Fn(\003)2476 1339 y Fg(\034)2517 1327 y Fn(,)j(and)g(t)n(w)n(o)f
(lattices)h(\003)3240 1339 y Fg(\034)3311 1327 y Fn(and)456
1427 y(\003)514 1439 y Fg(\034)552 1422 y Fe(0)606 1427
y Fn(are)e(homothetic)h(if)g(and)g(only)f(if)h(there)g(is)g(some)f
Fp(\015)h Fj(2)d Fn(SL)2440 1439 y Fo(2)2477 1427 y Fn(\()p
Fl(Z)p Fn(\))d(with)29 b Fp(\015)5 b(\034)35 b Fn(=)24
b Fp(\034)3069 1397 y Fh(0)3093 1427 y Fn(.)41 b(That)29
b(is,)456 1526 y(w)n(e)j(can)h(regard)e(isomorphism)h(classes)f(of)i
(lattices)g(as)f(parametrized)g(b)n(y)g(the)i(orbit)e(space)456
1626 y(SL)554 1638 y Fo(2)591 1626 y Fn(\()p Fl(Z)o Fn(\))p
Fj(nH)q Fn(.)39 b(\(W)-7 b(e)31 b(write)f(the)g(group)f(in)i(this)f
(quotien)n(t)g(on)g(the)h(left)f(since)g(it)h(acts)f(on)g
Fj(H)h Fn(on)456 1726 y(the)c(left.\))38 b(This)27 b(in)g(turn)g(allo)n
(ws)f(us)h(to)g(iden)n(tify)h(isomorphism)e(classes)f(of)i(complex)g
(elliptic)456 1825 y(curv)n(es)f(with)i(elemen)n(ts)g(of)f(SL)1431
1837 y Fo(2)1468 1825 y Fn(\()p Fl(Z)p Fn(\))p Fj(nH)q
Fn(:)1479 1984 y(SL)1577 1996 y Fo(2)1614 1984 y Fn(\()p
Fl(Z)p Fn(\))p Fj(nH)18 b( )-14 b(!)23 b Fn(Ell\()p Fl(C)15
b Fn(\))1801 2113 y Fp(\034)33 b Fj(\000)-15 b(!)23 b
Fl(C)15 b Fp(=)p Fn(\003)2180 2125 y Fg(\034)1748 2216
y Fp(!)1800 2228 y Fo(2)p 1748 2253 89 4 v 1748 2329
a Fp(!)1800 2341 y Fo(1)1870 2272 y Fj( )-14 b(\000)22
b Fl(C)15 b Fp(=)f Fj(h)6 b Fp(!)2226 2284 y Fo(1)2263
2272 y Fp(;)14 b(!)2352 2284 y Fo(2)2389 2272 y Fj(i)555
2471 y Fn(One)25 b(can)g(sho)n(w)g(\(see)g([13)o(,)i(Chapter)d(7,)i
(Theorem)f(2])g(or)f([15)o(,)i(Chapter)f(1,)h(Corollary)d(1.6]\))456
2571 y(that)k(SL)733 2583 y Fo(2)771 2571 y Fn(\()p Fl(Z)o
Fn(\))22 b(is)28 b(generated)e(b)n(y)i(the)g(t)n(w)n(o)e(matrices)1311
2779 y Fp(S)i Fn(=)1477 2662 y Ff(\022)1580 2728 y Fn(0)83
b Fj(\000)p Fn(1)1580 2828 y(1)115 b(0)1852 2662 y Ff(\023)2010
2779 y Fp(T)34 b Fn(=)2181 2662 y Ff(\022)2283 2728 y
Fn(1)83 b(1)2283 2828 y(0)g(1)2491 2662 y Ff(\023)2566
2779 y Fn(;)456 2987 y(these)22 b(act)f(on)h Fj(H)h Fn(b)n(y)f
Fp(S)5 b Fn(\()p Fp(\034)k Fn(\))24 b(=)f Fj(\000)p Fn(1)p
Fp(=\034)30 b Fn(and)22 b Fp(T)12 b Fn(\()p Fp(\034)d
Fn(\))23 b(=)g Fp(\034)17 b Fn(+)7 b(1.)34 b(It)23 b(follo)n(ws)e
(easily)g(\(see)h([13)o(,)h(Chapter)456 3087 y(7,)32
b(Theorem)e(1])i(or)e([15)o(,)j(Chapter)e(1,)h(Prop)r(osition)e(1.5];)j
(in)f(fact,)g(one)f(usually)g(pro)n(v)n(es)f(the)456
3187 y(last)j(t)n(w)n(o)f(facts)h(sim)n(ultaneously\))g(that)h(a)f
(fundamen)n(tal)g(domain)g(for)g(SL)2863 3199 y Fo(2)2900
3187 y Fn(\()p Fl(Z)p Fn(\))p Fj(nH)28 b Fn(is)33 b(giv)n(en)456
3286 y(b)n(y)e(the)h(follo)n(wing)f(region:)43 b(\(F)-7
b(or)32 b(this)g(region)e(to)h(b)r(e)h(a)g(fundamen)n(tal)f(domain)h
(just)g(means)456 3386 y(that)27 b(ev)n(ery)g(SL)953
3398 y Fo(2)990 3386 y Fn(\()p Fl(Z)p Fn(\)-o)o(rbit)22
b(on)27 b Fj(H)i Fn(corresp)r(onds)c(to)j(a)f(unique)h(p)r(oin)n(t)g
(of)f(the)h(region.\))1342 4885 y @beginspecial 0 @llx
0 @lly 146 @urx 162 @ury 1460 @rwi @setspecial
%%BeginDocument: ell1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ell1.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Apr 20 11:24:36 1999
%%For: weston@noether (Tom Weston)
%%Orientation: Portrait
%%BoundingBox: 0 0 146 162
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 0.5000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-35.0 181.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7012 m -1000 -1000 l 7012 -1000 l 7012 7012 l cp clip
 0.03000 0.03000 sc
% Arc
7.500 slw
gs n 3600.0 6150.0 2550.0 -118.1 -61.9 arc
gs col0 s gr
 gr

% Arc
15.000 slw
gs n 3600.0 6150.0 2550.0 -118.1 -61.9 arc
gs col0 s gr
 gr

% Arc
7.500 slw
gs  [60] 0 sd
n 3600.0 6000.0 2400.0 180.0 0.0 arc
gs col0 s gr
 gr
 [] 0 sd
% Arc
15.000 slw
gs  clippath
4706 3820 m 4800 3900 l 4679 3873 l 4813 3940 l 4840 3887 l cp
2521 3873 m 2400 3900 l 2494 3820 l 2360 3887 l 2387 3940 l cp
clip
n 3600.0 6150.0 2550.0 -118.1 -61.9 arc
gs col0 s gr
 gr

% arrowhead
7.500 slw
n 4706 3820 m 4800 3900 l 4679 3873 l  col0 s
% arrowhead
n 2521 3873 m 2400 3900 l 2494 3820 l  col0 s
% Arc
gs  clippath
4542 990 m 4650 1050 l 4526 1048 l 4657 1083 l 4672 1025 l cp
2674 1048 m 2550 1050 l 2658 990 l 2528 1025 l 2543 1083 l cp
clip
n 3600.0 4650.0 3750.0 -106.3 -73.7 arc
gs col0 s gr
 gr

% arrowhead
n 4542 990 m 4650 1050 l 4526 1048 l  col0 s
% arrowhead
n 2674 1048 m 2550 1050 l 2658 990 l  col0 s
% Arc
gs  clippath
4399 3971 m 4500 3900 l 4445 4011 l 4533 3908 l 4487 3869 l cp
2755 4011 m 2700 3900 l 2801 3971 l 2713 3869 l 2667 3908 l cp
clip
n 3600.0 3225.0 1125.0 143.1 36.9 arcn
gs col0 s gr
 gr

% arrowhead
n 4399 3971 m 4500 3900 l 4445 4011 l  col0 s
% arrowhead
n 2755 4011 m 2700 3900 l 2801 3971 l  col0 s
% Polyline
n 3600 6000 m 3600 1200 l gs col0 s gr 
% Polyline
15.000 slw
n 2400 3900 m 2400 1200 l gs col0 s gr 
% Polyline
n 4800 3900 m 4800 1200 l gs col0 s gr 
% Polyline
7.500 slw
n 1200 6000 m 6000 6000 l gs col0 s gr 
% Polyline
0.000 slw
gs  clippath
2595 1230 m 2475 1200 l 2595 1170 l 2475 1170 l 2475 1230 l cp
2445 1320 m 2475 1200 l 2505 1320 l 2505 1200 l 2445 1200 l cp
clip
n 2475 1200 m 2475 3750 l 3000 3600 l 3600 3525 l 4200 3600 l 4725 3750 l
 4725 1200 l 2475 1200 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 165.00 80.00] PATmp PATsp ef gr PATusp gr

% Polyline
15.000 slw
n 2250 2550 m 2400 2700 l 2550 2550 l gs col0 s gr 
% Polyline
n 2250 2400 m 2400 2550 l 2550 2400 l gs col0 s gr 
% Polyline
n 4650 2550 m 4800 2700 l 4950 2550 l gs col0 s gr 
% Polyline
n 4650 2400 m 4800 2550 l 4950 2400 l gs col0 s gr 
% Polyline
n 2876 3848 m 3000 3675 l 2827 3551 l gs col0 s gr 
% Polyline
n 4375 3554 m 4200 3675 l 4321 3850 l gs col0 s gr 
/Times-Italic ff 270.00 scf sf
3675 3900 m
gs 1 -1 sc (i) col0 sh gr
/Symbol ff 270.00 scf sf
4650 4125 m
gs 1 -1 sc (r) col0 sh gr
/Times-Italic ff 270.00 scf sf
3675 4575 m
gs 1 -1 sc (S) col0 sh gr
/Times-Italic ff 270.00 scf sf
3600 825 m
gs 1 -1 sc (T) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 555 5104 a(The)g(arro)n(ws)e(on)h(the)h(b)r(oundary)g
(lines)f(indicate)h(that)g(these)g(lines)g(are)f(iden)n(ti\014ed)h(b)n
(y)g(the)456 5216 y(giv)n(en)e(transformations.)35 b
Fp(\032)28 b Fn(is)f(the)h(sixth)g(ro)r(ot)f(of)g(unit)n(y)2305
5183 y Fo(1)p 2305 5197 34 4 v 2305 5244 a(2)2367 5216
y Fn(+)2460 5135 y Fh(p)p 2514 5135 34 3 v 2514 5183
a Fo(3)p 2460 5197 88 4 v 2487 5244 a(2)2557 5216 y Fp(i)p
Fn(.)p eop
%%Page: 3 3
3 2 bop 1220 251 a Fo(THE)29 b(MODULAR)g(CUR)-7 b(VES)29
b Fg(X)2118 259 y Fd(0)2151 251 y Fo(\(11\))g(AND)g Fg(X)2529
259 y Fd(1)2562 251 y Fo(\(11\))731 b(3)555 450 y Fn(Note)27
b(that)g(on)g(iden)n(tifying)g(the)g(edges)f(of)h(this)g(region)f(one)h
(app)r(ears)e(to)i(obtain)g(a)f(sphere)456 550 y(with)h(a)g(single)f(p)
r(oin)n(t)i(remo)n(v)n(ed)d(\(this)j(p)r(oin)n(t)f(b)r(eing)g
(in\014nitely)h(far)f(up)g(the)g(imaginary)f(axis\).)1433
1579 y @beginspecial 0 @llx 0 @lly 124 @urx 120 @ury
1240 @rwi @setspecial
%%BeginDocument: ell5.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ell5.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Wed Apr 21 11:31:47 1999
%%For: weston@noether (Tom Weston)
%%Orientation: Portrait
%%BoundingBox: 0 0 124 120
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 0.4000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-82.0 204.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 9483 m -1000 -1000 l 9572 -1000 l 9572 9483 l cp clip
 0.02400 0.02400 sc
7.500 slw
% Ellipse
n 6000 6000 2400 2400 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6000 6000 75 75 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6000 3600 75 75 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Ellipse
n 6000 8400 75 75 0 360 DrawEllipse gs col7 0.00 shd ef gr gs col0 s gr

% Polyline
n 6000 5925 m 6000 3600 l gs col0 s gr 
% Polyline
0.000 slw
n 6075 3675 m 6075 5850 l 6150 6000 l 6000 6150 l 5850 6000 l 5925 5850 l
 5925 3675 l 5700 3675 l 5250 3750 l 4800 3975 l 4500 4200 l
 4050 4650 l 3750 5250 l 3675 5775 l 3675 6300 l 3825 6900 l
 4125 7350 l 4575 7875 l 5175 8175 l 5775 8325 l 6300 8325 l
 6825 8175 l 7200 8025 l 7575 7725 l 7950 7275 l 8175 6825 l
 8325 6075 l 8250 5325 l 7800 4500 l 7275 3975 l 6525 3675 l
 6075 3675 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 245.00 245.00] PATmp PATsp ef gr PATusp 
% Polyline
15.000 slw
n 5850 4800 m 6000 4950 l 6150 4800 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 390.00 320.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5850 4650 m 6000 4800 l 6150 4650 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 390.00 310.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3450 5850 m 3600 6000 l 3750 5850 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 230.00 390.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 8250 5850 m 8400 6000 l 8550 5850 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 550.00 390.00] PATmp PATsp ef gr PATusp gs col0 s gr 
$F2psEnd
rs
end

%%EndDocument
 @endspecial 555 1678 a(On)j(inserting)g(this)h(p)r(oin)n(t)g(\(whic)n
(h)f(is)h(called)f(the)h Fi(cusp)h(at)g(in\014nity)f
Fn(and)f(written)h(as)e Fp(i)p Fj(1)p Fn(\))456 1778
y(one)38 b(obtains)g(\(at)i(least)e(top)r(ologically\))g(a)g(sphere.)70
b(In)39 b(fact,)j(it)e(is)e(p)r(ossible)h(to)g(de\014ne)g(a)456
1878 y(complex)f(structure)f(on)h(this)h(space)f(\(this)h(is)f(the)h
(ob)n(vious)e(complex)h(structure)f(at)i(most)456 1977
y(p)r(oin)n(ts,)29 b(although)g(one)g(has)f(to)i(b)r(e)f(a)g(little)h
(careful)f(at)g Fp(\032)p Fn(,)h Fp(i)f Fn(and)g(the)h(cusp)f
Fp(i)p Fj(1)p Fn(\),)g(making)g(it)456 2077 y(in)n(to)19
b(a)h(compact)f Fi(R)n(iemann)k(surfac)l(e)p Fn(;)g(see)c([14,)i
(Chapter)f(1,)h(Section)f(2].)34 b(\(A)20 b(Riemann)g(surface)456
2177 y(is)37 b(essen)n(tially)f(just)j(a)e(top)r(ological)f(space)g
(for)h(whic)n(h)h(ev)n(ery)e(p)r(oin)n(t)i(has)f(a)g(neigh)n(b)r(orho)r
(o)r(d)456 2276 y(isomorphic)32 b(to)i(an)f(op)r(en)h(subset)g(of)g
Fl(C)15 b Fn(.\))61 b(When)35 b(regarding)c(it)j(from)g(this)g(p)r(oin)
n(t)g(of)g(view,)456 2376 y(w)n(e)25 b(will)h(denote)g(this)g(Riemann)g
(surface)f(b)n(y)h Fp(X)7 b Fn(\(1\);)26 b(denoting)g(b)n(y)f
Fj(C)31 b Fn(the)26 b(set)g(con)n(taining)f(the)456 2475
y(cusp,)i(w)n(e)g(ha)n(v)n(e)1506 2610 y Fp(X)7 b Fn(\(1\))22
b(=)h(\(SL)1928 2622 y Fo(2)1966 2610 y Fn(\()p Fl(Z)o
Fn(\))p Fj(nH)q Fn(\))13 b Fj([)18 b(C)5 b Fp(:)456 2763
y Fn(Our)26 b(description)i(ab)r(o)n(v)n(e)e(sho)n(ws)g(that)i(it)g(is)
g(isomorphic)e(the)i(the)g Fi(R)n(iemann)h(spher)l(e)g
Fl(P)3239 2733 y Fo(1)3275 2763 y Fn(\()p Fl(C)15 b Fn(\))q(.)555
2863 y(The)20 b(Riemann)g(sphere)f(is)h(usually)f(obtained)g(b)n(y)h
(adding)f(a)h(single)f(p)r(oin)n(t)h(at)f(in\014nit)n(y)h(to)g(the)456
2962 y(complex)25 b(plane)i Fl(C)15 b Fn(.)42 b(F)-7
b(rom)26 b(this)h(p)r(oin)n(t)f(of)g(view)g(it)h(is)f(easy)g(to)g
(determine)g(the)h(meromorphic)456 3062 y(functions)i(on)f
Fl(P)983 3032 y Fo(1)1019 3062 y Fn(\()p Fl(C)15 b Fn(\))q(:)45
b(let)29 b Fp(f)9 b Fn(\()p Fp(z)t Fn(\))28 b(b)r(e)h(suc)n(h)g(a)f
(function,)i(whic)n(h)f(w)n(e)f(regard)f(as)h(a)g(function)i(on)456
3161 y Fl(C)15 b Fn(.)42 b(Since)27 b Fp(f)9 b Fn(\()p
Fp(z)t Fn(\))26 b(do)r(es)h(not)g(ha)n(v)n(e)e(an)i(essen)n(tial)f
(singularit)n(y)f(at)i(in\014nit)n(y)-7 b(,)27 b(it)g(only)g(has)f(p)r
(oles)g(in)456 3261 y(some)h(b)r(ounded)h(region)f(of)h
Fl(C)49 b Fn(and)27 b(therefore)g(has)h(\014nitely)g(man)n(y)g(p)r
(oles.)37 b(W)-7 b(e)28 b(can)g(m)n(ultiply)456 3361
y Fp(f)9 b Fn(\()p Fp(z)t Fn(\))28 b(b)n(y)h(p)r(olynomials)f(to)h
(eliminate)g(these)g(p)r(oles,)g(and)g(w)n(e)g(are)f(left)h(with)h(a)e
(function)i Fp(g)s Fn(\()p Fp(z)t Fn(\))456 3460 y(whic)n(h)g(has)g(a)g
(p)r(ole)h(at)f(in\014nit)n(y)h(and)f(no)h(other)f(p)r(oles.)45
b(Supp)r(ose)31 b(that)f(this)h(p)r(ole)g(has)f(order)456
3560 y Fp(n)p Fn(.)46 b(The)31 b(standard)f(function)i(with)f(an)g
(order)e Fp(n)i Fn(p)r(ole)g(at)g Fj(1)g Fn(is)g Fp(z)2570
3530 y Fg(n)2614 3560 y Fn(,)h(whic)n(h)f(is)g(holomorphic)456
3660 y(on)24 b(the)h(rest)e(of)i Fl(P)1010 3629 y Fo(1)1046
3660 y Fn(\()p Fl(C)15 b Fn(\).)42 b(So)24 b(subtract)g(from)g
Fp(g)s Fn(\()p Fp(z)t Fn(\))g(an)g(appropriate)f(m)n(ultiple)i(of)g
Fp(z)3047 3629 y Fg(n)3115 3660 y Fn(to)g(obtain)456
3759 y(a)30 b(function)h Fp(h)p Fn(\()p Fp(z)t Fn(\))f(with)h(a)g(p)r
(ole)f(at)h(in\014nit)n(y)g(of)f(order)f(at)i(most)f
Fp(n)21 b Fj(\000)f Fn(1)30 b(and)g(no)h(other)f(p)r(oles.)456
3859 y(Con)n(tin)n(uing)35 b(in)h(this)g(w)n(a)n(y)f(w)n(e)h(\014nd)g
(that)g(w)n(e)g(can)f(subtract)h(a)f(p)r(olynomial)h(from)f
Fp(g)s Fn(\()p Fp(z)t Fn(\))h(to)456 3959 y(obtain)e(a)g(function)i
(whic)n(h)e(has)g(no)h(p)r(oles)f(on)h Fl(C)55 b Fn(or)34
b(at)h(in\014nit)n(y;)j(b)n(y)d(Liouville's)f(theorem)456
4058 y(suc)n(h)k(a)h(function)g(is)g(a)g(constan)n(t.)70
b(Th)n(us)39 b Fp(g)s Fn(\()p Fp(z)t Fn(\))f(is)h(a)f(p)r(olynomial,)k
(and)d Fp(f)9 b Fn(\()p Fp(z)t Fn(\))38 b(is)h(rational)456
4158 y(function.)d(W)-7 b(e)26 b(conclude)f(that)g(the)h(\014eld)f(of)g
(meromorphic)f(functions)i(on)e Fl(P)2900 4128 y Fo(1)2936
4158 y Fn(\()p Fl(C)16 b Fn(\))31 b(is)25 b(just)h(the)456
4257 y(\014eld)f Fl(C)15 b Fn(\()p Fp(z)t Fn(\))30 b(of)25
b(rational)e(functions)i(in)g Fp(z)t Fn(.)36 b(\(The)25
b(fundamen)n(tal)f(reason)f(wh)n(y)i(there)f(are)g(so)g(few)456
4357 y(meromorphic)i(functions)i(on)f Fl(P)1484 4327
y Fo(1)1520 4357 y Fn(\()p Fl(C)15 b Fn(\))34 b(is)28
b(that)g(it,)g(unlik)n(e)f Fl(C)15 b Fn(,)34 b(is)27
b(compact.\))555 4457 y(W)-7 b(e)40 b(conclude)e(that)h(the)h(function)
f(\014eld)g(of)g Fp(X)7 b Fn(\(1\))38 b(is)h(generated)f(o)n(v)n(er)f
Fl(C)60 b Fn(b)n(y)39 b(a)f(single)456 4556 y(transcenden)n(tal)19
b(function.)35 b(Regarding)19 b(p)r(oin)n(ts)h(of)h Fp(X)7
b Fn(\(1\))19 b(as)h(isomorphism)f(classes)h(of)g(elliptic)456
4656 y(curv)n(es)30 b Fl(C)15 b Fp(=)p Fn(\003,)39 b(the)32
b(standard)f(c)n(hoice)g(of)h(suc)n(h)f(a)h(function)g(is)g(the)g
(function)h Fp(j)k Fn(whic)n(h)32 b(sends)456 4756 y(an)24
b(elliptic)h(curv)n(e)f(to)h(its)g Fp(j)5 b Fn(-in)n(v)-5
b(arian)n(t,)23 b(whic)n(h)i(is)g(a)f(complex)g(n)n(um)n(b)r(er)h(whic)
n(h)f(classi\014es)g(it)h(up)456 4855 y(to)i(isomorphism.)36
b(\(See)28 b([14)o(,)f(Chapter)g(3,)h(Section)f(1].\))37
b(Regarding)26 b Fp(j)32 b Fn(as)27 b(a)g(function)i(of)e(the)456
4955 y(co)r(ordinate)f Fp(\034)37 b Fn(on)28 b Fj(H)q
Fn(,)f(w)n(e)h(ha)n(v)n(e)e(the)i(iden)n(tit)n(y)1609
5170 y Fp(j)1662 5053 y Ff(\022)1733 5114 y Fp(a\034)g
Fn(+)18 b Fp(b)p 1733 5151 227 4 v 1733 5227 a(c\034)28
b Fn(+)18 b Fp(d)1970 5053 y Ff(\023)2054 5170 y Fn(=)23
b Fp(j)5 b Fn(\()p Fp(\034)k Fn(\))p eop
%%Page: 4 4
4 3 bop 456 251 a Fo(4)1223 b(TOM)22 b(WESTON)456 487
y Fn(for)592 370 y Ff(\022)694 437 y Fp(a)87 b(b)698
536 y(c)g(d)906 370 y Ff(\023)1005 487 y Fj(2)38 b Fn(SL)1196
499 y Fo(2)1233 487 y Fn(\()p Fl(Z)p Fn(\),)33 b(since)1637
455 y Fg(a\034)7 b Fo(+)p Fg(b)p 1637 469 154 4 v 1637
516 a(c\034)g Fo(+)p Fg(d)1838 487 y Fn(and)36 b Fp(\034)46
b Fn(giv)n(e)36 b(rise)g(to)g(the)h(same)f(p)r(oin)n(t)g(of)h
Fp(X)7 b Fn(\(1\).)456 632 y(This)32 b(means)g(that)h
Fp(j)k Fn(is)32 b(a)g Fi(mo)l(dular)j(form)g(of)g(weight)g
Fn(0,)e(otherwise)f(kno)n(wn)f(as)h(a)g(mo)r(dular)456
732 y(function.)48 b(In)32 b(particular,)f Fp(j)5 b Fn(\()p
Fp(\034)30 b Fn(+)21 b(1\))29 b(=)g Fp(j)5 b Fn(\()p
Fp(\034)k Fn(\),)33 b(so)e(w)n(e)g(can)g(write)g(out)g(a)g(F)-7
b(ourier)30 b(expansion)456 832 y(for)d Fp(j)32 b Fn(in)c(terms)f(of)h
Fp(q)e Fn(=)d Fp(e)1262 801 y Fo(2)p Fg(\031)r(i\034)1400
832 y Fn(.)37 b(It)28 b(can)f(b)r(e)h(sho)n(wn)f(that)1101
1005 y Fp(j)5 b Fn(\()p Fp(\034)k Fn(\))24 b(=)1371 949
y(1)p 1371 986 42 4 v 1372 1062 a Fp(q)1441 1005 y Fn(+)18
b(744)f(+)h(196884)p Fp(q)g Fn(+)g(21493760)p Fp(q)2516
971 y Fo(2)2568 1005 y Fn(+)g Fj(\001)c(\001)g(\001)28
b Fn(;)456 1189 y(see)f([15)o(,)h(Chapter)f(1,)g(Remark)g(7.4].)555
1288 y(Recall)i(that)g(the)g(algebraic)e(curv)n(e)h Fl(P)1759
1258 y Fo(1)1759 1311 y Fc(C)1832 1288 y Fn(also)g(has)g(a)g(function)i
(\014eld)f Fl(C)15 b Fn(\()p Fp(z)t Fn(\).)46 b(This)29
b(suggests)456 1388 y(that)35 b(w)n(e)g(should)g(b)r(e)h(able)f(to)g
(regard)e(the)j(Riemann)g(sphere)e(as)h(an)g(algebraic)e(curv)n(e.)59
b(In)456 1487 y(fact,)36 b(b)r(oth)f(complex)f(algebraic)f(curv)n(es)g
(and)h(compact)g(Riemann)h(surfaces)e(are)g(uniquely)456
1587 y(determined)27 b(b)n(y)h(their)f(function)h(\014elds,)g(whic)n(h)
g(are)e(\014nitely)i(generated)f(\014eld)h(extensions)f(of)456
1687 y Fl(C)53 b Fn(of)32 b(transcendence)f(degree)g(1.)50
b(This)32 b(sets)f(up)i(a)e(bijection)i(b)r(et)n(w)n(een)f(complex)f
(algebraic)456 1786 y(curv)n(es)22 b(and)h(Riemann)h(surfaces:)33
b(w)n(e)23 b(asso)r(ciate)f(to)i(the)g(\(unique\))g(complex)f
(algebraic)e(curv)n(e)456 1886 y Fp(X)38 b Fn(with)33
b(function)f(\014eld)h Fp(K)k Fn(the)c(\(unique\))g(Riemann)f(surface)f
Fp(X)2582 1856 y Fh(0)2637 1886 y Fn(with)i(function)f(\014eld)h
Fp(K)6 b Fn(.)456 1986 y(This)35 b(bijection)g(turns)g(out)g(to)g(resp)
r(ect)f(all)h(of)g(the)g(other)g(relev)-5 b(an)n(t)34
b(structure)g(as)h(w)n(ell;)j(in)456 2085 y(particular,)26
b Fp(X)34 b Fn(and)27 b Fp(X)1202 2055 y Fh(0)1253 2085
y Fn(ha)n(v)n(e)f(the)i(same)f(sets)g(of)h(p)r(oin)n(ts:)37
b Fp(X)7 b Fn(\()p Fl(C)14 b Fn(\))30 b(=)22 b Fp(X)2720
2055 y Fh(0)2743 2085 y Fn(\()p Fl(C)15 b Fn(\).)555
2185 y(In)24 b(summary)-7 b(,)24 b(w)n(e)g(ha)n(v)n(e)e(seen)i(that)g
(the)g(set)g(of)g(isomorphism)e(classes)h(of)h(complex)f(elliptic)456
2284 y(curv)n(es)30 b(is)h(in)h(natural)e(bijection)i(with)g(the)g
(non-cuspidal)f(p)r(oin)n(ts)g(of)g(a)g(complex)g(algebraic)456
2384 y(curv)n(e)26 b Fp(X)7 b Fn(\(1\))859 2396 y Fc(C)905
2384 y Fn(:)1479 2489 y Fp(X)g Fn(\(1\))1661 2501 y Fc(C)1707
2489 y Fn(\()p Fl(C)15 b Fn(\))29 b Fj( )-14 b(!)24 b
Fn(Ell)o(\()p Fl(C)16 b Fn(\))24 b Fj([)19 b(C)5 b Fp(:)456
2610 y Fn(W)-7 b(e)28 b(ha)n(v)n(e)e(also)h(seen)g(that)h
Fp(X)7 b Fn(\(1\))1499 2622 y Fc(C)1572 2610 y Fn(is)27
b(isomorphic)g(to)g(the)h(pro)5 b(jectiv)n(e)27 b(line)g
Fl(P)2914 2580 y Fo(1)2914 2634 y Fc(C)2959 2610 y Fn(.)555
2710 y(Of)g(course,)e(the)i(curv)n(e)e Fl(P)1362 2680
y Fo(1)1362 2733 y Fc(C)1433 2710 y Fn(can)h(actually)g(b)r(e)g
(de\014ned)h(o)n(v)n(er)e Fl(Q)37 b Fn(as)26 b(the)h(pro)5
b(jectiv)n(e)25 b(line)h Fl(P)3396 2680 y Fo(1)3396 2733
y Fc(Q)456 2819 y Fn(with)k(function)h(\014eld)g Fl(Q)5
b Fn(\()q Fp(j)g Fn(\);)38 b(the)30 b(fact)h(that)f Fl(C)15
b(Q)d Fn(\()p Fp(j)5 b Fn(\))34 b(=)27 b Fl(C)15 b Fn(\()p
Fp(j)5 b Fn(\))36 b(means)30 b(that)h Fl(P)2908 2789
y Fo(1)2908 2842 y Fc(Q)2956 2819 y Fn(\()p Fl(C)15 b
Fn(\))34 b(=)27 b Fl(P)3252 2789 y Fo(1)3252 2842 y Fc(C)3297
2819 y Fn(\()p Fl(C)15 b Fn(\).)456 2927 y(Th)n(us,)27
b(setting)h Fp(X)7 b Fn(\(1\))1144 2939 y Fc(Q)1215 2927
y Fn(=)23 b Fl(P)1355 2897 y Fo(1)1355 2951 y Fc(Q)1403
2927 y Fn(,)28 b(w)n(e)f(ha)n(v)n(e)f(a)i(bijection)1478
3071 y Fp(X)7 b Fn(\(1\))1660 3083 y Fc(Q)1708 3071 y
Fn(\()p Fl(C)16 b Fn(\))29 b Fj( )-14 b(!)23 b Fn(Ell\()p
Fl(C)15 b Fn(\))25 b Fj([)19 b(C)5 b Fp(:)456 3210 y
Fn(Since)22 b(w)n(e)g(ha)n(v)n(e)f(de\014ned)i Fp(X)7
b Fn(\(1\))1433 3222 y Fc(Q)1504 3210 y Fn(o)n(v)n(er)21
b Fl(Q)6 b Fn(,)29 b(one)22 b(migh)n(t)h(hop)r(e)f(that)h(w)n(e)f(also)
f(obtain)h(a)g(bijection)456 3309 y(b)r(et)n(w)n(een)33
b(the)h Fl(Q)6 b Fn(-v)-5 b(alued)39 b(p)r(oin)n(ts)33
b(of)h Fp(X)7 b Fn(\(1\))1828 3321 y Fc(Q)1910 3309 y
Fn(and)34 b(isomorphism)e(classes)g(of)i(elliptic)g(curv)n(es)456
3409 y(o)n(v)n(er)25 b Fl(Q)6 b Fn(.)43 b(Unfortunately)-7
b(,)28 b(this)g(is)f(not)h(the)g(case:)36 b(there)27
b(is)h(a)f(map)1438 3548 y(Ell\()p Fl(Q)6 b Fn(\))29
b Fj(!)23 b Fl(P)1851 3514 y Fo(1)1851 3569 y Fc(Q)1899
3548 y Fn(\()p Fl(Q)6 b Fn(\))29 b(=)23 b Fl(Q)30 b Fj([)19
b(f1g)456 3688 y Fn(sending)24 b(an)h(elliptic)h(curv)n(e)e(to)h(its)g
Fp(j)5 b Fn(-in)n(v)-5 b(arian)n(t,)24 b(but)i(it)g(is)f(not)g(a)f
(bijection.)37 b(This)25 b(is)g(b)r(ecause)456 3787 y(if)j(t)n(w)n(o)e
(elliptic)i(curv)n(es)e(o)n(v)n(er)g Fl(Q)39 b Fn(ha)n(v)n(e)27
b(the)g(same)g Fp(j)5 b Fn(-in)n(v)-5 b(arian)n(t)26
b(it)i(do)r(es)f(not)h(mean)f(that)h(there)456 3887 y(exists)c(an)g
(isomorphism)g(b)r(et)n(w)n(een)g(them)h(de\014ned)g(o)n(v)n(er)e
Fl(Q)6 b Fn(,)31 b(but)25 b(only)g(that)g(suc)n(h)f(an)g(isomor-)456
3986 y(phism)f(exists)f(o)n(v)n(er)1105 3965 y(\026)1093
3986 y Fl(Q)12 b Fn(.)35 b(Th)n(us)23 b(the)g(non-cuspidal)f(p)r(oin)n
(ts)h Fp(X)7 b Fn(\(1\))2467 3998 y Fc(Q)2516 3986 y
Fn(\()p Fl(Q)f Fn(\))29 b(classify)22 b(elliptic)i(curv)n(es)456
4086 y(o)n(v)n(er)h Fl(Q)40 b Fn(only)27 b(up)h(to)f(isomorphism)g(o)n
(v)n(er)1804 4065 y(\026)1792 4086 y Fl(Q)12 b Fn(.)1588
4269 y(2.)41 b Fk(Modular)31 b(p)-6 b(airs)555 4419 y
Fn(W)f(e)31 b(no)n(w)e(seek)h(to)g(redo)f(the)i(construction)e(of)h
(the)h(previous)e(section)g(for)h(a)g(sligh)n(tly)f(dif-)456
4518 y(feren)n(t)d(class)g(of)h(ob)5 b(jects.)36 b(W)-7
b(e)27 b(de\014ne)g(a)g Fi(mo)l(dular)i(p)l(air)f Fn(o)n(v)n(er)d(a)i
(\014eld)g Fp(K)32 b Fn(to)27 b(b)r(e)g(a)f(pair)h(\()p
Fp(E)5 b(;)14 b(C)6 b Fn(\))456 4618 y(of)29 b(an)g(elliptic)h(curv)n
(e)e(o)n(v)n(er)f Fp(K)35 b Fn(and)29 b(a)g(cyclic)g(subgroup)f
Fp(C)36 b Fn(of)29 b Fp(E)5 b Fn(\()2589 4597 y(\026)2566
4618 y Fp(K)h Fn(\))30 b(of)f(order)f(11.)41 b(W)-7 b(e)30
b(fur-)456 4717 y(ther)e(require)g(that)h(ev)n(ery)e
Fp(\033)33 b Fn(in)c(the)g(Galois)f(group)f(Gal\()2312
4696 y(\026)2290 4717 y Fp(K)6 b(=K)g Fn(\))28 b(maps)g
Fp(C)35 b Fn(to)29 b(itself.)41 b(This)29 b(is)456 4817
y(certainly)g(the)h(case)g(if)g Fp(C)37 b Fn(actually)29
b(lies)h(in)h Fp(E)5 b Fn(\()p Fp(K)h Fn(\),)31 b(but)f(this)h(is)f
(not)g(necessary;)f(essen)n(tially)456 4917 y(all)j(that)h(w)n(e)f(are)
g(requiring)f(is)h(that)h(eac)n(h)f Fp(\033)k Fn(sends)d(eac)n(h)e
(elemen)n(t)i(of)g Fp(C)39 b Fn(to)32 b(a)g(m)n(ultiple)i(of)456
5016 y(itself.)53 b(Tw)n(o)32 b(mo)r(dular)g(pairs)g(\()p
Fp(E)1534 5028 y Fo(1)1572 5016 y Fp(;)14 b(C)1668 5028
y Fo(1)1706 5016 y Fn(\))33 b(and)g(\()p Fp(E)2031 5028
y Fo(2)2069 5016 y Fp(;)14 b(C)2165 5028 y Fo(2)2202
5016 y Fn(\))33 b(o)n(v)n(er)e Fp(K)39 b Fn(will)33 b(b)r(e)g
(considered)f(to)h(b)r(e)456 5116 y(isomorphic)27 b(if)i(there)f(is)h
(an)f(isomorphism)f(of)i Fp(E)2011 5128 y Fo(1)2077 5116
y Fn(with)g Fp(E)2328 5128 y Fo(2)2365 5116 y Fn(,)g(de\014ned)g(o)n(v)
n(er)e Fp(K)6 b Fn(,)28 b(whic)n(h)h(sends)456 5216 y
Fp(C)515 5228 y Fo(1)580 5216 y Fn(to)e Fp(C)740 5228
y Fo(2)778 5216 y Fn(.)p eop
%%Page: 5 5
5 4 bop 1220 251 a Fo(THE)29 b(MODULAR)g(CUR)-7 b(VES)29
b Fg(X)2118 259 y Fd(0)2151 251 y Fo(\(11\))g(AND)g Fg(X)2529
259 y Fd(1)2562 251 y Fo(\(11\))731 b(5)1146 1092 y @beginspecial
0 @llx 0 @lly 193 @urx 87 @ury 1930 @rwi @setspecial
%%BeginDocument: ell2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ell2.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Wed Apr 21 09:47:31 1999
%%For: weston@noether (Tom Weston)
%%Orientation: Portrait
%%BoundingBox: 0 0 193 87
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 0.2500
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-35.0 138.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 10150 m -1000 -1000 l 16162 -1000 l 16162 10150 l cp clip
 0.01500 0.01500 sc
7.500 slw
% Ellipse
n 4200 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 275.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4800 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 315.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 3600 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 235.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5400 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 355.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6000 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 395.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6600 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 435.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7200 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 475.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7800 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 515.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8400 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 555.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9000 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 595.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9600 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 635.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10200 8400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 675.00 555.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4500 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 295.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5100 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 335.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 3900 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 255.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5700 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 375.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6300 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 415.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6900 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 455.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7500 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 495.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8100 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 535.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8700 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 575.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9300 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 615.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9900 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 655.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10500 8100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 695.00 535.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4800 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 315.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5400 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 355.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4200 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 275.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6000 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 395.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6600 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 435.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7200 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 475.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7800 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 515.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8400 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 555.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9000 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 595.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9600 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 635.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10200 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 675.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10800 7800 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 715.00 515.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5100 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 335.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5700 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 375.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4500 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 295.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6300 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 415.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6900 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 455.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7500 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 495.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8100 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 535.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8700 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 575.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9300 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 615.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9900 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 655.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10500 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 695.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11100 7500 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 735.00 495.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5400 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 355.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6000 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 395.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 4800 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 315.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6600 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 435.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7200 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 475.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7800 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 515.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8400 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 555.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9000 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 595.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9600 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 635.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10200 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 675.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10800 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 715.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11400 7200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 755.00 475.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5700 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 375.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6300 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 415.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5100 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 335.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6900 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 455.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7500 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 495.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8100 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 535.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8700 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 575.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9300 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 615.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9900 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 655.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10500 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 695.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11100 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 735.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11700 6900 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 775.00 455.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6000 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 395.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6600 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 435.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5400 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 355.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7200 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 475.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7800 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 515.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8400 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 555.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9000 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 595.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9600 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 635.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10200 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 675.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10800 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 715.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11400 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 755.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12000 6600 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 795.00 435.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6300 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 415.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6900 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 455.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5700 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 375.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7500 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 495.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8100 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 535.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8700 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 575.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9300 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 615.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9900 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 655.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10500 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 695.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11100 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 735.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11700 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 775.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12300 6300 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 815.00 415.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6600 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 435.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7200 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 475.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6000 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 395.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7800 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 515.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8400 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 555.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9000 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 595.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9600 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 635.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10200 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 675.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10800 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 715.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11400 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 755.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12000 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 795.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12600 6000 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 835.00 395.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6900 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 455.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7500 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 495.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6300 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 415.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8100 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 535.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8700 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 575.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9300 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 615.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9900 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 655.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10500 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 695.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11100 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 735.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11700 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 775.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12300 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 815.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12900 5700 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 855.00 375.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7200 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 475.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7800 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 515.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6600 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 435.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8400 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 555.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9000 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 595.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9600 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 635.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10200 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 675.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10800 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 715.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11400 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 755.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12000 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 795.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12600 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 835.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 13200 5400 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 875.00 355.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7500 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 495.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8100 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 535.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6900 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 455.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8700 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 575.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9300 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 615.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9900 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 655.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10500 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 695.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11100 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 735.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 11700 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 775.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12300 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 815.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 12900 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 855.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 13500 5100 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 895.00 335.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Polyline
n 3600 8400 m 10200 8400 l gs col0 s gr 
% Polyline
n 3600 8400 m 6900 5100 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 240.00 340.00]  PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6900 5100 m 13500 5100 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 460.00 340.00]  PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 10200 8400 m 13500 5100 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 680.00 340.00]  PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
15.000 slw
n 3600 8400 m 10200 8400 l 13500 5100 l 6900 5100 l 3600 8400 l  cp gs col0 s gr 
% Polyline
7.500 slw
n 3600 5100 m 6900 5100 l gs col0 s gr 
% Polyline
n 10275 8400 m 13500 8400 l gs col0 s gr 
% Polyline
n 6900 5100 m 8550 3450 l gs col0 s gr 
% Polyline
n 13500 5100 m 15150 3450 l gs col0 s gr 
% Polyline
n 13500 5100 m 15150 5100 l gs col0 s gr 
% Polyline
n 13500 8400 m 15150 8400 l gs col0 s gr 
/Times-Roman ff 720.00 scf sf
3750 9150 m
gs 1 -1 sc (1/11) col0 sh gr
% Polyline
n 2400 8400 m 3600 8400 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 560.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2400 5100 m 4050 5100 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 160.00 340.00] PATmp PATsp ef gr PATusp gs col0 s gr 
$F2psEnd
rs
end

%%EndDocument
 @endspecial 968 1291 a Fk(Figure)32 b(1.)41 b Fn(The)27
b(11-torsion)f(on)h(a)g(complex)g(elliptic)h(curv)n(e)555
1580 y(W)-7 b(e)31 b(b)r(egin)f(as)f(b)r(efore)h(with)g(the)h
(situation)f(o)n(v)n(er)e(the)i(complex)g(n)n(um)n(b)r(ers.)44
b(Here)29 b(w)n(e)h(can)456 1679 y(consider)21 b(mo)r(dular)i(pairs)f
(as)g(pairs)g(\()p Fl(C)15 b Fp(=)p Fn(\003)p Fp(;)f(C)6
b Fn(\),)30 b(and)23 b(t)n(w)n(o)f(pairs)g(\()p Fl(C)15
b Fp(=)p Fn(\003)2662 1691 y Fo(1)2704 1679 y Fp(;)f(C)2800
1691 y Fo(1)2838 1679 y Fn(\))23 b(and)g(\()p Fl(C)15
b Fp(=)p Fn(\003)3236 1691 y Fo(2)3279 1679 y Fp(;)f(C)3375
1691 y Fo(2)3412 1679 y Fn(\))456 1779 y(are)k(isomorphic)h(if)i(there)
e(exits)h(a)f(complex)h(n)n(um)n(b)r(er)f Fp(\013)i Fn(suc)n(h)e(that)i
Fp(\013)p Fn(\003)2671 1791 y Fo(1)2731 1779 y Fn(=)i(\003)2877
1791 y Fo(2)2933 1779 y Fn(and)d Fp(\013C)3199 1791 y
Fo(1)3260 1779 y Fj(\021)j Fp(C)3407 1791 y Fo(2)456
1878 y Fn(\(mo)r(d)28 b(\003)733 1890 y Fo(2)770 1878
y Fn(\).)555 1978 y(If)k(\()p Fl(C)15 b Fp(=)p Fn(\003)p
Fp(;)f(C)6 b Fn(\))37 b(is)30 b(a)h(mo)r(dular)f(pair,)h(w)n(e)g(can)g
(regard)e Fp(C)e Fn(+)20 b(\003)31 b(as)f(a)h(complex)f(lattice)h(in)g
(its)456 2078 y(o)n(wn)37 b(righ)n(t;)42 b(w)n(e)c(ha)n(v)n(e)f(\003)j
Fj(\022)g Fp(C)31 b Fn(+)25 b(\003,)40 b(and)e(the)h(condition)e(that)i
Fp(C)44 b Fn(has)37 b(order)g(11)g(means)456 2177 y(precisely)32
b(that)h(\()p Fp(C)28 b Fn(+)22 b(\003\))p Fp(=)p Fn(\003)32
b(has)g(order)g(11.)52 b(W)-7 b(e)33 b(can)g(therefore)f(think)h(of)g
(mo)r(dular)f(pairs)456 2277 y(as)27 b(pairs)h(\003)821
2289 y Fo(1)882 2277 y Fj(\022)c Fn(\003)1029 2289 y
Fo(2)1094 2277 y Fn(of)29 b(complex)f(lattices)g(suc)n(h)g(that)g(\003)
2229 2289 y Fo(2)2266 2277 y Fp(=)p Fn(\003)2366 2289
y Fo(1)2431 2277 y Fn(has)g(order)f(11;)h(the)h(asso)r(ciated)456
2377 y(mo)r(dular)35 b(pair)h(is)g(\()p Fl(C)16 b Fp(=)p
Fn(\003)1253 2389 y Fo(1)1295 2377 y Fp(;)e Fn(\003)1390
2389 y Fo(2)1427 2377 y Fp(=)p Fn(\003)1527 2389 y Fo(1)1563
2377 y Fn(\).)64 b(By)36 b(the)h(structure)f(theorem)g(for)g
(\014nitely)h(generated)456 2476 y(ab)r(elian)c(groups)f(w)n(e)i(can)f
(\014nd)h(a)f(basis)g Fj(h)q Fp(!)1853 2488 y Fo(1)1890
2476 y Fp(;)14 b(!)1979 2488 y Fo(2)2015 2476 y Fj(i)35
b Fn(of)e(\003)2240 2488 y Fo(1)2311 2476 y Fn(suc)n(h)g(that)2690
2409 y Ff(\012)2756 2444 y Fo(1)p 2739 2458 67 4 v 2739
2505 a(11)2816 2476 y Fp(!)2868 2488 y Fo(1)2904 2476
y Fp(;)14 b(!)2993 2488 y Fo(2)3030 2409 y Ff(\013)3103
2476 y Fn(is)34 b(a)f(basis)456 2576 y(for)28 b(\003)642
2588 y Fo(2)679 2576 y Fn(;)i(as)e(usual)h(w)n(e)f(can)h(also)f(assume)
g(that)h Fp(!)2020 2588 y Fo(2)2057 2576 y Fp(=!)2151
2588 y Fo(1)2217 2576 y Fn(has)f(p)r(ositiv)n(e)h(imaginary)e(part.)41
b(This)456 2676 y(mo)r(dular)25 b(pair)h(is)g(isomorphic)f(to)h(the)h
(mo)r(dular)e(pair)h(\()p Fl(C)15 b Fp(=)p Fn(\003)2381
2688 y Fg(\034)2428 2676 y Fp(;)2491 2643 y Fo(1)p 2474
2657 V 2474 2704 a(11)2551 2676 y Fl(Z)o Fn(\))20 b(\(corresp)r(onding)
25 b(to)h(the)456 2783 y(inclusion)e(of)g(lattices)h(\003)1232
2795 y Fg(\034)1296 2783 y Fj(\022)1410 2750 y Fo(1)p
1393 2764 V 1393 2811 a(11)1470 2783 y Fl(Z)11 b Fn(+)h(\003)1678
2795 y Fg(\034)1713 2783 y Fn(\))25 b(with)g Fp(\034)33
b Fn(=)22 b Fp(!)2164 2795 y Fo(2)2201 2783 y Fp(=!)2295
2795 y Fo(1)2355 2783 y Fj(2)h(H)q Fn(;)j(the)f(isomorphism)e(is)h(giv)
n(en)456 2892 y(b)n(y)j(the)h(homothet)n(y)f Fp(!)1184
2857 y Fh(\000)p Fo(1)1181 2915 y(1)1296 2892 y Fn(:)c
Fp(C)t(=)p Fn(\003)1505 2904 y Fo(1)1564 2892 y Fj(!)h
Fl(C)14 b Fp(=)p Fn(\003)1824 2904 y Fg(\034)1871 2892
y Fn(.)555 2992 y(Com)n(bining)20 b(all)g(of)g(this,)i(w)n(e)e(can)g
(asso)r(ciate)f(to)h(ev)n(ery)f(mo)r(dular)h(pair)g(\()p
Fl(C)15 b Fp(=)p Fn(\003)p Fp(;)f(C)6 b Fn(\))26 b(a)20
b(complex)456 3092 y(n)n(um)n(b)r(er)i Fp(\034)33 b Fj(2)24
b(H)g Fn(suc)n(h)e(that)i(\()p Fl(C)15 b Fp(=)p Fn(\003)p
Fp(;)f(C)6 b Fn(\))29 b(is)23 b(isomorphic)f(to)h(the)g(\()p
Fl(C)16 b Fp(=)p Fn(\003)2619 3104 y Fg(\034)2665 3092
y Fp(;)2729 3059 y Fo(1)p 2712 3073 V 2712 3120 a(11)2788
3092 y Fl(Z)p Fn(\).)29 b(The)24 b(di\013erence)456 3191
y(b)r(et)n(w)n(een)h(this)g(and)g(the)h(situation)f(of)g(the)g
(previous)f(section)h(is)g(that)g Fp(\034)2706 3203 y
Fo(1)2744 3191 y Fp(;)14 b(\034)2817 3203 y Fo(2)2877
3191 y Fj(2)24 b(H)i Fn(giv)n(e)e(rise)h(to)456 3291
y(isomorphic)31 b(mo)r(dular)g(pairs)h(if)h(and)f(only)g(if)g(\()p
Fl(C)16 b Fp(=)p Fn(\003)2125 3303 y Fg(\034)2156 3311
y Fd(1)2197 3291 y Fp(;)2260 3258 y Fo(1)p 2244 3272
V 2244 3320 a(11)2320 3291 y Fl(Z)o Fn(\))2438 3269 y
Fj(\030)2438 3295 y Fn(=)2534 3291 y(\()p Fl(C)f Fp(=)p
Fn(\003)2720 3303 y Fg(\034)2751 3311 y Fd(2)2792 3291
y Fp(;)2856 3258 y Fo(1)p 2839 3272 V 2839 3320 a(11)2915
3291 y Fl(Z)p Fn(\))26 b(as)32 b(mo)r(dular)456 3391
y(pairs.)555 3490 y(T)-7 b(o)29 b(sort)f(out)i(this)f(condition,)h(w)n
(e)e(pro)r(ceed)h(as)g(in)g(the)h(previous)e(section)h(and)g(\014x)g
(one)g Fp(\034)9 b Fn(.)456 3635 y(The)29 b(p)r(ossible)f(bases)h(for)f
(\003)1347 3647 y Fg(\034)1417 3635 y Fn(are)g(those)h(of)g(the)g(form)
g Fj(h)p Fp(c\034)f Fn(+)18 b Fp(d;)c(a\034)29 b Fn(+)18
b Fp(b)p Fj(i)29 b Fn(with)2988 3518 y Ff(\022)3091 3584
y Fp(a)87 b(b)3095 3684 y(c)g(d)3302 3518 y Ff(\023)3389
3635 y Fj(2)456 3795 y Fn(SL)554 3807 y Fo(2)591 3795
y Fn(\()p Fl(Z)o Fn(\).)32 b(These)27 b(in)h(turn)g(are)f(asso)r
(ciated)f(to)h(lattices)h(\003)2273 3807 y Fg(\034)2311
3791 y Fe(0)2364 3795 y Fn(with)g Fp(\034)2598 3765 y
Fh(0)2645 3795 y Fn(=)2743 3763 y Fg(a\034)7 b Fo(+)p
Fg(b)p 2743 3777 154 4 v 2743 3824 a(c\034)g Fo(+)p Fg(d)2907
3795 y Fn(.)37 b(Ho)n(w)n(ev)n(er,)25 b(not)456 3902
y(all)f(suc)n(h)g Fp(\034)797 3871 y Fh(0)845 3902 y
Fn(corresp)r(ond)f(to)h Fp(\034)34 b Fn(when)24 b(the)h(extra)f
(structure)f(of)i(the)f(cyclic)g(subgroup)g(of)g(order)456
4001 y(11)i(is)i(tak)n(en)f(in)n(to)g(accoun)n(t.)555
4130 y(W)-7 b(e)34 b(m)n(ust)f(determine)g(for)g(whic)n(h)1684
4013 y Ff(\022)1787 4079 y Fp(a)87 b(b)1791 4179 y(c)g(d)1998
4013 y Ff(\023)2093 4130 y Fn(the)33 b(mo)r(dular)g(pair)g(\()p
Fl(C)15 b Fp(=)p Fn(\003)2940 4142 y Fg(\034)2986 4130
y Fp(;)3050 4097 y Fo(1)p 3033 4111 67 4 v 3033 4158
a(11)3109 4130 y Fl(Z)p Fn(\))27 b(is)33 b(iso-)456 4287
y(morphic)27 b(to)h(the)g(mo)r(dular)f(pair)g(\()p Fl(C)16
b Fp(=)p Fn(\003)1712 4299 y Fg(\034)1750 4283 y Fe(0)1781
4287 y Fp(;)1844 4254 y Fo(1)p 1828 4268 V 1828 4316
a(11)1904 4287 y Fl(Z)o Fn(\).)32 b(The)c(homothet)n(y)f(of)h(\003)2791
4299 y Fg(\034)2860 4287 y Fn(and)g(\003)3080 4299 y
Fg(\034)3118 4283 y Fe(0)3172 4287 y Fn(is)f(giv)n(en)456
4394 y(b)n(y)g(m)n(ultiplication)h(b)n(y)f Fp(c\034)h
Fn(+)18 b Fp(d)p Fn(;)28 b(this)g(homothet)n(y)f(tak)n(es)2312
4362 y Fo(1)p 2296 4376 V 2296 4423 a(11)2372 4394 y
Fl(Z)21 b Fn(to)2583 4362 y Fo(1)p 2566 4376 V 2566 4423
a(11)2642 4394 y Fl(Z)g Fn(if)28 b(and)g(only)f(if)1363
4610 y(\()p Fp(c\034)h Fn(+)18 b Fp(d)p Fn(\))1684 4553
y(1)p 1663 4591 84 4 v 1663 4667 a(11)1756 4610 y Fl(Z)f
Fj(\021)1953 4553 y Fn(1)p 1932 4591 V 1932 4667 a(11)2025
4610 y Fl(Z)77 b Fn(\(mo)r(d)28 b(\003)2441 4622 y Fg(\034)2482
4610 y Fn(\))p Fp(:)456 4801 y Fn(Since)39 b Fp(d)g Fn(is)g(an)g(in)n
(teger)f(and)h(1)g(and)g Fp(\034)49 b Fn(are)38 b(linearly)h(indep)r
(enden)n(t)h(this)f(is)g(the)h(same)e(as)456 4901 y(requiring)32
b(that)1011 4868 y Fg(c\034)p 1011 4882 68 4 v 1011 4930
a Fo(11)1122 4901 y Fn(is)i(a)f(m)n(ultiple)h(of)g Fp(\034)9
b Fn(.)56 b(Of)34 b(course,)g(this)g(is)g(the)g(case)f(if)h(and)g(only)
f(if)h(11)456 5058 y(divides)f Fp(c)p Fn(.)55 b(W)-7
b(e)34 b(conclude)g(that)f(a)h(matrix)1889 4941 y Ff(\022)1991
5008 y Fp(a)87 b(b)1995 5107 y(c)g(d)2203 4941 y Ff(\023)2297
5058 y Fj(2)34 b Fn(SL)2484 5070 y Fo(2)2521 5058 y Fn(\()p
Fl(Z)p Fn(\))28 b(tak)n(es)k(\()p Fl(C)16 b Fp(=)p Fn(\003)3080
5070 y Fg(\034)3126 5058 y Fp(;)3190 5026 y Fo(1)p 3173
5040 67 4 v 3173 5087 a(11)3249 5058 y Fl(Z)p Fn(\))28
b(to)456 5216 y(\()p Fl(C)15 b Fp(=)p Fn(\003)642 5228
y Fg(\034)680 5211 y Fe(0)711 5216 y Fp(;)774 5183 y
Fo(1)p 758 5197 V 758 5244 a(11)834 5216 y Fl(Z)o Fn(\))22
b(if)28 b(and)g(only)f(if)h(11)f(divides)g Fp(c)p Fn(.)p
eop
%%Page: 6 6
6 5 bop 456 251 a Fo(6)1223 b(TOM)22 b(WESTON)555 450
y Fn(De\014ne)28 b(\000)864 462 y Fo(0)902 450 y Fn(\(11\))22
b Fj(\022)h Fn(SL)1258 462 y Fo(2)1295 450 y Fn(\()p
Fl(Z)p Fn(\))f(to)27 b(b)r(e)h(the)g(subgroup)f(of)g(SL)2353
462 y Fo(2)2390 450 y Fn(\()p Fl(Z)p Fn(\))22 b(of)28
b(suc)n(h)f(matrices:)1020 647 y(\000)1072 659 y Fo(0)1109
647 y Fn(\(11\))c(=)f Fj(f)1409 530 y Ff(\022)1511 596
y Fp(a)87 b(b)1515 696 y(c)g(d)1723 530 y Ff(\023)1807
647 y Fj(2)24 b Fn(SL)1984 659 y Fo(2)2021 647 y Fn(\()p
Fl(Z)p Fn(\))17 b Fj(j)23 b Fp(c)g Fj(\021)g Fn(0)82
b(\(mo)r(d)28 b(11\))p Fj(g)p Fp(:)456 839 y Fn(Our)c(argumen)n(ts)f
(to)i(this)g(p)r(oin)n(t)g(ha)n(v)n(e)f(sho)n(wn)g(that)i(w)n(e)e(can)h
(iden)n(tify)g(mo)r(dular)f(pairs)g(o)n(v)n(er)f Fl(C)456
938 y Fn(with)31 b(p)r(oin)n(ts)f(of)h Fj(H)h Fn(mo)r(dulo)e(the)h
(action)g(of)f(\000)1948 950 y Fo(0)1985 938 y Fn(\(11\);)i(that)f(is,)
h(w)n(e)e(can)g(iden)n(tify)i(them)f(with)456 1038 y(the)d(orbit)f
(space)g(\000)1076 1050 y Fo(0)1113 1038 y Fn(\(11\))p
Fj(nH)q Fn(:)1426 1184 y(\000)1478 1196 y Fo(0)1516 1184
y Fn(\(11\))p Fj(nH)c( )-14 b(!)23 b Fn(Ell)2077 1196
y Fo(0)2114 1184 y Fn(\()p Fl(C)15 b Fn(\))1730 1372
y Fp(\034)33 b Fj(\000)-15 b(!)1956 1255 y Ff(\022)2017
1372 y Fl(C)15 b Fp(=)p Fn(\003)2171 1384 y Fg(\034)2217
1372 y Fp(;)2285 1316 y Fn(1)p 2264 1353 84 4 v 2264
1429 a(11)2357 1372 y Fl(Z)2418 1255 y Ff(\023)555 1693
y Fn(W)-7 b(e)32 b(w)n(ould)f(lik)n(e)f(a)h(description)g(of)g(\000)
1755 1705 y Fo(0)1792 1693 y Fn(\(11\))p Fj(nH)g Fn(as)g(a)g(Riemann)g
(surface.)47 b(T)-7 b(o)30 b(do)h(this)h(w)n(e)456 1793
y(will)27 b(need)h(a)f(fundamen)n(tal)h(domain.)36 b(It)28
b(can)g(b)r(e)g(sho)n(wn)e(that)i(the)g(matrices)845
1969 y Fp(T)34 b Fn(=)1015 1851 y Ff(\022)1118 1918 y
Fn(1)83 b(1)1118 2018 y(0)g(1)1326 1851 y Ff(\023)1567
1969 y Fp(U)31 b Fn(=)1743 1851 y Ff(\022)1866 1918 y
Fn(7)104 b Fj(\000)p Fn(2)1846 2018 y(11)82 b Fj(\000)p
Fn(3)2159 1851 y Ff(\023)2400 1969 y Fp(V)42 b Fn(=)2578
1851 y Ff(\022)2701 1918 y Fn(8)104 b Fj(\000)p Fn(3)2681
2018 y(11)82 b Fj(\000)p Fn(4)2994 1851 y Ff(\023)456
2165 y Fn(generate)25 b(\000)839 2177 y Fo(0)876 2165
y Fn(\(11\).)36 b(Using)27 b(this)g(and)f(a)h(little)g(care)f(one)g
(can)g(sho)n(w)g(that)h(the)g(region)e(b)r(elo)n(w)i(is)456
2265 y(a)g(fundamen)n(tal)g(domain)h(for)f(the)h(\000)1622
2277 y Fo(0)1659 2265 y Fn(\(11\)-action)e(on)h Fj(H)q
Fn(.)1000 3660 y @beginspecial 0 @llx 0 @lly 228 @urx
164 @ury 2280 @rwi @setspecial
%%BeginDocument: ell3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ell3.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Apr 20 11:18:22 1999
%%For: weston@noether (Tom Weston)
%%Orientation: Portrait
%%BoundingBox: 0 0 228 164
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 0.5000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-30.0 280.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 10311 m -1000 -1000 l 9572 -1000 l 9572 10311 l cp clip
 0.03000 0.03000 sc
% Arc
7.500 slw
gs n 2400.0 8400.0 1200.0 180.0 0.0 arc
gs col0 s gr
 gr

% Arc
gs n 4200.0 8400.0 600.0 180.0 0.0 arc
gs col0 s gr
 gr

% Arc
gs n 5400.0 8400.0 600.0 180.0 0.0 arc
gs col0 s gr
 gr

% Arc
gs n 7200.0 8400.0 1200.0 180.0 0.0 arc
gs col0 s gr
 gr

% Arc
15.000 slw
gs n 2400.0 8400.0 1200.0 180.0 0.0 arc
gs col0 s gr
 gr

% Arc
gs n 4200.0 8400.0 600.0 180.0 0.0 arc
gs col0 s gr
 gr

% Arc
gs n 5400.0 8400.0 600.0 180.0 0.0 arc
gs col0 s gr
 gr

% Arc
gs n 7200.0 8400.0 1200.0 180.0 0.0 arc
gs col0 s gr
 gr

% Arc
7.500 slw
gs  clippath
5308 8333 m 5400 8250 l 5358 8366 l 5433 8254 l 5384 8221 l cp
1533 8219 m 1500 8100 l 1585 8189 l 1519 8072 l 1467 8102 l cp
clip
n 3493.3 7049.2 2253.3 152.2 32.2 arcn
gs col0 s gr
 gr

% arrowhead
n 5308 8333 m 5400 8250 l 5358 8366 l  col0 s
% arrowhead
n 1533 8219 m 1500 8100 l 1585 8189 l  col0 s
% Arc
gs  clippath
4242 8366 m 4200 8250 l 4292 8333 l 4216 8221 l 4167 8254 l cp
8015 8189 m 8100 8100 l 8067 8219 l 8133 8102 l 8081 8072 l cp
clip
n 6106.7 7049.2 2253.3 27.8 147.8 arc
gs col0 s gr
 gr

% arrowhead
n 4242 8366 m 4200 8250 l 4292 8333 l  col0 s
% arrowhead
n 8015 8189 m 8100 8100 l 8067 8219 l  col0 s
% Arc
gs  clippath
8142 4591 m 8250 4650 l 8126 4649 l 8257 4683 l 8272 4625 l cp
1474 4649 m 1350 4650 l 1458 4591 l 1328 4625 l 1343 4683 l cp
clip
n 4800.0 17650.0 13450.0 -104.9 -75.1 arc
gs col0 s gr
 gr

% arrowhead
n 8142 4591 m 8250 4650 l 8126 4649 l  col0 s
% arrowhead
n 1474 4649 m 1350 4650 l 1458 4591 l  col0 s
% Polyline
n 1200 8400 m 8400 8400 l gs col0 s gr 
% Polyline
15.000 slw
n 1200 8400 m 1200 4800 l gs col0 s gr 
% Polyline
n 8400 8400 m 8400 4800 l gs col0 s gr 
% Polyline
0.000 slw
n 1275 4800 m 1275 7800 l 1650 7350 l 2400 7125 l 3150 7350 l 3450 7650 l
 3600 8100 l 3900 7800 l 4200 7725 l 4500 7800 l 4800 8100 l
 5100 7800 l 5400 7725 l 5700 7800 l 6000 8100 l 6150 7650 l
 6450 7350 l 7200 7125 l 7950 7350 l 8325 7800 l 8325 4800 l
 1275 4800 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 85.00 320.00] PATmp PATsp ef gr PATusp 
% Polyline
15.000 slw
n 1050 6150 m 1200 6300 l 1350 6150 l gs col0 s gr 
% Polyline
n 1050 6000 m 1200 6150 l 1350 6000 l gs col0 s gr 
% Polyline
n 1050 5850 m 1200 6000 l 1350 5850 l gs col0 s gr 
% Polyline
n 8550 6150 m 8400 6300 l 8250 6150 l gs col0 s gr 
% Polyline
n 8550 6000 m 8400 6150 l 8250 6000 l gs col0 s gr 
% Polyline
n 8550 5850 m 8400 6000 l 8250 5850 l gs col0 s gr 
% Polyline
n 2250 7350 m 2400 7200 l 2250 7050 l gs col0 s gr 
% Polyline
n 5550 7650 m 5400 7800 l 5550 7950 l gs col0 s gr 
% Polyline
n 3975 7950 m 4125 7800 l 3975 7650 l gs col0 s gr 
% Polyline
n 4125 7950 m 4275 7800 l 4125 7650 l gs col0 s gr 
% Polyline
n 7275 7050 m 7125 7200 l 7275 7350 l gs col0 s gr 
% Polyline
n 7425 7050 m 7275 7200 l 7425 7350 l gs col0 s gr 
/Times-Italic ff 360.00 scf sf
4800 4125 m
gs 1 -1 sc (T) col0 sh gr
/Times-Italic ff 360.00 scf sf
3450 9225 m
gs 1 -1 sc (U) col0 sh gr
/Times-Italic ff 360.00 scf sf
6000 9225 m
gs 1 -1 sc (V) col0 sh gr
/Times-Italic ff 270.00 scf sf
3450 8700 m
gs 1 -1 sc (1/3) col0 sh gr
/Times-Italic ff 270.00 scf sf
4650 8700 m
gs 1 -1 sc (1/2) col0 sh gr
/Times-Italic ff 270.00 scf sf
5850 8700 m
gs 1 -1 sc (2/3) col0 sh gr
/Times-Italic ff 270.00 scf sf
1200 8700 m
gs 1 -1 sc (0) col0 sh gr
/Times-Italic ff 270.00 scf sf
8250 8700 m
gs 1 -1 sc (1) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 555 3760 a(When)k(one)f(iden)n(ti\014es)g(the)h(lines)f
Fp(\034)38 b Fn(=)27 b(0)j(and)g Fp(\034)37 b Fn(=)27
b(1,)k(the)g(region)e(can)g(b)r(e)i(dra)n(wn)f(in)g(the)456
3860 y(follo)n(wing)c(simpler)h(w)n(a)n(y:)1354 4717
y @beginspecial 0 @llx 0 @lly 143 @urx 100 @ury 1430
@rwi @setspecial
%%BeginDocument: ell4.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ell4.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Apr 20 11:37:26 1999
%%For: weston@noether (Tom Weston)
%%Orientation: Portrait
%%BoundingBox: 0 0 143 100
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 0.6000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-80.0 223.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7172 m -1000 -1000 l 7172 -1000 l 7172 7172 l cp clip
 0.03600 0.03600 sc
7.500 slw
% Ellipse
n 2400 3600 75 75 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6000 3600 75 75 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2400 6000 75 75 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6000 6000 75 75 0 360 DrawEllipse gs col0 s gr

15.000 slw
% Ellipse
n 2400 3600 75 75 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2400 6000 75 75 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6000 6000 75 75 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 6000 3600 75 75 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4200 4800 75 75 0 360 DrawEllipse gs col0 s gr

% Polyline
n 2475 3600 m 5925 3600 l gs col0 s gr 
% Polyline
n 6000 3675 m 6000 5925 l gs col0 s gr 
% Polyline
n 2400 5925 m 2400 3675 l gs col0 s gr 
% Polyline
n 2475 6000 m 5925 6000 l gs col0 s gr 
% Polyline
n 4125 4875 m 2475 5925 l gs col0 s gr 
% Polyline
0.000 slw
n 2475 3750 m 2475 5850 l 4050 4800 l 4050 4650 l 4350 4650 l 4350 4950 l
 4125 4950 l 2625 5925 l 5850 5925 l 5925 5850 l 5925 3750 l
 5850 3675 l 2550 3675 l 2475 3750 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 165.00 245.00] PATmp PATsp ef gr PATusp 
% Polyline
15.000 slw
n 2250 4950 m 2400 4800 l 2550 4950 l gs col0 s gr 
% Polyline
n 2250 4800 m 2400 4650 l 2550 4800 l gs col0 s gr 
% Polyline
n 5850 4950 m 6000 4800 l 6150 4950 l gs col0 s gr 
% Polyline
n 5850 4800 m 6000 4650 l 6150 4800 l gs col0 s gr 
% Polyline
n 4200 3750 m 4350 3600 l 4200 3450 l gs col0 s gr 
% Polyline
n 4200 6150 m 4350 6000 l 4200 5850 l gs col0 s gr 
% Polyline
n 3357 5183 m 3285 5385 l 3487 5457 l gs col0 s gr 
% Polyline
n 3432 5153 m 3360 5355 l 3562 5427 l gs col0 s gr 
% Polyline
n 3522 5108 m 3450 5310 l 3652 5382 l gs col0 s gr 
$F2psEnd
rs
end

%%EndDocument
 @endspecial 555 4817 a(W)-7 b(e)23 b(see)f(no)n(w)f(that)i
Fj(H)q(n)p Fn(\000)1329 4829 y Fo(0)1365 4817 y Fn(\(11\))f(is)h
(almost)e(a)h(torus,)h(except)f(that)g(it)h(is)f(missing)g(t)n(w)n(o)f
(p)r(oin)n(ts.)456 4917 y(W)-7 b(e)26 b(call)g(the)h(missing)f(in)n
(terior)f(p)r(oin)n(t)h(the)h Fi(cusp)i(at)f(in\014nity)f
Fn(and)f(the)h(missing)e(corner)g(p)r(oin)n(t)456 5016
y(the)37 b Fi(cusp)h(at)g(zer)l(o)p Fn(,)i(and)c(w)n(e)h(let)g
Fj(C)1596 5028 y Fo(0)1670 5016 y Fn(denote)f(the)h(set)g(of)g(these)g
(t)n(w)n(o)f(p)r(oin)n(ts.)64 b(Once)36 b(these)456 5116
y(p)r(oin)n(ts)27 b(are)g(added,)h(\000)1164 5128 y Fo(0)1201
5116 y Fn(\(11\))p Fj(nH)h Fn(is)e(a)h(torus.)37 b(In)28
b(fact,)g(as)g(with)g(SL)2570 5128 y Fo(2)2607 5116 y
Fn(\()p Fl(Z)p Fn(\))p Fj(nH)q Fn(,)22 b(it)28 b(is)g(p)r(ossible)g(to)
456 5216 y(giv)n(e)e(\000)678 5228 y Fo(0)715 5216 y
Fn(\(11\))p Fj(nH)h Fn(the)h(structure)e(of)h(a)g(Riemann)g(surface)f
(whic)n(h)h(w)n(e)g(denote)g Fp(X)2988 5228 y Fo(0)3025
5216 y Fn(\(11\);)g(see)g([7)o(,)p eop
%%Page: 7 7
7 6 bop 1220 251 a Fo(THE)29 b(MODULAR)g(CUR)-7 b(VES)29
b Fg(X)2118 259 y Fd(0)2151 251 y Fo(\(11\))g(AND)g Fg(X)2529
259 y Fd(1)2562 251 y Fo(\(11\))731 b(7)456 450 y Fn(Chapter)27
b(11,)f(Section)i(2].)37 b(F)-7 b(rom)27 b(our)g(construction,)f(w)n(e)
i(ha)n(v)n(e)e(a)h(bijection)1504 595 y Fp(X)1573 607
y Fo(0)1610 595 y Fn(\(11\))c Fj( )-14 b(!)23 b Fn(Ell)2059
607 y Fo(0)2096 595 y Fn(\()p Fl(C)15 b Fn(\))25 b Fj([)19
b Fl(C)c Fp(:)555 740 y Fn(It)40 b(is)f(imp)r(ortan)n(t)f(to)h(note)g
(that)h(w)n(e)e(add)h(the)h(cusps)f(only)f(so)h(that)g
Fp(X)2918 752 y Fo(0)2955 740 y Fn(\(11\))g(b)r(ecomes)456
840 y(compact;)30 b(they)h(do)f(not)g(corresp)r(ond)e(to)i(honest)g
(elliptic)g(curv)n(es.)43 b(In)31 b(particular,)e(after)h(w)n(e)456
939 y(ha)n(v)n(e)25 b(de\014ned)i Fp(X)1000 951 y Fo(0)1037
939 y Fn(\(11\))f(as)g(an)h(algebraic)d(curv)n(e)i(o)n(v)n(er)f
Fl(Q)5 b Fn(,)33 b(the)27 b(cusps)g(will)f(yield)h(t)n(w)n(o)f
(rational)456 1039 y(p)r(oin)n(ts)h(whic)n(h)h(don't)f(actually)g
(corresp)r(ond)f(to)i(elliptic)g(curv)n(es.)1166 1239
y(3.)41 b Fp(X)1341 1251 y Fo(0)1378 1239 y Fn(\(11\))31
b Fk(as)h(an)f(elliptic)g(cur)-7 b(ve)32 b(o)n(ver)f
Fl(Q)555 1388 y Fn(The)h(\014rst)f(k)n(ey)g(to)g(using)g
Fp(X)1454 1400 y Fo(0)1491 1388 y Fn(\(11\))h(to)f(analyze)g(elliptic)h
(curv)n(es)e(o)n(v)n(er)g Fl(Q)43 b Fn(is)31 b(to)h(sho)n(w)e(that)456
1488 y(it)h(can)f(actually)g(b)r(e)h(realized)e(as)h(a)g(curv)n(e)g
(de\014ned)h(o)n(v)n(er)e Fl(Q)5 b Fn(.)52 b(As)31 b(it)g(is,)g(w)n(e)f
(ha)n(v)n(e)g Fp(X)3155 1500 y Fo(0)3192 1488 y Fn(\(11\))g(as)456
1587 y(a)c(Riemann)i(surface.)36 b(As)27 b(w)n(e)g(ha)n(v)n(e)f(said)h
(b)r(efore,)g(ev)n(ery)f(Riemann)h(surface)f(corresp)r(onds)g(to)456
1687 y(a)j(complex)h(algebraic)e(curv)n(e,)i(so)f(w)n(e)h(can)g(also)f
(regard)f Fp(X)2339 1699 y Fo(0)2376 1687 y Fn(\(11\))i(in)g(this)h(w)n
(a)n(y;)f(when)g(w)n(e)g(do)456 1786 y(so)c(w)n(e)h(will)h(write)f(it)h
(as)e Fp(X)1301 1798 y Fo(0)1338 1786 y Fn(\(11\))1486
1798 y Fc(C)1532 1786 y Fn(.)37 b(Let)27 b Fp(L)g Fn(b)r(e)h(its)f
(function)h(\014eld;)g(it)g(is)f(a)g(\014nitely)h(generated)456
1886 y(extension)f(of)g Fl(C)49 b Fn(of)27 b(transcendence)g(degree)g
(1.)555 1986 y(T)-7 b(o)33 b(sho)n(w)f(that)i Fp(X)1149
1998 y Fo(0)1186 1986 y Fn(\(11\))1334 1998 y Fc(C)1413
1986 y Fn(can)e(actually)h(b)r(e)h(de\014ned)f(o)n(v)n(er)e
Fl(Q)6 b Fn(,)41 b(w)n(e)32 b(m)n(ust)i(\014nd)f(a)g(\014nitely)456
2085 y(generated)h(\014eld)i(extension)f Fp(K)41 b Fn(of)35
b Fl(Q)47 b Fn(of)36 b(transcendence)e(degree)h(1)g(suc)n(h)g(that)h
Fl(C)14 b Fp(K)48 b Fn(=)36 b Fp(L)p Fn(.)456 2185 y(Indeed,)27
b(w)n(e)g(can)g(then)h(de\014ne)g Fp(X)1520 2197 y Fo(0)1557
2185 y Fn(\(11\))1705 2197 y Fc(Q)1781 2185 y Fn(to)g(b)r(e)f(the)h
(algebraic)e(curv)n(e)g(corresp)r(onding)g(to)h Fp(K)6
b Fn(;)456 2285 y(the)30 b(fact)h(that)g Fl(C)15 b Fp(K)39
b Fn(=)28 b Fp(L)i Fn(will)g(insure)g(that)h Fp(X)1954
2297 y Fo(0)1991 2285 y Fn(\(11\))2139 2297 y Fc(Q)2188
2285 y Fn(\()p Fl(C)15 b Fn(\))37 b(reco)n(v)n(ers)28
b(our)i(previous)f(complex)456 2384 y(algebraic)c(curv)n(e)i
Fp(X)1097 2396 y Fo(0)1134 2384 y Fn(\(11\))1282 2396
y Fc(C)1328 2384 y Fn(.)555 2484 y(There)19 b(are)e(sev)n(eral)g
(approac)n(hes)g(to)i(de\014ning)g(the)g(\014eld)g Fp(K)6
b Fn(.)34 b(The)19 b(\014rst)f(approac)n(h)f(b)r(egins)i(b)n(y)456
2583 y(explicitly)27 b(determining)f Fp(L)h Fn(as)f(the)h(\014eld)h(of)
e(meromorphic)g(functions)h(on)g Fp(X)2919 2595 y Fo(0)2956
2583 y Fn(\(11\))f(regarded)456 2683 y(as)37 b(a)h(Riemann)g(surface.)
68 b(T)-7 b(o)38 b(do)g(this,)j(w)n(e)d(m)n(ust)g(exhibit)h(some)e
(rational)g(functions)i(on)456 2783 y Fp(X)525 2795 y
Fo(0)562 2783 y Fn(\(11\).)74 b(The)40 b(\014rst)g(is)g(the)h(function)
g Fp(j)k Fn(w)n(e)40 b(had)g(on)f Fp(X)7 b Fn(\(1\);)46
b(it)41 b(still)g(mak)n(es)e(sense)g(as)h(a)456 2882
y(function)28 b(on)f Fp(X)965 2894 y Fo(0)1002 2882 y
Fn(\(11\))g(since)h(\000)1433 2894 y Fo(0)1470 2882 y
Fn(\(11\))23 b Fj(\022)f Fn(SL)1826 2894 y Fo(2)1863
2882 y Fn(\()p Fl(Z)p Fn(\).)555 2982 y(Let)32 b Fp(j)742
2994 y Fo(11)812 2982 y Fn(\()p Fp(\034)9 b Fn(\))30
b(=)f Fp(j)5 b Fn(\(11)p Fp(\034)k Fn(\).)48 b(W)-7 b(e)31
b(claim)g(that)h Fp(j)1937 2994 y Fo(11)2039 2982 y Fn(is)f(also)f(a)h
(function)g(on)g Fp(X)2885 2994 y Fo(0)2922 2982 y Fn(\(11\).)48
b(T)-7 b(o)30 b(sho)n(w)456 3082 y(this,)e(w)n(e)f(m)n(ust)g(c)n(hec)n
(k)g(that)1544 3237 y Fp(j)1578 3249 y Fo(11)1662 3120
y Ff(\022)1733 3181 y Fp(a\034)h Fn(+)18 b Fp(b)p 1733
3218 227 4 v 1733 3294 a(c\034)28 b Fn(+)18 b Fp(d)1970
3120 y Ff(\023)2054 3237 y Fn(=)23 b Fp(j)2176 3249 y
Fo(11)2246 3237 y Fn(\()p Fp(\034)9 b Fn(\))456 3473
y(for)21 b(all)686 3355 y Ff(\022)789 3422 y Fp(a)87
b(b)793 3522 y(c)g(d)1000 3355 y Ff(\023)1085 3473 y
Fj(2)23 b Fn(\000)1215 3485 y Fo(0)1252 3473 y Fn(\(11\),)g(for)e(then)
h Fp(j)1784 3485 y Fo(11)1877 3473 y Fn(descends)f(from)g(a)h(function)
g(on)f Fj(H)i Fn(to)f(a)f(function)456 3622 y(on)27 b(\000)623
3634 y Fo(0)660 3622 y Fn(\(11\))p Fj(nH)c Fn(=)g Fp(X)1100
3634 y Fo(0)1137 3622 y Fn(\(11\).)36 b(W)-7 b(e)28 b(compute)1325
3817 y Fp(j)1359 3829 y Fo(11)1443 3700 y Ff(\022)1514
3761 y Fp(a\034)g Fn(+)18 b Fp(b)p 1514 3798 V 1514 3874
a(c\034)29 b Fn(+)18 b Fp(d)1751 3700 y Ff(\023)1835
3817 y Fn(=)23 b Fp(j)1976 3700 y Ff(\022)2037 3817 y
Fn(11)2131 3761 y Fp(a\034)k Fn(+)18 b Fp(b)p 2131 3798
V 2131 3874 a(c\034)27 b Fn(+)18 b Fp(d)2366 3700 y Ff(\023)1835
4049 y Fn(=)23 b Fp(j)1976 3932 y Ff(\022)2047 3993 y
Fp(a)p Fn(\(11)p Fp(\034)9 b Fn(\))18 b(+)g(11)p Fp(b)p
2047 4030 458 4 v 2092 4074 a Fg(c)p 2073 4088 67 4 v
2073 4135 a Fo(11)2149 4106 y Fn(\(11)p Fp(\034)9 b Fn(\))19
b(+)f Fp(d)2514 3932 y Ff(\023)1835 4230 y Fn(=)23 b
Fp(j)5 b Fn(\(11)p Fp(\034)k Fn(\))1835 4360 y(=)23 b
Fp(j)1957 4372 y Fo(11)2027 4360 y Fn(\()p Fp(\034)9
b Fn(\))456 4568 y(since)659 4451 y Ff(\022)820 4517
y Fp(a)141 b Fn(11)p Fp(b)762 4617 y(c=)p Fn(11)119 b
Fp(d)1165 4451 y Ff(\023)1249 4568 y Fj(2)24 b Fn(SL)1426
4580 y Fo(2)1463 4568 y Fn(\()p Fl(Z)p Fn(\))e(and)27
b Fp(j)33 b Fn(is)27 b(SL)2020 4580 y Fo(2)2058 4568
y Fn(\()p Fl(Z)o Fn(\)-in)n(v)-5 b(ar)o(ian)n(t.)555
4717 y(W)e(e)33 b(ha)n(v)n(e)f(no)n(w)g(exhibited)h(t)n(w)n(o)f
(meromorphic)g(functions)h(on)f Fp(X)2668 4729 y Fo(0)2705
4717 y Fn(\(11\).)53 b(One)32 b(can)g(sho)n(w)456 4817
y(that)26 b Fp(L)c Fn(=)h Fl(C)15 b Fn(\()p Fp(j;)g(j)993
4829 y Fo(11)1069 4817 y Fn(\);)27 b(that)f Fp(j)1363
4829 y Fo(11)1459 4817 y Fn(is)g(a)f(ro)r(ot)h(of)f(a)h(p)r(olynomial)f
(\010\()p Fp(x)p Fn(\))i(in)f Fl(Z)o Fn([)p Fp(j;)14
b(x)p Fn(];)22 b(and)j(that)h(\010\()p Fp(x)p Fn(\))456
4917 y(is)h(irreducible)g(as)g(a)g(p)r(olynomial)g(o)n(v)n(er)f
Fl(C)15 b Fn(\()p Fp(j)5 b Fn(\).)43 b(See)28 b([7,)f(Chapter)g(11,)g
(Section)h(6].)555 5016 y(One)i(can)g(use)g(the)g(ab)r(o)n(v)n(e)f
(assertions)f(to)i(realize)g Fp(X)2234 5028 y Fo(0)2271
5016 y Fn(\(11\))2419 5028 y Fc(C)2494 5016 y Fn(as)g(an)g(algebraic)e
(curv)n(e)h(o)n(v)n(er)456 5116 y Fl(Q)5 b Fn(.)43 b(Indeed,)27
b(w)n(e)f(simply)h(de\014ne)g Fp(K)h Fn(=)23 b Fl(Q)6
b Fn(\()p Fp(j)f Fn(\)[)p Fp(j)1903 5128 y Fo(1)q(1)1980
5116 y Fn(])p Fp(=)p Fn(\010\()p Fp(j)2171 5128 y Fo(11)2241
5116 y Fn(\),)27 b(where)g(w)n(e)f(are)g(regarding)e
Fp(j)32 b Fn(as)26 b(an)456 5216 y(abstract)31 b(transcenden)n(tal)h
(elemen)n(t)g(and)h Fp(j)1858 5228 y Fo(11)1961 5216
y Fn(as)f(a)g(formal)g(v)-5 b(ariable;)34 b(let)f Fp(X)2944
5228 y Fo(0)2981 5216 y Fn(\(11\))3129 5228 y Fc(Q)3211
5216 y Fn(b)r(e)g(the)p eop
%%Page: 8 8
8 7 bop 456 251 a Fo(8)1223 b(TOM)22 b(WESTON)456 450
y Fn(asso)r(ciated)k(algebraic)g(curv)n(e)h(o)n(v)n(er)f
Fl(Q)6 b Fn(.)43 b(This)28 b(mak)n(es)f(sense,)g(since)h(\010\()p
Fp(x)p Fn(\))h(has)e(co)r(e\016cien)n(ts)g(in)456 550
y Fl(Z)o Fn([)p Fp(j)5 b Fn(].)37 b(The)30 b(fact)f(that)h(\010\()p
Fp(x)p Fn(\))h(is)e(irreducible)g(o)n(v)n(er)f Fl(C)15
b Fn(\()p Fp(j)6 b Fn(\))35 b(insures)29 b(us)h(that)g
Fl(C)15 b Fp(K)41 b Fn(really)28 b(is)i(just)456 649
y Fp(L)22 b Fn(=)h Fl(C)15 b Fn(\()p Fp(j)5 b Fn(\)[)p
Fp(j)838 661 y Fo(11)914 649 y Fn(])p Fp(=)p Fn(\010\()p
Fp(j)1105 661 y Fo(11)1175 649 y Fn(\).)555 749 y(There)23
b(is)h(a)f(second)g(approac)n(h)f(to)i(de\014ning)f Fp(X)2030
761 y Fo(0)2067 749 y Fn(\(11\))2215 761 y Fc(Q)2264
749 y Fn(.)36 b(This)24 b(approac)n(h)d(do)r(es)j(not)g(use)f(the)456
849 y(Riemann)30 b(surface)f(description)h(of)h Fp(X)1687
861 y Fo(0)1724 849 y Fn(\(11\))f(at)g(all.)45 b(W)-7
b(e)30 b(only)g(sk)n(etc)n(h)g(the)g(main)h(ideas;)g(see)456
948 y([12)o(,)c(Section)h(1])f(for)g(details.)37 b(W)-7
b(e)28 b(b)r(egin)g(with)g(the)g(elliptic)g(curv)n(e)e
Fp(E)1348 1132 y(y)1392 1098 y Fo(2)1452 1132 y Fn(=)d(4)p
Fp(x)1629 1098 y Fo(3)1685 1132 y Fj(\000)1870 1076 y
Fn(27)p Fp(t)p 1778 1113 298 4 v 1778 1189 a(t)18 b Fj(\000)g
Fn(1728)2085 1132 y Fp(x)h Fj(\000)2336 1076 y Fn(27)p
Fp(t)p 2244 1113 V 2244 1189 a(t)g Fj(\000)f Fn(1728)456
1312 y(de\014ned)28 b(o)n(v)n(er)f(the)h(\014eld)h Fl(Q)5
b Fn(\()q Fp(t)p Fn(\).)45 b(This)28 b(curv)n(e)f(has)h(the)h(prop)r
(ert)n(y)e(that)i(its)f Fp(j)5 b Fn(-in)n(v)-5 b(arian)n(t)27
b(is)h(just)456 1412 y Fp(t)p Fn(.)64 b(Let)37 b Fl(Q)6
b Fn(\()p Fp(t;)14 b(E)5 b Fn([11]\))43 b(b)r(e)37 b(the)g(extension)f
(of)h Fl(Q)6 b Fn(\()p Fp(t)p Fn(\))43 b(generated)36
b(b)n(y)h(the)g(co)r(ordinates)e(of)i(the)456 1511 y(p)r(oin)n(ts)d(of)
h Fp(E)40 b Fn(of)35 b(order)e(11.)57 b(Fixing)35 b(a)f(basis)g
Fp(P)r(;)14 b(Q)35 b Fn(of)g Fp(E)5 b Fn([11],)36 b(w)n(e)e(can)h
(regard)e Fp(E)5 b Fn([11])34 b(as)g(a)456 1611 y(t)n(w)n(o)d
(dimensional)h(v)n(ector)g(space)f(o)n(v)n(er)g Fl(Z)o
Fp(=)p Fn(1)o(1)p Fl(Z)-7 b Fn(.)46 b(Gal\()p Fl(Q)5
b Fn(\()q Fp(t;)14 b(E)5 b Fn([11]\))p Fp(=)p Fl(Q)10
b Fn(\))39 b(acts)32 b(on)g Fp(E)5 b Fn([11])32 b(in)h(a)456
1711 y(natural)26 b(w)n(a)n(y)-7 b(,)27 b(and)g(w)n(e)h(therefore)e
(obtain)i(a)f(map)1045 1855 y(Gal\()p Fl(Q)6 b Fn(\()p
Fp(t;)14 b(E)5 b Fn([11]\))p Fp(=)p Fl(Q)11 b Fn(\))29
b Fj(!)23 b Fn(Aut)q(\()p Fp(E)5 b Fn([11]\))2290 1833
y Fj(\030)2290 1860 y Fn(=)2377 1855 y(GL)2494 1867 y
Fo(2)2532 1855 y Fn(\()p Fl(Z)o Fp(=)p Fn(1)o(1)p Fl(Z)-7
b Fn(\))p Fp(;)456 2000 y Fn(\(the)19 b(isomorphism)e(coming)h(from)g
(our)g(\014xed)g(basis)g Fp(P)r(;)c(Q)p Fn(\))19 b(whic)n(h)f(one)g
(easily)g(sees)g(is)g(injectiv)n(e.)456 2100 y(It)28
b(is)f(a)g(m)n(uc)n(h)h(deep)r(er)f(fact)h(that)g(it)g(is)f(actually)g
(an)g(isomorphism.)555 2200 y(Let)e Fp(H)32 b Fn(b)r(e)26
b(the)f(subgroup)f(of)h Fp(GL)1625 2212 y Fo(2)1662 2200
y Fn(\()p Fl(Z)p Fn(\))19 b(whic)n(h)25 b(maps)g(the)g(cyclic)g
(subgroup)f(generated)g(b)n(y)456 2299 y Fp(Q)j Fn(to)g(itself;)i(one)e
(\014nds)h(that)1067 2489 y Fp(H)i Fn(=)1254 2372 y Ff(\032\022)1419
2439 y Fp(a)84 b Fn(0)1423 2538 y Fp(b)j(d)1630 2372
y Ff(\023)1715 2489 y Fj(j)23 b Fp(a;)14 b(d)23 b Fj(2)g
Fn(\()p Fl(Z)p Fp(=)o Fn(11)o Fl(Z)-6 b Fn(\))2292 2455
y Fh(\003)2324 2489 y Fp(;)14 b(b)23 b Fj(2)g Fl(Z)p
Fp(=)o Fn(11)o Fl(Z)2739 2372 y Ff(\033)2809 2489 y Fp(:)456
2684 y Fn(This)d(corresp)r(onds)e(to)i(a)f(subgroup)g(of)h(Gal\()p
Fl(Q)6 b Fn(\()p Fp(t;)14 b(E)5 b Fn([11]\))p Fp(=)p
Fl(Q)11 b Fn(\()p Fp(t)p Fn(\)\))27 b(b)n(y)20 b(our)f(ab)r(o)n(v)n(e)g
(isomorphism,)456 2784 y(and)i(w)n(e)g(let)g Fp(K)27
b Fn(b)r(e)22 b(the)g(\014xed)f(\014eld)h(of)f Fl(Q)6
b Fn(\()p Fp(t;)14 b(E)5 b Fn([11]\))27 b(b)n(y)21 b(this)g(subgroup.)
34 b(One)21 b(de\014nes)g Fp(X)3210 2796 y Fo(0)3247
2784 y Fn(\(11\))3395 2796 y Fc(Q)456 2883 y Fn(to)31
b(b)r(e)i(the)f(algebraic)e(curv)n(e)h(o)n(v)n(er)f Fl(Q)44
b Fn(corresp)r(onding)30 b(to)i Fp(K)6 b Fn(.)49 b(Of)32
b(course,)g(one)g(no)n(w)f(has)h(to)456 2983 y(sho)n(w)26
b(that)i Fp(K)33 b Fn(really)26 b(is)i(the)g(same)e(as)h(the)h(\014eld)
g(w)n(e)f(constructed)g(b)r(efore;)g(this)h(amoun)n(ts)f(to)456
3083 y(getting)g(a)g(b)r(etter)h(understanding)f(of)h(the)g(p)r
(olynomial)f(\010\()p Fp(x)p Fn(\).)555 3182 y(Using)19
b(either)h(of)f(the)h(t)n(w)n(o)e(metho)r(ds,)k(w)n(e)d(ha)n(v)n(e)f
(sho)n(wn)g(that)i(the)g(Riemann)f(surface)g Fp(X)3260
3194 y Fo(0)3297 3182 y Fn(\(11\))456 3282 y(can)33 b(b)r(e)h(represen)
n(ted)e(b)n(y)h(an)g(algebraic)f(curv)n(e)h Fp(X)2076
3294 y Fo(0)2113 3282 y Fn(\(11\))2261 3294 y Fc(Q)2343
3282 y Fn(o)n(v)n(er)f Fl(Q)5 b Fn(.)61 b(Recall)33 b(that)h(w)n(e)f
(found)456 3382 y(that)38 b(the)g(Riemann)g(surface)g
Fp(X)1521 3394 y Fo(0)1558 3382 y Fn(\(11\))f(is)h(a)g(torus;)k(that)d
(is,)h(it)f(has)e(gen)n(us)g(1.)68 b(Since)38 b(the)456
3481 y(complex)23 b(p)r(oin)n(ts)g(on)g Fp(X)1202 3493
y Fo(0)1239 3481 y Fn(\(11\))1387 3493 y Fc(Q)1459 3481
y Fn(yield)h(a)f(space)g(of)g(gen)n(us)f(1,)i(it)g(follo)n(ws)f(that)g
Fp(X)2934 3493 y Fo(0)2971 3481 y Fn(\(11\))3119 3493
y Fc(Q)3192 3481 y Fn(itself)h(is)456 3581 y(an)k(elliptic)g(curv)n(e.)
39 b Fp(X)1170 3593 y Fo(0)1207 3581 y Fn(\(11\))1355
3593 y Fc(Q)1432 3581 y Fn(therefore)27 b(has)h(a)g(W)-7
b(eierstrass)27 b(equation;)h(w)n(e)g(will)g(determine)456
3680 y(what)f(it)h(is)g(in)g(the)g(next)f(section.)555
3780 y(No)n(w)e(that)g(w)n(e)g(ha)n(v)n(e)f(realized)g
Fp(X)1599 3792 y Fo(0)1636 3780 y Fn(\(11\))1784 3792
y Fc(Q)1858 3780 y Fn(as)g(a)h(curv)n(e)f(o)n(v)n(er)f
Fl(Q)5 b Fn(,)32 b(w)n(e)25 b(can)f(ask)h(if)g(our)f(descrip-)456
3880 y(tion)i(of)g(the)g(p)r(oin)n(ts)g(on)g(this)g(curv)n(e)f(has)h
(the)g(same)g(in)n(terpretation)f(it)h(had)g(o)n(v)n(er)e
Fl(C)15 b Fn(.)43 b(That)26 b(is,)456 3979 y(w)n(e)31
b(can)h(ask)f(if)i(the)f(p)r(oin)n(ts)g Fp(X)1440 3991
y Fo(0)1477 3979 y Fn(\(11\))1625 3991 y Fc(Q)1674 3979
y Fn(\()p Fl(Q)6 b Fn(\))39 b(corresp)r(ond)30 b(to)i(pairs)f(\()p
Fp(E)5 b(;)14 b(C)6 b Fn(\))33 b(of)f(elliptic)h(curv)n(es)456
4079 y(o)n(v)n(er)21 b Fl(Q)35 b Fn(and)23 b(cyclic)f(subgroups)g(of)h
(order)f(11)g(stable)h(under)g(Gal\()2536 4057 y(\026)2524
4079 y Fl(Q)12 b Fp(=)p Fl(Q)5 b Fn(\),)30 b(up)24 b(to)f(isomorphism)
456 4179 y(o)n(v)n(er)i Fl(Q)6 b Fn(.)43 b(Unfortunately)-7
b(,)28 b(this)g(do)r(es)f(not)g(quite)h(w)n(ork)e(out;)i(there)f(is)h
(a)f(natural)g(map)665 4323 y Fj(f)p Fn(mo)r(dular)f(pairs)h(\()p
Fp(E)5 b(;)14 b(C)6 b Fn(\))29 b(o)n(v)n(er)c Fl(Q)40
b Fn(up)28 b(to)f(isomorphism)o Fj(g)22 b(!)h Fp(X)2689
4335 y Fo(0)2727 4323 y Fn(\(11\))2875 4335 y Fc(Q)2923
4323 y Fn(\()p Fl(Q)6 b Fn(\))25 b Fj(\000)18 b(C)3198
4335 y Fo(0)456 4468 y Fn(but)28 b(it)g(is)g(a)f(priori)f(not)i
(necessarily)e(a)h(surjection)h(or)e(an)i(injection.)37
b(W)-7 b(e)28 b(will)g(ha)n(v)n(e)f(more)g(to)456 4568
y(sa)n(y)f(ab)r(out)i(these)f(rational)f(p)r(oin)n(ts)i(later.)1405
4767 y(4.)41 b Fk(An)30 b(equa)-6 b(tion)32 b(f)n(or)g
Fp(X)2311 4779 y Fo(0)2348 4767 y Fn(\(11\))555 4917
y(Since)23 b Fp(X)836 4929 y Fo(0)873 4917 y Fn(\(11\))1021
4929 y Fc(Q)1093 4917 y Fn(is)f(an)g(elliptic)h(curv)n(e)f(de\014ned)h
(o)n(v)n(er)d Fl(Q)35 b Fn(w)n(e)22 b(can)g(hop)r(e)g(to)h(\014nd)g(an)
f(equation)456 5016 y(for)32 b(it.)53 b(This)33 b(turns)f(out)h(to)g(b)
r(e)g(a)f(fairly)h(in)n(v)n(olv)n(ed)e(exercise)h(in)h(mo)r(dular)f
(functions.)53 b(One)456 5116 y(could)24 b(attempt)i(to)f(carry)f(out)h
(these)g(calculations)f(with)h(the)h(mo)r(dular)e(functions)i
Fp(j)k Fn(and)25 b Fp(j)3374 5128 y Fo(11)456 5216 y
Fn(whic)n(h)e(w)n(e)h(ha)n(v)n(e)e(already)g(in)n(tro)r(duced,)j(but)f
(it)g(turns)g(out)g(that)g(the)g(co)r(e\016cien)n(ts)f(are)g(so)g
(large)p eop
%%Page: 9 9
9 8 bop 1220 251 a Fo(THE)29 b(MODULAR)g(CUR)-7 b(VES)29
b Fg(X)2118 259 y Fd(0)2151 251 y Fo(\(11\))g(AND)g Fg(X)2529
259 y Fd(1)2562 251 y Fo(\(11\))731 b(9)456 450 y Fn(that)26
b(computation)g(b)r(ecomes)g(di\016cult.)38 b(Instead)26
b(w)n(e)g(will)g(in)n(tro)r(duce)g(some)g(other)g(mo)r(dular)456
550 y(functions.)37 b(W)-7 b(e)28 b(omit)g(most)f(of)g(the)h(details.)
555 649 y(Our)f(basic)g(metho)r(d)i(is)e(as)g(follo)n(ws:)36
b(giv)n(en)27 b(an)g(abstract)g(gen)n(us)g(1)g(curv)n(e)g
Fp(E)33 b Fn(with)28 b(a)f(giv)n(en)456 749 y(p)r(oin)n(t)g
Fp(O)r Fn(,)i(one)e(determines)g(a)h(W)-7 b(eierstrass)26
b(equation)1222 889 y Fp(y)1266 854 y Fo(2)1321 889 y
Fn(+)18 b Fp(a)1448 901 y Fo(1)1485 889 y Fp(xy)k Fn(+)c
Fp(a)1722 901 y Fo(3)1759 889 y Fp(y)26 b Fn(=)d Fp(x)1961
854 y Fo(3)2017 889 y Fn(+)18 b Fp(a)2144 901 y Fo(2)2181
889 y Fp(x)2228 854 y Fo(2)2284 889 y Fn(+)g Fp(a)2411
901 y Fo(4)2448 889 y Fp(x)h Fn(+)f Fp(a)2641 901 y Fo(6)456
1028 y Fn(b)n(y)24 b(\014nding)h(functions)g Fp(x)g Fn(and)f
Fp(y)k Fn(on)c Fp(E)30 b Fn(whic)n(h)25 b(ha)n(v)n(e)e(p)r(oles)h(of)h
(order)e(2)i(and)f(3)g(at)h(the)g(p)r(oin)n(t)g Fp(O)456
1128 y Fn(of)30 b Fp(E)5 b Fn(,)31 b(resp)r(ectiv)n(ely)-7
b(.)43 b(The)30 b(Riemann-Ro)r(c)n(h)g(theorem)f(sho)n(ws)g(that)h(the)
h(space)e(of)h(functions)456 1228 y(on)d Fp(E)32 b Fn(with)c(p)r(oles)f
(of)h(order)e(at)h(most)g(6)g(at)g Fp(O)k Fn(and)c(no)g(other)g(p)r
(oles)g(has)g(dimension)g(exactly)456 1327 y(6;)k(since)e(w)n(e)h(ha)n
(v)n(e)f(the)h(sev)n(en)g(functions)g Fp(y)1850 1297
y Fo(2)1887 1327 y Fp(;)14 b(xy)s(;)g(y)s(;)g(x)2180
1297 y Fo(3)2217 1327 y Fp(;)g(x)2301 1297 y Fo(2)2339
1327 y Fp(;)g(x;)g Fn(1)30 b(all)g(with)g(p)r(oles)g(of)g(order)f(at)
456 1427 y(most)d(6)g(at)g Fp(O)j Fn(and)d(no)g(other)g(p)r(oles,)g
(they)h(m)n(ust)f(satisfy)g(a)g(linear)f(relation.)36
b(Renormalizing)456 1526 y Fp(x)c Fn(and)f Fp(y)j Fn(one)e(obtains)f(a)
g(W)-7 b(eierstrass)30 b(equation)h(as)g(ab)r(o)n(v)n(e;)h(see)f([14)o
(,)i(Chapter)e(3,)h(Section)456 1626 y(3])c(for)g(details.)41
b(W)-7 b(e)29 b(m)n(ust)g(\014nd)g(suc)n(h)g(functions)g
Fp(x)h Fn(and)e Fp(y)k Fn(and)d(then)g(determine)g(the)g(linear)456
1726 y(relation.)555 1825 y(W)-7 b(e)25 b(\014rst)g(exhibit)g(some)g
(mo)r(dular)f(forms)g(of)h(w)n(eigh)n(t)f(2)h(for)f(\000)2494
1837 y Fo(0)2531 1825 y Fn(\(11\);)i(recall)d(that)j(these)e(are)456
1925 y(functions)k Fp(f)j Fn(:)23 b Fj(H)h(!)f Fl(C)49
b Fn(suc)n(h)27 b(that)1340 2110 y Fp(f)1404 1993 y Ff(\022\022)1568
2059 y Fp(a)86 b(b)1572 2159 y(c)g(d)1779 1993 y Ff(\023)1854
2110 y Fp(\034)1899 1993 y Ff(\023)1984 2110 y Fn(=)23
b(\()p Fp(c\034)28 b Fn(+)18 b Fp(d)p Fn(\))2362 2076
y Fo(2)2400 2110 y Fp(f)9 b Fn(\()p Fp(\034)g Fn(\))456
2357 y(for)38 b(all)720 2240 y Ff(\022)823 2307 y Fp(a)87
b(b)827 2406 y(c)g(d)1035 2240 y Ff(\023)1137 2357 y
Fj(2)42 b Fn(\000)1286 2369 y Fo(0)1323 2357 y Fn(\(11\).)70
b(The)39 b(\014rst)g(is)f(constructed)g(as)h(a)f Fi(theta)i(series)g
Fn(\(see)e([13)o(,)456 2512 y(Chapter)24 b(7,)i(Section)f(6])g(for)f(a)
h(similar)f(construction\):)36 b(w)n(e)24 b(let)i Fp(Q)p
Fn(\()p Fp(x;)14 b(y)s Fn(\))23 b(=)g Fp(x)2899 2482
y Fo(2)2950 2512 y Fn(+)14 b Fp(xy)i Fn(+)e(3)p Fp(y)3298
2482 y Fo(2)3359 2512 y Fn(b)r(e)456 2612 y(a)29 b(quadratic)g(form)g
(of)h(discriminan)n(t)f(11)g(and)g(de\014ne)h Fp(r)2231
2624 y Fg(Q)2288 2612 y Fn(\()p Fp(n)p Fn(\))g(to)g(b)r(e)g(the)g(n)n
(um)n(b)r(er)g(of)f(in)n(teger)456 2711 y(solutions)d(\()p
Fp(x;)14 b(y)s Fn(\))29 b(to)e(the)h(equation)f Fp(Q)p
Fn(\()p Fp(x;)14 b(y)s Fn(\))23 b(=)g Fp(n)p Fn(.)37
b(Set)760 2868 y Fp(\022)799 2880 y Fg(Q)855 2868 y Fn(\()p
Fp(\034)9 b Fn(\))25 b(=)1076 2789 y Ff(X)1210 2868 y
Fp(r)1247 2880 y Fg(Q)1304 2868 y Fn(\()p Fp(n)p Fn(\))p
Fp(q)1458 2833 y Fg(n)989 3018 y Fn(=)d(1)c(+)g(2)p Fp(q)j
Fn(+)d(4)p Fp(q)1484 2984 y Fo(3)1539 3018 y Fn(+)g(2)p
Fp(q)1704 2984 y Fo(4)1760 3018 y Fn(+)g(4)p Fp(q)1925
2984 y Fo(5)1980 3018 y Fn(+)g(6)p Fp(q)2145 2984 y Fo(9)2200
3018 y Fn(+)g(2)p Fp(q)2365 2984 y Fo(11)2454 3018 y
Fn(+)g(4)p Fp(q)2619 2984 y Fo(12)2707 3018 y Fn(+)g(8)p
Fp(q)2872 2984 y Fo(15)2960 3018 y Fn(+)g Fj(\001)c(\001)g(\001)456
3169 y Fn(where)27 b Fp(q)f Fn(=)c Fp(e)885 3139 y Fo(2)p
Fg(\031)r(i\034)1052 3169 y Fn(as)27 b(b)r(efore.)36
b(One)28 b(uses)f(the)h(P)n(oisson)d(summation)j(form)n(ula)e(to)i(sho)
n(w)e(that)1281 3354 y Fp(\022)1320 3366 y Fg(Q)1390
3237 y Ff(\022\022)1554 3303 y Fp(a)87 b(b)1558 3403
y(c)g(d)1766 3237 y Ff(\023)1840 3354 y Fp(\034)1885
3237 y Ff(\023)1970 3354 y Fn(=)23 b Fj(\006)p Fn(\()p
Fp(c\034)28 b Fn(+)18 b Fp(d)p Fn(\))p Fp(\022)2452 3366
y Fg(Q)2509 3354 y Fn(\()p Fp(\034)9 b Fn(\))456 3602
y(for)19 b(all)683 3485 y Ff(\022)786 3551 y Fp(a)87
b(b)790 3651 y(c)g(d)998 3485 y Ff(\023)1082 3602 y Fj(2)23
b Fn(\000)1212 3614 y Fo(0)1249 3602 y Fn(\(11\);)g Fp(\022)1484
3572 y Fo(2)1482 3625 y Fg(Q)1538 3602 y Fn(\()p Fp(\034)9
b Fn(\))22 b(is)e(therefore)f(a)h(mo)r(dular)g(form)g(of)g(w)n(eigh)n
(t)g(2)g(for)g(\000)3237 3614 y Fo(0)3274 3602 y Fn(\(11\).)555
3751 y(There)27 b(is)h(another)e(w)n(ell)i(kno)n(wn)f(mo)r(dular)g
(form)g(of)h(w)n(eigh)n(t)e(2)i(for)f(\000)2747 3763
y Fo(0)2784 3751 y Fn(\(11\))815 3907 y Fp(h)p Fn(\()p
Fp(\034)9 b Fn(\))24 b(=)f Fp(q)1148 3828 y Ff(Y)1138
4007 y Fg(n)p Fh(\025)p Fo(1)1264 3907 y Fn(\(1)18 b
Fj(\000)g Fp(q)1479 3873 y Fg(n)1524 3907 y Fn(\))1556
3873 y Fo(2)1594 3907 y Fn(\(1)g Fj(\000)g Fp(q)1809
3873 y Fo(11)p Fg(n)1920 3907 y Fn(\))1952 3873 y Fo(2)996
4131 y Fn(=)23 b Fp(q)e Fj(\000)d Fn(2)p Fp(q)1307 4096
y Fo(2)1362 4131 y Fj(\000)h Fp(q)1486 4096 y Fo(3)1541
4131 y Fn(+)f(2)p Fp(q)1706 4096 y Fo(4)1762 4131 y Fn(+)g
Fp(q)1885 4096 y Fo(5)1940 4131 y Fn(+)g(2)p Fp(q)2105
4096 y Fo(6)2161 4131 y Fj(\000)g Fn(2)p Fp(q)2326 4096
y Fo(7)2381 4131 y Fj(\000)g Fn(2)p Fp(q)2546 4096 y
Fo(9)2601 4131 y Fj(\000)g Fn(2)p Fp(q)2766 4096 y Fo(10)2854
4131 y Fn(+)g Fj(\001)c(\001)g(\001)28 b Fn(;)456 4275
y(see)k([7)o(,)i(Chapter)d(8,)j(Corollary)29 b(8.9)j(and)g(Chapter)g
(9,)h(Section)f(4,)h(Example)f(5].)50 b(The)33 b(\014rst)456
4375 y(mo)r(dular)27 b(function)h(w)n(e)f(will)h(use)f(is)563
4557 y Fp(F)12 b Fn(\()p Fp(\034)d Fn(\))24 b(=)859 4491
y Fp(\022)900 4461 y Fo(2)898 4514 y Fg(Q)954 4491 y
Fn(\()p Fp(\034)9 b Fn(\))p 859 4538 206 4 v 882 4614
a Fp(h)p Fn(\()p Fp(\034)g Fn(\))761 4778 y(=)859 4722
y(1)p 859 4759 42 4 v 860 4835 a Fp(q)929 4778 y Fn(+)18
b(6)g(+)g(17)p Fp(q)i Fn(+)e(46)p Fp(q)1503 4744 y Fo(2)1558
4778 y Fn(+)g(116)p Fp(q)1807 4744 y Fo(3)1861 4778 y
Fn(+)g(252)p Fp(q)2110 4744 y Fo(4)2164 4778 y Fn(+)g(533)p
Fp(q)2413 4744 y Fo(5)2468 4778 y Fn(+)g(1034)p Fp(q)2759
4744 y Fo(6)2813 4778 y Fn(+)g(1961)p Fp(q)3104 4744
y Fo(7)3157 4778 y Fn(+)g Fj(\001)c(\001)g(\001)456 4967
y Fn(Since)27 b(b)r(oth)h Fp(\022)909 4937 y Fo(2)907
4990 y Fg(Q)991 4967 y Fn(and)g Fp(h)f Fn(ha)n(v)n(e)g(w)n(eigh)n(t)g
(2,)g Fp(F)40 b Fn(will)27 b(ha)n(v)n(e)g(w)n(eigh)n(t)g(0)g(and)g(th)n
(us)h(satis\014es)1489 5170 y Fp(F)1568 5053 y Ff(\022\022)1732
5119 y Fp(a)86 b(b)1736 5219 y(c)h(d)1943 5053 y Ff(\023)2018
5170 y Fp(\034)2063 5053 y Ff(\023)2148 5170 y Fn(=)23
b Fp(F)12 b Fn(\()p Fp(\034)d Fn(\))p eop
%%Page: 10 10
10 9 bop 456 251 a Fo(10)1190 b(TOM)22 b(WESTON)456 487
y Fn(for)30 b(all)704 370 y Ff(\022)807 437 y Fp(a)87
b(b)811 536 y(c)g(d)1018 370 y Ff(\023)1108 487 y Fj(2)28
b Fn(\000)1243 499 y Fo(0)1281 487 y Fn(\(11\).)46 b(As)30
b(w)n(e)h(sa)n(w)e(b)r(efore,)j(this)f(means)f(that)h
Fp(F)43 b Fn(de\014nes)30 b(a)h(mero-)456 637 y(morphic)c(function)h
(on)f(the)h(Riemann)g(surface)f Fp(X)2063 649 y Fo(0)2100
637 y Fn(\(11\).)555 739 y(T)-7 b(o)23 b(obtain)g(a)g(second)g(mo)r
(dular)g(function,)i(w)n(e)e(b)r(egin)g(with)h Fp(q)2499
706 y Fg(dF)p 2499 720 86 4 v 2508 768 a(dq)2595 739
y Fn(,)g(whic)n(h)g(one)f(easily)f(c)n(hec)n(k)456 850
y(\(from)i(the)h(fact)f(that)h Fp(F)36 b Fn(is)24 b(a)g(mo)r(dular)g
(function\))h(is)f(also)f(mo)r(dular)h(of)g(w)n(eigh)n(t)g(2)g(for)g
(\000)3237 862 y Fo(0)3274 850 y Fn(\(11\).)456 949 y(W)-7
b(e)28 b(set)631 1254 y Fp(G)p Fn(\()p Fp(\034)9 b Fn(\))24
b(=)927 1182 y Fp(q)979 1145 y Fg(d)-11 b(f)p 977 1163
68 4 v 977 1211 a(dq)1054 1182 y Fn(\()p Fp(\034)9 b
Fn(\))p 927 1235 238 4 v 966 1311 a Fp(h)p Fn(\()p Fp(\034)g
Fn(\))829 1475 y(=)23 b Fj(\000)1009 1419 y Fn(1)p 992
1456 78 4 v 992 1532 a Fp(q)1032 1508 y Fo(2)1097 1475
y Fj(\000)1190 1419 y Fn(2)p 1190 1456 42 4 v 1191 1532
a Fp(q)1260 1475 y Fn(+)18 b(12)f(+)h(116)p Fp(q)i Fn(+)e(597)p
Fp(q)1959 1441 y Fo(2)2014 1475 y Fn(+)g(2298)p Fp(q)2305
1441 y Fo(3)2359 1475 y Fn(+)g(7616)p Fp(q)2650 1441
y Fo(4)2703 1475 y Fn(+)g(22396)p Fp(q)3036 1441 y Fo(5)3090
1475 y Fn(+)g Fj(\001)c(\001)g(\001)456 1766 y Fn(As)27
b(with)h Fp(F)12 b Fn(\()p Fp(\034)d Fn(\),)29 b Fp(G)p
Fn(\()p Fp(\034)9 b Fn(\))30 b(de\014nes)d(a)g(meromorphic)g(function)h
(on)f Fp(X)2551 1778 y Fo(0)2588 1766 y Fn(\(11\).)555
1866 y(Let)20 b(us)g(c)n(ho)r(ose)f(to)h(mak)n(e)f(the)h(cusp)g
Fp(i)p Fj(1)g Fn(the)g(iden)n(tit)n(y)g(p)r(oin)n(t)g(on)g(the)g
(elliptic)h(curv)n(e)e Fp(X)3237 1878 y Fo(0)3274 1866
y Fn(\(11\).)456 1965 y(W)-7 b(e)31 b(m)n(ust)g(\014nd)h(linear)e(com)n
(binations)h(of)g Fp(F)43 b Fn(and)31 b Fp(G)g Fn(with)h(the)g
(required)e(p)r(oles)h(at)g Fp(i)p Fj(1)g Fn(and)456
2065 y(no)26 b(other)g(p)r(oles.)36 b(It)27 b(is)f(clear)f(from)h(the)h
(Lauren)n(t)f(series)f(ab)r(o)n(v)n(e)g(that)i Fp(F)38
b Fn(has)26 b(a)g(p)r(ole)g(of)h(order)456 2165 y(1)i(and)i
Fp(G)f Fn(has)g(a)g(p)r(ole)g(of)g(order)f(2)h(at)g Fp(\034)37
b Fn(=)27 b Fp(i)p Fj(1)j Fn(\(whic)n(h)h(corresp)r(onds)d(to)i
Fp(q)h Fn(=)c(0\).)45 b(It)30 b(is)h(also)456 2264 y(not)g(to)r(o)f
(hard)g(to)h(c)n(hec)n(k)f(that)h Fp(F)43 b Fn(and)31
b Fp(G)g Fn(ha)n(v)n(e)f(no)h(other)f(p)r(oles)h(on)f
Fj(H)q Fn(.)47 b(Unfortunately)-7 b(,)32 b(it)456 2364
y(turns)24 b(out)h(that)f(they)h(do)g(ha)n(v)n(e)e(p)r(oles)h(at)h(the)
g(cusp)f Fp(\034)33 b Fn(=)23 b(0)h(\(where)g Fp(q)i
Fn(=)d(1\))h(and)h(w)n(e)f(will)h(ha)n(v)n(e)456 2463
y(to)i(accoun)n(t)g(for)g(these)g(p)r(oles.)555 2563
y(W)-7 b(e)27 b(do)g(this)g(using)f(the)i Fi(A)n(tkin-L)l(ehner)g
(involution)g Fp(w)r Fn(.)37 b(This)27 b(is)f(an)h(automorphism)f(of)g
Fj(H)456 2663 y Fn(giv)n(en)d(b)n(y)h Fp(\034)33 b Fj(7!)975
2630 y Fh(\000)p Fo(1)p 966 2644 104 4 v 966 2691 a(11)p
Fg(\034)1079 2663 y Fn(.)j(One)24 b(c)n(hec)n(ks)f(easily)g(that)i(it)f
(is)h(compatible)f(with)g(the)h(action)f(of)g(\000)3260
2675 y Fo(0)3297 2663 y Fn(\(11\))456 2762 y(on)f Fj(H)q
Fn(,)i(so)e(it)h(yields)f(an)h(in)n(v)n(olution)f Fp(w)j
Fn(of)e(\000)1818 2774 y Fo(0)1855 2762 y Fn(\(11\))p
Fj(nH)f Fn(=)g Fp(X)2295 2774 y Fo(0)2332 2762 y Fn(\(11\).)35
b(Note)24 b(that)g Fp(w)i Fn(in)n(terc)n(hanges)456 2862
y(the)k(cusps)f Fp(\034)37 b Fn(=)26 b(0)k(and)f Fp(\034)37
b Fn(=)26 b Fp(i)p Fj(1)p Fn(.)44 b(It)30 b(can)f(b)r(e)i(sho)n(wn)e
(using)g(a)h(tric)n(k)f(in)n(v)n(olving)f(the)i(P)n(oisson)456
2962 y(summation)25 b(form)n(ula)g(that)h Fp(F)g Fj(\016)14
b Fp(w)26 b Fn(=)d Fp(F)37 b Fn(and)26 b Fp(G)14 b Fj(\016)h
Fp(w)25 b Fn(=)e Fj(\000)p Fp(G)p Fn(.)36 b(T)-7 b(o)25
b(\014nd)h(a)g(candidate)f(function)456 3061 y(for)k
Fp(x)p Fn(,)j(then,)g(w)n(e)e(need)g(to)h(\014nd)f(a)g(p)r(olynomial)g
Fp(p)p Fn(\()p Fp(u;)14 b(v)s Fn(\))31 b(suc)n(h)f(that)g
Fp(p)p Fn(\()p Fp(F)r(;)14 b(G)p Fn(\))32 b(starts)e(with)3385
3029 y Fo(1)p 3370 3043 65 4 v 3370 3090 a Fg(q)3402
3073 y Fd(2)456 3172 y Fn(and)k Fp(p)p Fn(\()p Fp(F)r(;)14
b(G)p Fn(\))24 b Fj(\016)f Fp(w)37 b Fn(=)e Fp(p)p Fn(\()p
Fp(F)r(;)14 b Fj(\000)p Fp(G)p Fn(\))35 b(has)f(no)g(negativ)n(e)g(p)r
(o)n(w)n(ers)f(of)i Fp(q)s Fn(.)57 b(This)35 b(is)g(an)f(exercise)f(in)
456 3271 y(linear)28 b(algebra;)g(one)h(of)h(the)f(simplest)h(suc)n(h)e
(p)r(olynomials)h(is)g Fp(p)p Fn(\()p Fp(u;)14 b(v)s
Fn(\))26 b(=)f(\()p Fp(u)2892 3241 y Fo(2)2949 3271 y
Fj(\000)19 b Fp(v)k Fj(\000)c Fn(10)p Fp(v)s Fn(\))p
Fp(=)p Fn(2,)456 3371 y(whic)n(h)27 b(yields)722 3652
y Fp(x)d Fn(=)908 3596 y(1)p 890 3633 78 4 v 890 3709
a Fp(q)930 3685 y Fo(2)996 3652 y Fn(+)1089 3596 y(2)p
1089 3633 42 4 v 1090 3709 a Fp(q)1159 3652 y Fj(\000)18
b Fn(1)g(+)g(5)p Fp(q)j Fn(+)d(8)p Fp(q)1650 3618 y Fo(2)1705
3652 y Fn(+)g Fp(q)1828 3618 y Fo(3)1884 3652 y Fn(+)g(7)p
Fp(q)2049 3618 y Fo(4)2104 3652 y Fj(\000)g Fn(11)p Fp(q)2311
3618 y Fo(5)2366 3652 y Fn(+)g(10)p Fp(q)2573 3618 y
Fo(6)2628 3652 y Fn(+)g Fj(\001)c(\001)g(\001)582 3830
y Fp(x)19 b Fj(\016)f Fp(w)26 b Fn(=)c(22)c(+)g(242)p
Fp(q)i Fn(+)e(1210)p Fp(q)1539 3796 y Fo(2)1593 3830
y Fn(+)g(4598)p Fp(q)1884 3796 y Fo(3)1938 3830 y Fn(+)g(15246)p
Fp(q)2271 3796 y Fo(4)2324 3830 y Fn(+)g(44770)p Fp(q)2657
3796 y Fo(5)2710 3830 y Fn(+)g(121484)p Fp(q)3085 3796
y Fo(6)3138 3830 y Fn(+)g Fj(\001)c(\001)g(\001)555 4088
y Fn(W)-7 b(e)27 b(\014nd)f Fp(y)j Fn(in)e(a)f(similar)f(w)n(a)n(y;)h
(the)g(p)r(olynomial)g Fp(p)p Fn(\()p Fp(u;)14 b(v)s
Fn(\))23 b(=)g(\()p Fj(\000)p Fp(uv)18 b Fn(+)d Fp(u)2802
4058 y Fo(3)2855 4088 y Fj(\000)g Fn(10)p Fp(u)3067 4058
y Fo(2)3118 4088 y Fj(\000)h Fn(22)p Fp(u)p Fn(\))p Fp(=)p
Fn(2)456 4187 y(w)n(orks)26 b(and)h(yields)834 4469 y
Fp(y)f Fn(=)1016 4413 y(1)p 999 4450 78 4 v 999 4526
a Fp(q)1039 4502 y Fo(3)1104 4469 y Fn(+)1215 4413 y(8)p
1197 4450 V 1197 4526 a Fp(q)1237 4502 y Fo(2)1303 4469
y Fn(+)1396 4413 y(17)p 1396 4450 84 4 v 1417 4526 a
Fp(q)1507 4469 y Fn(+)18 b(13)g(+)g(42)p Fp(q)i Fn(+)e(66)p
Fp(q)2123 4435 y Fo(2)2178 4469 y Fn(+)g(24)p Fp(q)2385
4435 y Fo(3)2440 4469 y Fn(+)g(72)p Fp(q)2647 4435 y
Fo(4)2702 4469 y Fj(\000)g Fn(70)p Fp(q)2909 4435 y Fo(5)2964
4469 y Fn(+)g Fj(\001)c(\001)g(\001)694 4647 y Fp(y)21
b Fj(\016)d Fp(w)26 b Fn(=)d(121)17 b(+)h(1331)p Fp(q)h
Fn(+)f(7986)p Fp(q)1730 4613 y Fo(2)1784 4647 y Fn(+)g(37268)p
Fp(q)2117 4613 y Fo(3)2170 4647 y Fn(+)g(149072)p Fp(q)2545
4613 y Fo(4)2598 4647 y Fn(+)g(531069)p Fp(q)2973 4613
y Fo(5)3026 4647 y Fn(+)g Fj(\001)c(\001)g(\001)555 4894
y Fn(T)-7 b(o)27 b(determine)h(the)g(p)r(olynomial)f(satis\014ed)g(b)n
(y)h Fp(x)g Fn(and)f Fp(y)j Fn(w)n(e)e(start)f(with)652
5176 y Fp(y)696 5141 y Fo(2)751 5176 y Fj(\000)18 b Fp(x)881
5141 y Fo(3)942 5176 y Fn(=)1040 5120 y(10)p 1040 5157
V 1043 5233 a Fp(q)1083 5209 y Fo(5)1151 5176 y Fn(+)1244
5120 y(89)p 1244 5157 V 1247 5233 a Fp(q)1287 5209 y
Fo(4)1355 5176 y Fn(+)1448 5120 y(287)p 1448 5157 125
4 v 1472 5233 a Fp(q)1512 5209 y Fo(3)1601 5176 y Fn(+)1694
5120 y(506)p 1694 5157 V 1718 5233 a Fp(q)1758 5209 y
Fo(2)1847 5176 y Fn(+)1940 5120 y(1111)p 1940 5157 167
4 v 2003 5233 a Fp(q)2135 5176 y Fn(+)g(2606)e(+)i(3498)p
Fp(q)i Fn(+)e(4729)p Fp(q)3001 5141 y Fo(2)3055 5176
y Fn(+)g Fj(\001)c(\001)g(\001)p eop
%%Page: 11 11
11 10 bop 1220 251 a Fo(THE)29 b(MODULAR)g(CUR)-7 b(VES)29
b Fg(X)2118 259 y Fd(0)2151 251 y Fo(\(11\))g(AND)g Fg(X)2529
259 y Fd(1)2562 251 y Fo(\(11\))698 b(11)456 450 y Fn(and)25
b(successiv)n(ely)e(add)i(m)n(ultiples)h(of)f Fp(xy)s
Fn(,)h Fp(x)1857 420 y Fo(2)1895 450 y Fn(,)g Fp(y)i
Fn(and)d Fp(x)g Fn(to)h(cancel)e(o\013)i(the)f(rest)g(of)g(the)h(p)r
(oles.)456 550 y(Th)n(us)h(the)h(next)g(terms)f(are)1098
705 y Fp(y)1142 671 y Fo(2)1198 705 y Fj(\000)18 b Fp(x)1328
671 y Fo(3)1384 705 y Fj(\000)g Fn(10)p Fp(xy)25 b Fn(=)e
Fj(\000)1827 649 y Fn(11)p 1827 686 84 4 v 1830 762 a
Fp(q)1870 738 y Fo(4)1938 705 y Fj(\000)2031 649 y Fn(33)p
2031 686 V 2034 762 a Fp(q)2074 738 y Fo(3)2142 705 y
Fn(+)2235 649 y(66)p 2235 686 V 2238 762 a Fp(q)2278
738 y Fo(2)2347 705 y Fn(+)2440 649 y(121)p 2440 686
125 4 v 2482 762 a Fp(q)2593 705 y Fj(\000)18 b Fn(264)f(+)h(198)p
Fp(q)i Fn(+)e Fj(\001)c(\001)g(\001)829 921 y Fp(y)873
887 y Fo(2)929 921 y Fj(\000)k Fp(x)1059 887 y Fo(3)1115
921 y Fj(\000)g Fn(10)p Fp(xy)i Fn(+)e(11)p Fp(x)1604
887 y Fo(2)1664 921 y Fn(=)1762 865 y(11)p 1762 902 84
4 v 1765 978 a Fp(q)1805 954 y Fo(3)1873 921 y Fn(+)1966
865 y(88)p 1966 902 V 1969 978 a Fp(q)2009 954 y Fo(2)2078
921 y Fn(+)2171 865 y(187)p 2171 902 125 4 v 2213 978
a Fp(q)2324 921 y Fn(+)g(143)f(+)h(462)p Fp(q)i Fn(+)e(726)p
Fp(q)3065 887 y Fo(2)3119 921 y Fn(+)g Fj(\001)c(\001)g(\001)601
1099 y Fp(y)645 1065 y Fo(2)701 1099 y Fj(\000)k Fp(x)831
1065 y Fo(3)887 1099 y Fj(\000)g Fn(10)p Fp(xy)i Fn(+)e(11)p
Fp(x)1376 1065 y Fo(2)1431 1099 y Fj(\000)h Fn(11)p Fp(y)24
b Fn(=)f(0)456 1237 y(W)-7 b(e)28 b(ha)n(v)n(e)e(therefore)h(found)h
(the)g(W)-7 b(eierstrass)26 b(equation)1414 1374 y Fp(y)1458
1340 y Fo(2)1513 1374 y Fj(\000)18 b Fn(10)p Fp(xy)j
Fj(\000)d Fn(11)p Fp(y)25 b Fn(=)d Fp(x)2156 1340 y Fo(3)2212
1374 y Fj(\000)c Fn(11)p Fp(x)2426 1340 y Fo(2)2463 1374
y Fp(:)555 1511 y Fn(This)23 b(equation)g(can)f(b)r(e)h(written)h(in)f
(a)f(di\013eren)n(t)h(form)g(whic)n(h)g(is)g(in)g(more)f(common)h
(usage:)456 1611 y(replacing)j Fp(y)k Fn(b)n(y)e Fp(y)21
b Fn(+)d(5)p Fp(x)g Fj(\000)g Fn(19)27 b(and)g Fp(x)h
Fn(b)n(y)g Fp(x)19 b Fj(\000)f Fn(5)27 b(yields)g(the)h(standard)f
(form)1426 1748 y Fp(y)1470 1713 y Fo(2)1526 1748 y Fn(+)18
b Fp(y)26 b Fn(=)c Fp(x)1810 1713 y Fo(3)1866 1748 y
Fj(\000)c Fp(x)1996 1713 y Fo(2)2053 1748 y Fj(\000)g
Fn(10)p Fp(x)f Fj(\000)h Fn(20)p Fp(:)1349 1925 y Fn(5.)41
b Fk(Ra)-6 b(tional)31 b(points)h(on)f Fp(X)2367 1937
y Fo(0)2404 1925 y Fn(\(11\))555 2074 y(A)n(t)c(this)f(p)r(oin)n(t)g(w)
n(e)g(ha)n(v)n(e)f(found)i(that)f Fp(X)1839 2086 y Fo(0)1876
2074 y Fn(\(11\))g(can)g(b)r(e)g(represen)n(ted)f(b)n(y)h(an)g
(elliptic)g(curv)n(e)456 2174 y(o)n(v)n(er)f Fl(Q)6 b
Fn(,)34 b(and)27 b(that)h(an)f(equation)g(for)g(this)h(elliptic)g(curv)
n(e)f(is)1426 2311 y Fp(y)1470 2276 y Fo(2)1526 2311
y Fn(+)18 b Fp(y)26 b Fn(=)c Fp(x)1810 2276 y Fo(3)1866
2311 y Fj(\000)c Fp(x)1996 2276 y Fo(2)2053 2311 y Fj(\000)g
Fn(10)p Fp(x)f Fj(\000)h Fn(20)p Fp(:)456 2448 y Fn(It)25
b(is)f(easy)g(to)h(determine)g(the)g(torsion)f(subgroup)f(of)i(this)g
(curv)n(e:)35 b(it)25 b(is)g(the)g(group)f(of)g(order)g(5)945
2585 y Fp(X)1014 2597 y Fo(0)1051 2585 y Fn(\(11\))1199
2597 y Fc(Q)1248 2585 y Fn(\()p Fl(Q)5 b Fn(\))1371 2597
y Fo(tors)1515 2585 y Fn(=)23 b Fj(f)p Fp(O)r(;)14 b
Fn(\(5)p Fp(;)g Fn(5\))p Fp(;)g Fn(\(16)p Fp(;)g Fj(\000)p
Fn(61\))p Fp(;)g Fn(\(16)p Fp(;)g Fn(60\))p Fp(;)g Fn(\(5)p
Fp(;)g Fj(\000)p Fn(6\))p Fj(g)p Fp(:)456 2722 y Fn(The)24
b(rank)f(of)h Fp(X)971 2734 y Fo(0)1008 2722 y Fn(\(11\))1156
2734 y Fc(Q)1205 2722 y Fn(\()p Fl(Q)6 b Fn(\))31 b(is)24
b(more)f(di\016cult)i(to)f(determine,)h(although)f(there)g(are)f(metho)
r(ds)456 2822 y(to)k(compute)h(it.)37 b(One)27 b(\014nds)h(\(see)g([2)o
(,)g(p.)37 b(110])26 b(that)i Fp(X)2195 2834 y Fo(0)2232
2822 y Fn(\(11\))2380 2834 y Fc(Q)2429 2822 y Fn(\()p
Fl(Q)6 b Fn(\))34 b(has)27 b(rank)g(0,)g(so)g(that)1002
2959 y Fp(X)1071 2971 y Fo(0)1108 2959 y Fn(\(11\))1256
2971 y Fc(Q)1305 2959 y Fn(\()p Fl(Q)6 b Fn(\))30 b(=)22
b Fj(f)p Fp(O)r(;)14 b Fn(\(5)p Fp(;)g Fn(5\))p Fp(;)g
Fn(\(16)p Fp(;)g Fj(\000)p Fn(61\))p Fp(;)g Fn(\(16)p
Fp(;)g Fn(60\))p Fp(;)g Fn(\(5)p Fp(;)g Fj(\000)p Fn(6\))p
Fj(g)p Fp(:)555 3096 y Fn(Tw)n(o)24 b(of)h(these)g(rational)e(p)r(oin)n
(ts)i(w)n(ere)e(exp)r(ected:)36 b(they)25 b(corresp)r(ond)e(to)i(the)g
(cusps.)35 b(Since)456 3196 y Fp(X)525 3208 y Fo(0)562
3196 y Fn(\(11\))710 3208 y Fc(Q)759 3196 y Fn(\()p Fl(Q)5
b Fn(\))48 b(is)41 b(not)g(the)g(same)g(as)f(Ell)1783
3208 y Fo(0)1820 3196 y Fn(\()p Fl(Q)6 b Fn(\),)51 b(w)n(e)41
b(can)f(not)h(at)g(the)h(momen)n(t)f(giv)n(e)f(go)r(o)r(d)456
3295 y(in)n(terpretations)e(of)h(the)h(other)f(3)g(p)r(oin)n(ts.)72
b(Note)40 b(that)f(ev)n(en)g(if)h(they)g(do)f(corresp)r(ond)f(to)456
3395 y(elemen)n(ts)23 b(\()p Fp(E)5 b(;)14 b(C)6 b Fn(\))25
b(of)f(Ell)1241 3407 y Fo(0)1279 3395 y Fn(\()p Fl(Q)5
b Fn(\))q(,)30 b(w)n(e)24 b(can)f(not)h(b)r(e)g(sure)f(whether)h(or)f
(not)h(there)f(are)g(an)n(y)g(elliptic)456 3494 y(curv)n(es)35
b(o)n(v)n(er)g Fl(Q)48 b Fn(with)37 b(rational)f(11-torsion;)i(indeed,)
i(all)c(w)n(e)g(w)n(ould)g(kno)n(w)g(is)h(that)g(there)456
3594 y(exists)22 b(a)h(rational)f(elliptic)h(curv)n(e)f
Fp(E)29 b Fn(and)23 b(a)f(p)r(oin)n(t)i Fp(P)34 b Fj(2)24
b Fp(E)5 b Fn([11])22 b(suc)n(h)h(that)g Fp(\033)s Fn(\()p
Fp(P)12 b Fn(\))24 b(is)f(a)g(m)n(ultiple)456 3694 y(of)k
Fp(P)40 b Fn(for)27 b(all)g Fp(\033)g Fj(2)c Fn(Gal\()1211
3672 y(\026)1199 3694 y Fl(Q)12 b Fp(=)p Fl(Q)5 b Fn(\).)1182
3871 y(6.)41 b Fk(Refined)33 b(modular)d(p)-6 b(airs)32
b(and)f Fp(X)2533 3883 y Fo(1)2570 3871 y Fn(\(11\))555
4020 y(Although)36 b(w)n(e)e(dev)n(elop)r(ed)h(a)g(go)r(o)r(d)g(theory)
f(of)h(the)h(mo)r(dular)e(curv)n(e)h Fp(X)2897 4032 y
Fo(0)2934 4020 y Fn(\(11\),)i(it)e(ended)456 4120 y(up)g(not)g(b)r
(eing)g(quite)g(go)r(o)r(d)f(enough)g(to)h(answ)n(er)e(the)j(question)e
(of)h(whether)g(or)f(not)h(there)456 4219 y(exist)26
b(elliptic)h(curv)n(es)e(o)n(v)n(er)g Fl(Q)38 b Fn(with)27
b(rational)f(11-torsion.)34 b(In)26 b(order)g(to)g(determine)h(this,)g
(w)n(e)456 4319 y(will)i(consider)g(classifying)f(a)h(di\013eren)n(t)g
(collection)g(of)h(pairs:)39 b(w)n(e)29 b(de\014ne)h(a)f
Fi(r)l(e\014ne)l(d)i(mo)l(dular)456 4419 y(p)l(air)f
Fn(o)n(v)n(er)e(a)g(\014eld)i Fp(K)35 b Fn(to)29 b(b)r(e)h(an)f
(elliptic)g(curv)n(e)g Fp(E)34 b Fn(de\014ned)c(o)n(v)n(er)d
Fp(K)35 b Fn(together)29 b(with)g(a)g(p)r(oin)n(t)456
4518 y Fp(P)49 b Fj(2)37 b Fp(E)5 b Fn(\()p Fp(K)h Fn(\))36
b(of)g(exact)g(order)e(11.)62 b(Tw)n(o)35 b(suc)n(h)h(pairs)f(\()p
Fp(E)2314 4530 y Fo(1)2352 4518 y Fp(;)14 b(P)2442 4530
y Fo(1)2479 4518 y Fn(\))36 b(and)g(\()p Fp(E)2810 4530
y Fo(2)2848 4518 y Fp(;)14 b(P)2938 4530 y Fo(2)2976
4518 y Fn(\))36 b(are)f(said)h(to)456 4618 y(b)r(e)30
b(isomorphic)f(if)i(there)f(exist)g(an)g(isomorphism)f(of)h
Fp(E)2251 4630 y Fo(1)2319 4618 y Fn(and)g Fp(E)2544
4630 y Fo(2)2581 4618 y Fn(,)h(de\014ned)g(o)n(v)n(er)d
Fp(K)6 b Fn(,)31 b(whic)n(h)456 4717 y(sends)26 b Fp(P)730
4729 y Fo(1)795 4717 y Fn(to)h Fp(P)949 4729 y Fo(2)987
4717 y Fn(.)36 b(W)-7 b(e)28 b(will)f(write)g(Ell)1660
4729 y Fo(1)1697 4717 y Fn(\()p Fp(K)6 b Fn(\))27 b(for)f(the)i(set)f
(of)g(isomorphism)f(classes)g(of)h(re\014ned)456 4817
y(mo)r(dular)37 b(pairs)f(\()p Fp(E)5 b(;)14 b(P)e Fn(\))38
b(o)n(v)n(er)e Fp(K)6 b Fn(.)67 b(The)38 b(question)f(of)h(the)g
(existence)f(of)h(rational)e(elliptic)456 4917 y(curv)n(es)28
b(with)h(rational)f(11-torsion)f(is)i(precisely)g(the)g(question)g(of)h
(whether)f(or)f(not)h(Ell)3278 4929 y Fo(1)3315 4917
y Fn(\()p Fl(Q)6 b Fn(\))456 5016 y(is)27 b(nonempt)n(y)-7
b(.)555 5116 y(As)27 b(usual,)f(w)n(e)g(b)r(egin)g(b)n(y)g(analyzing)f
(Ell)1845 5128 y Fo(1)1883 5116 y Fn(\()p Fl(C)15 b Fn(\))32
b(using)26 b(lattices.)36 b(First)26 b(one)g(normalizes)f(the)456
5216 y(lattices)h(to)g(reduce)g(to)g(considering)f(re\014ned)h(mo)r
(dular)g(pairs)f(of)i(the)f(form)g(\()p Fl(C)16 b Fp(=)p
Fn(\003)3055 5228 y Fg(\034)3101 5216 y Fp(;)3165 5183
y Fo(1)p 3148 5197 67 4 v 3148 5244 a(11)3224 5216 y
Fn(\))27 b(with)p eop
%%Page: 12 12
12 11 bop 456 251 a Fo(12)1190 b(TOM)22 b(WESTON)456
450 y Fp(\034)37 b Fj(2)28 b(H)q Fn(.)45 b(Pro)r(ceeding)29
b(as)h(with)g(Ell)1581 462 y Fo(0)1618 450 y Fn(\()p
Fl(C)15 b Fn(\))q(,)37 b(one)30 b(\014nds)g(that)h(t)n(w)n(o)f(suc)n(h)
g(pairs)f(\()p Fl(C)15 b Fp(=)p Fn(\003)3078 462 y Fg(\034)3125
450 y Fp(;)3188 417 y Fo(1)p 3172 431 67 4 v 3172 479
a(11)3248 450 y Fn(\))31 b(and)456 607 y(\()p Fl(C)15
b Fp(=)p Fn(\003)642 619 y Fg(\034)680 603 y Fe(0)711
607 y Fp(;)774 575 y Fo(1)p 758 589 V 758 636 a(11)834
607 y Fn(\))23 b(are)e(isomorphic)h(if)h(and)f(only)g(if)h(there)g(is)f
(a)g(matrix)2528 490 y Ff(\022)2631 557 y Fp(a)87 b(b)2635
656 y(c)g(d)2843 490 y Ff(\023)2927 607 y Fj(2)23 b Fn(SL)3103
619 y Fo(2)3140 607 y Fn(\()p Fl(Z)p Fn(\))17 b(with)1631
739 y Ff(\022)1734 806 y Fp(a)87 b(b)1738 906 y(c)g(d)1945
739 y Ff(\023)2020 857 y Fp(\034)33 b Fn(=)23 b Fp(\034)2222
822 y Fh(0)2246 857 y Fp(;)456 1048 y Fn(and)j Fp(a;)14
b(d)23 b Fj(\021)g Fn(1)36 b(\(mo)r(d)28 b(11\))e(and)h
Fp(c)c Fj(\021)g Fn(0)36 b(\(mo)r(d)28 b(11\).)36 b(W)-7
b(e)27 b(will)g(write)g(\000)2632 1060 y Fo(1)2669 1048
y Fn(\(11\))f(for)g(the)i(subgroup)456 1147 y(of)f(SL)648
1159 y Fo(2)685 1147 y Fn(\()p Fl(Z)p Fn(\))22 b(of)28
b(suc)n(h)f(matrices;)g(our)f(results)i(to)f(this)h(p)r(oin)n(t)g(are)e
(that)i(there)g(is)f(a)g(bijection)1454 1288 y(\000)1506
1300 y Fo(1)1543 1288 y Fn(\(11\))p Fj(nH)c( )-14 b(!)24
b Fn(Ell)2104 1300 y Fo(1)2141 1288 y Fn(\()p Fl(C)16
b Fn(\))1758 1476 y Fp(\034)32 b Fj(\000)-14 b(!)1983
1359 y Ff(\022)2044 1476 y Fl(C)15 b Fp(=)p Fn(\003)2198
1488 y Fg(\034)2245 1476 y Fp(;)2313 1420 y Fn(1)p 2292
1457 84 4 v 2292 1533 a(11)2385 1359 y Ff(\023)555 1791
y Fn(\000)607 1803 y Fo(1)644 1791 y Fn(\(11\))27 b(turns)g(out)g(to)g
(b)r(e)h(a)f(signi\014can)n(tly)f(more)g(complicated)h(group)f(than)i
(\000)3076 1803 y Fo(0)3113 1791 y Fn(\(11\),)f(and)456
1891 y(there)32 b(is)g(no)g(particularly)e(simple)j(fundamen)n(tal)f
(domain)g(for)g(\000)2567 1903 y Fo(1)2604 1891 y Fn(\(11\))p
Fj(nH)q Fn(.)50 b(Ho)n(w)n(ev)n(er,)31 b(it)i(is)456
1991 y(still)19 b(p)r(ossible)g(to)g(do)f(a)h(little)h(com)n
(binatorial)d(algebra)g(and)i(compute)g(what)g(\000)2892
2003 y Fo(1)2930 1991 y Fn(\(11\))p Fj(nH)g Fn(should)456
2090 y(lo)r(ok)29 b(lik)n(e:)40 b(it)31 b(turns)e(out)h(that)g(w)n(e)f
(need)h(to)g(adjoin)f(a)h(set)f Fj(C)2387 2102 y Fo(1)2454
2090 y Fn(of)h(10)f(cusps)g(to)h(\000)3044 2102 y Fo(1)3081
2090 y Fn(\(11\))p Fj(nH)g Fn(to)456 2190 y(obtain)d(a)g(compact)g
(Riemann)h(surface)f(whic)n(h)g(w)n(e)g(denote)h Fp(X)2443
2202 y Fo(1)2480 2190 y Fn(\(11\):)1431 2331 y Fp(X)1500
2343 y Fo(1)1537 2331 y Fn(\(11\)\()p Fl(C)15 b Fn(\))30
b Fj( )-14 b(!)23 b Fn(Ell)2111 2343 y Fo(1)2148 2331
y Fn(\()p Fl(C)15 b Fn(\))25 b Fj([)19 b(C)2409 2343
y Fo(1)2446 2331 y Fp(:)555 2472 y Fn(In)31 b(fact,)h(with)g(the)f
(prop)r(er)f(mac)n(hinery)g(\(primarily)g(in)n(v)n(olving)f(a)i(fairly)
f(w)n(ell)h(dev)n(elop)r(ed)456 2572 y(theory)24 b(of)h(the)h(mo)r
(dular)e(functions)i(for)f(\000)1807 2584 y Fo(1)1844
2572 y Fn(\(11\);)g(see)g([5,)h(Example)e(9.1.6]\))g(it)i(can)f(b)r(e)g
(sho)n(wn)456 2672 y(that)33 b Fp(X)710 2684 y Fo(1)748
2672 y Fn(\(11\))g(still)h(has)f(gen)n(us)g(1.)54 b(Metho)r(ds)34
b(similar)f(to)g(those)g(w)n(e)h(discussed)f(for)g Fp(X)3260
2684 y Fo(0)3297 2672 y Fn(\(11\))456 2771 y(can)24 b(also)f(b)r(e)i
(used)g(to)f(sho)n(w)g(that)h Fp(X)1612 2783 y Fo(1)1649
2771 y Fn(\(11\))f(can)h(b)r(e)g(de\014ned)g(as)f(an)g(algebraic)f
(curv)n(e)g Fp(X)3210 2783 y Fo(1)3247 2771 y Fn(\(11\))3395
2783 y Fc(Q)456 2871 y Fn(o)n(v)n(er)28 b Fl(Q)6 b Fn(:)48
b(for)30 b(example,)g(in)h(the)f(notation)g(of)g(Section)h(4,)f
Fp(X)2382 2883 y Fo(1)2419 2871 y Fn(\(11\))2567 2883
y Fc(Q)2647 2871 y Fn(can)f(b)r(e)i(realized)e(as)h(the)456
2970 y(curv)n(e)c(asso)r(ciated)h(to)g(the)h(\014xed)g(\014eld)f(of)h
Fl(Q)6 b Fn(\()p Fp(t;)14 b(E)5 b Fn([11]\))33 b(b)n(y)1061
3161 y Fp(H)1130 3173 y Fo(1)1190 3161 y Fn(=)1278 3044
y Ff(\032\022)1443 3111 y Fp(a)115 b Fn(0)1447 3210 y
Fp(b)87 b Fj(\006)p Fn(1)1717 3044 y Ff(\023)1801 3161
y Fj(j)23 b Fp(a)g Fj(2)h Fn(\()p Fl(Z)o Fp(=)p Fn(1)o(1)p
Fl(Z)-7 b Fn(\))2298 3127 y Fh(\003)2331 3161 y Fp(;)14
b(b)22 b Fj(2)i Fl(Z)o Fp(=)p Fn(1)o(1)p Fl(Z)2746 3044
y Ff(\033)2816 3161 y Fp(;)456 3352 y Fn(considered)34
b(as)h(a)h(subgroup)e(of)i(Gal\()p Fl(Q)6 b Fn(\()p Fp(t;)14
b(E)5 b Fn([11]\))p Fp(=)p Fl(Q)10 b Fn(\()q Fp(t)p Fn(\)\).)67
b(As)36 b(alw)n(a)n(ys,)g(w)n(e)g(still)g(ha)n(v)n(e)e(the)456
3452 y(in)n(terpretation)1407 3558 y Fp(X)1476 3570 y
Fo(1)1513 3558 y Fn(\(11\))1661 3570 y Fc(Q)1710 3558
y Fn(\()p Fl(C)15 b Fn(\))29 b Fj( )-14 b(!)24 b Fn(Ell)2135
3570 y Fo(1)2172 3558 y Fn(\()p Fl(C)16 b Fn(\))24 b
Fj([)19 b(C)2433 3570 y Fo(1)2470 3558 y Fp(:)555 3682
y Fn(Ho)n(w)n(ev)n(er,)26 b(there)i(is)f(an)h(unexp)r(ected)g
(complication)f(in)h(this)g(rational)e(structure:)37
b(not)28 b(all)456 3782 y(of)e(the)h(cusps)f(actually)g(lie)h(in)g
Fp(X)1502 3794 y Fo(1)1539 3782 y Fn(\(11\))1687 3794
y Fc(Q)1736 3782 y Fn(\()p Fl(Q)5 b Fn(\))q(.)42 b(In)27
b(fact,)g(it)g(turns)f(out)h(that)g(5)f(of)g(the)h(cusps)f(lie)456
3881 y(in)g(this)h(group,)f(while)g(the)h(other)f(5)g(are)f(de\014ned)i
(o)n(v)n(er)e(the)h(maximal)g(real)g(sub\014eld)g Fl(Q)6
b Fn(\()p Fp(\020)3281 3893 y Fo(11)3357 3881 y Fn(\))3389
3851 y Fo(+)456 3981 y Fn(of)32 b Fl(Q)6 b Fn(\()p Fp(\020)682
3993 y Fo(11)759 3981 y Fn(\);)35 b(this)e(is)g(a)f(degree)f(5)i
(extension)f(of)g Fl(Q)6 b Fn(.)58 b(It)33 b(follo)n(ws)f(that)h(for)f
(a)g(general)f(\014eld)i Fp(K)456 4081 y Fn(con)n(taining)26
b Fl(Q)6 b Fn(,)34 b Fp(X)1044 4093 y Fo(1)1081 4081
y Fn(\(11\))1229 4093 y Fc(Q)1278 4081 y Fn(\()p Fp(K)6
b Fn(\))28 b(con)n(tains)f(either)h(5)f(or)g(10)g(cusps,)h(dep)r
(ending)g(on)g(whether)f(or)456 4180 y(not)g Fp(K)33
b Fn(con)n(tains)27 b Fl(Q)6 b Fn(\()p Fp(\020)1160 4192
y Fo(11)1236 4180 y Fn(\))1268 4150 y Fo(+)1324 4180
y Fn(.)37 b(See)27 b([5,)h(Example)f(9.3.5])f(for)h(a)g(discussion.)
1598 4369 y(7.)41 b Fk(Moduli)31 b(sp)-6 b(a)n(ces)555
4518 y Fn(The)33 b(k)n(ey)g(to)g(determining)g(whether)g(or)f(not)h
(there)g(exist)g(elliptic)g(curv)n(es)f(o)n(v)n(er)f
Fl(Q)45 b Fn(with)456 4618 y(rational)28 b(11-torsion)f(is)i(an)h
(understanding)f(of)g(the)h(relationship)f(b)r(et)n(w)n(een)h(the)g
Fl(Q)5 b Fn(-rational)456 4717 y(p)r(oin)n(ts)35 b(of)g
Fp(X)884 4729 y Fo(1)921 4717 y Fn(\(11\))1069 4729 y
Fc(Q)1153 4717 y Fn(and)f(Ell)1424 4729 y Fo(1)1461 4717
y Fn(\()p Fl(Q)6 b Fn(\))q(.)65 b(W)-7 b(e)35 b(constructed)g
Fp(X)2348 4729 y Fo(1)2385 4717 y Fn(\(11\))f(so)h(that)g(its)g
(non-cuspidal)456 4817 y(complex)c(p)r(oin)n(ts)h(corresp)r(ond)f(to)h
(Ell)1676 4829 y Fo(1)1713 4817 y Fn(\()p Fl(C)15 b Fn(\),)40
b(but)33 b(it)f(is)g(not)g(at)g(all)g(clear)f(if)i(the)g(same)e(in)n
(ter-)456 4917 y(pretation)c(should)g(hold)g(o)n(v)n(er)f
Fl(Q)6 b Fn(.)555 5016 y(This)39 b(question)g(is)g(an)g(example)g(of)g
(a)g(v)n(ery)f(imp)r(ortan)n(t)h(sort)f(of)i(problem)e(in)i(mo)r(dern)
456 5116 y(algebraic)f(geometry)g(called)i(a)g Fi(mo)l(duli)h(pr)l
(oblem)p Fn(.)79 b(Let)41 b Fp(F)12 b Fn(\()p Fp(K)6
b Fn(\))41 b(b)r(e)g(some)f(sort)h(of)g(set)g(of)456
5216 y(geometric)26 b(ob)5 b(jects)27 b(o)n(v)n(er)f(a)h(\014eld)h
Fp(K)6 b Fn(;)27 b(for)g(example,)h Fp(F)12 b Fn(\()p
Fp(K)6 b Fn(\))27 b(could)h(b)r(e)p eop
%%Page: 13 13
13 12 bop 1220 251 a Fo(THE)29 b(MODULAR)g(CUR)-7 b(VES)29
b Fg(X)2118 259 y Fd(0)2151 251 y Fo(\(11\))g(AND)g Fg(X)2529
259 y Fd(1)2562 251 y Fo(\(11\))698 b(13)661 450 y Fj(\017)41
b Fn(isomorphism)27 b(classes)f(of)i(elliptic)g(curv)n(es)e
Fp(E)33 b Fn(o)n(v)n(er)26 b Fp(K)6 b Fn(;)661 550 y
Fj(\017)41 b Fn(isomorphism)27 b(classes)f(of)i(mo)r(dular)f(pairs)f
(\()p Fp(E)5 b(;)14 b(C)6 b Fn(\))29 b(o)n(v)n(er)d Fp(K)6
b Fn(;)661 649 y Fj(\017)41 b Fn(isomorphism)27 b(classes)f(of)i
(re\014ned)f(mo)r(dular)g(pairs)g(\()p Fp(E)5 b(;)14
b(P)e Fn(\))28 b(o)n(v)n(er)d Fp(K)6 b Fn(;)661 749 y
Fj(\017)41 b Fn(isomorphism)27 b(classes)f(of)i(algebraic)d(curv)n(es)i
(of)g(gen)n(us)g(2)g(o)n(v)n(er)f Fp(K)6 b Fn(;)661 849
y Fj(\017)41 b Fn(algebraic)26 b(surfaces)h(em)n(b)r(edded)h(in)f
Fl(P)1948 818 y Fo(3)1948 871 y Fg(K)2011 849 y Fn(;)456
982 y(or)c(an)n(y)g(other)h(similar)f(sort)g(of)h(set.)36
b(The)24 b(k)n(ey)g(thing)g(is)g(that)g Fp(F)36 b Fn(should)24
b(b)r(e)h(de\014ned)f(for)g(ev)n(ery)456 1081 y(\014eld)i
Fp(K)32 b Fn(\(sa)n(y)-7 b(,)26 b(of)g(c)n(haracteristic)e(0\))i(and)g
(that)h(for)f(ev)n(ery)f(inclusion)h(of)g(\014elds)g
Fp(K)j(,)-14 b Fj(!)23 b Fp(L)j Fn(there)456 1181 y(should)h(b)r(e)h(a)
f Fi(r)l(estriction)j(map)1689 1312 y Fp(F)12 b Fn(\()p
Fp(K)6 b Fn(\))23 b Fj(!)h Fp(F)12 b Fn(\()p Fp(L)p Fn(\))456
1461 y(suc)n(h)29 b(that)h(for)f(an)n(y)g(to)n(w)n(er)f(of)i(\014elds)g
Fp(K)i(,)-14 b Fj(!)27 b Fp(L)f(,)-14 b Fj(!)27 b Fp(M)9
b Fn(,)30 b(the)g(comp)r(osition)f(of)g(the)h(restriction)456
1561 y(maps)21 b Fp(F)12 b Fn(\()p Fp(K)6 b Fn(\))23
b Fj(!)g Fp(F)12 b Fn(\()p Fp(L)p Fn(\))22 b(and)g Fp(F)12
b Fn(\()p Fp(L)p Fn(\))23 b Fj(!)g Fp(F)12 b Fn(\()p
Fp(M)d Fn(\))22 b(is)g(just)h(the)f(restriction)f(map)h
Fp(F)12 b Fn(\()p Fp(K)6 b Fn(\))23 b Fj(!)g Fp(F)12
b Fn(\()p Fp(M)d Fn(\).)456 1661 y(\(In)28 b(all)g(of)g(the)g(examples)
g(ab)r(o)n(v)n(e)f(the)h(restriction)f(map)h(is)g(the)g(ob)n(vious)f
(one)h(rein)n(terpreting)456 1760 y(an)c(ob)5 b(ject)25
b(de\014ned)h(o)n(v)n(er)d Fp(K)31 b Fn(as)25 b(de\014ned)g(o)n(v)n(er)
e Fp(L)p Fn(.\))36 b Fp(F)i Fn(is)25 b(an)f(example)h(of)g(a)g
Fi(functor)g Fn(from)g(the)456 1860 y(category)g(of)j(\014elds)f(of)h
(c)n(haracteristic)e(0)h(to)g(the)h(category)e(of)h(sets.)555
1960 y(The)e(goal)f(is)h(to)g(\014nd)h(a)e(nice)h(geometric)f(ob)5
b(ject)25 b(\(sa)n(y)-7 b(,)25 b(a)g(pro)5 b(jectiv)n(e)24
b(v)-5 b(ariet)n(y)24 b(de\014ned)h(o)n(v)n(er)456 2059
y Fl(Q)5 b Fn(\))34 b Fp(X)g Fn(suc)n(h)27 b(that)h(for)f(ev)n(ery)g
(\014eld)h Fp(K)33 b Fn(there)27 b(is)h(a)f(bijection)1628
2226 y Fp(X)7 b Fn(\()p Fp(K)f Fn(\))23 b Fj( )-14 b(!)23
b Fp(F)12 b Fn(\()p Fp(K)6 b Fn(\))p Fp(:)456 2392 y
Fn(\(It)21 b(should)g(also)f(b)r(e)i(compatible)f(with)h(the)f
(restriction)f(maps)h Fp(X)7 b Fn(\()p Fp(L)p Fn(\))23
b Fj(!)g Fp(X)7 b Fn(\()p Fp(K)f Fn(\))20 b(and)h Fp(F)12
b Fn(\()p Fp(L)p Fn(\))23 b Fj(!)456 2492 y Fp(F)12 b
Fn(\()p Fp(K)6 b Fn(\).\))45 b(W)-7 b(e)30 b(ha)n(v)n(e)f(nev)n(er)g
(actually)h(b)r(een)h(able)f(to)g(do)g(this,)h(ev)n(en)e(o)n(v)n(er)g
Fl(C)15 b Fn(;)38 b(w)n(e)29 b(alw)n(a)n(ys)g(had)456
2591 y(to)f(add)h(a)g(few)g(extra)f(p)r(oin)n(ts)h(\(the)g(cusps\))g
(in)g(order)f(to)h(\014ll)g(in)g(some)g(holes.)40 b(This)29
b(situation)456 2691 y(turns)34 b(out)h(to)g(b)r(e)g(v)n(ery)e(common;)
38 b(let)d(us)g(agree)e(to)h(allo)n(w)g(a)g(\\small")g(exceptional)g
(set)h(of)456 2791 y(p)r(oin)n(ts)27 b(as)g(w)n(ell.)555
2890 y(If)h(w)n(e)e(could)h(\014nd)g(suc)n(h)g(an)f Fp(X)7
b Fn(,)27 b(w)n(e)f(w)n(ould)h(suddenly)g(ha)n(v)n(e)f(a)g(p)r(o)n(w)n
(erful)g(to)r(ol)h(with)h(whic)n(h)456 2990 y(to)f(study)h
Fp(F)12 b Fn(.)36 b(F)-7 b(or)27 b(example,)g(if)h(w)n(e)g(could)f
(\014nd)h(suc)n(h)f(an)g Fp(X)34 b Fn(for)27 b(Ell)2628
3002 y Fo(1)2665 2990 y Fn(,)h(then)g(the)f(question)h(of)456
3089 y(the)k(existence)f(of)h(elliptic)g(curv)n(es)f(with)h(11-torsion)
d(b)r(ecomes)i(a)h(question)f(ab)r(out)h(rational)456
3189 y(p)r(oin)n(ts)20 b(on)f(a)h(single)f(v)-5 b(ariet)n(y)e(.)34
b(This)20 b(philosoph)n(y)f(of)h(using)f(geometric)g(ob)5
b(jects)20 b(to)g(study)g(whole)456 3289 y(families)31
b(of)h(other)f(geometric)g(ob)5 b(jects)31 b(is)h(fundamen)n(tal)f(in)h
(mo)r(dern)g(algebraic)e(geometry;)456 3388 y(suc)n(h)d(an)g
Fp(X)34 b Fn(is)28 b(called)f(a)g Fi(\014ne)i(mo)l(duli)i(sp)l(ac)l(e)d
Fn(for)f Fp(F)12 b Fn(.)555 3488 y(Unfortunately)-7 b(,)29
b(\014ne)g(mo)r(duli)f(spaces)g(do)g(not)g(exist)h(for)e(all)h
Fp(F)12 b Fn(.)40 b(In)28 b(fact,)h(they)g(are)e(fairly)456
3588 y(rare.)34 b(One)22 b(simple)i(necessary)d(condition)i(for)g(the)h
(existence)e(of)i(suc)n(h)e(a)h(mo)r(duli)h(space)e Fp(X)30
b Fn(for)456 3687 y Fp(F)36 b Fn(is)25 b(that)g(the)h(restriction)e
(maps)g Fp(F)12 b Fn(\()p Fp(K)6 b Fn(\))23 b Fj(!)g
Fp(F)12 b Fn(\()p Fp(L)p Fn(\))25 b(b)r(e)h(injectiv)n(e)f(for)f(all)h
(inclusions)f Fp(K)29 b(,)-14 b Fj(!)23 b Fp(L)p Fn(;)456
3787 y(this)h(is)g(b)r(ecause)g(the)g(maps)g Fp(X)7 b
Fn(\()p Fp(K)f Fn(\))22 b Fj(!)h Fp(X)7 b Fn(\()p Fp(L)p
Fn(\))24 b(are)f(ob)n(viously)f(injectiv)n(e,)j(and)f
Fp(F)12 b Fn(\()p Fp(K)6 b Fn(\))23 b Fj(!)g Fp(F)12
b Fn(\()p Fp(L)p Fn(\))456 3886 y(m)n(ust)22 b(agree)g(with)h(this)g
(map.)35 b(This)23 b(immediately)g(sho)n(ws)e(that)i
Fp(F)35 b Fn(=)23 b(Ell)f(has)h(no)f(\014ne)h(mo)r(duli)456
3986 y(space:)33 b(indeed,)22 b(tak)n(e)f Fp(K)28 b Fn(=)23
b Fl(Q)33 b Fn(and)21 b Fp(L)h Fn(=)1767 3965 y(\026)1756
3986 y Fl(Q)12 b Fn(.)34 b(There)21 b(are)f(man)n(y)h(elliptic)g(curv)n
(es)f(o)n(v)n(er)g Fl(Q)33 b Fn(whic)n(h)456 4086 y(are)20
b(not)i(isomorphic)f(o)n(v)n(er)f Fl(Q)33 b Fn(but)23
b(whic)n(h)e(ha)n(v)n(e)g(the)h(same)f Fp(j)5 b Fn(-in)n(v)-5
b(arian)n(t.)34 b(Since)22 b(they)g(ha)n(v)n(e)e(the)456
4185 y(same)32 b Fp(j)5 b Fn(-in)n(v)-5 b(arian)n(t,)33
b(they)h(b)r(ecome)f(isomorphic)f(o)n(v)n(er)2231 4164
y(\026)2219 4185 y Fl(Q)12 b Fn(;)36 b(therefore,)e(these)f(elliptic)h
(curv)n(es)456 4285 y(ha)n(v)n(e)j(the)h(same)g(image)f(under)h(Ell\()p
Fl(Q)6 b Fn(\))47 b Fj(!)41 b Fn(Ell)o(\()2069 4264 y(\026)2057
4285 y Fl(Q)12 b Fn(\),)41 b(so)d(it)h(is)f(not)g(injectiv)n(e)g(and)g
(no)g(\014ne)456 4385 y(mo)r(duli)28 b(space)f(can)g(exist.)555
4484 y(If)g Fp(F)38 b Fn(do)r(es)26 b(not)g(ha)n(v)n(e)f(a)h(\014ne)g
(mo)r(duli)h(space,)f(it)g(still)h(could)f(happ)r(en)g(that)h(it)f(has)
g(a)g Fi(c)l(o)l(arse)456 4584 y(mo)l(duli)k(sp)l(ac)l(e)p
Fn(.)38 b(This)27 b(is)h(a)f(pro)5 b(jectiv)n(e)26 b(v)-5
b(ariet)n(y)27 b Fp(X)34 b Fn(suc)n(h)27 b(that)h(for)f(ev)n(ery)f
Fp(K)34 b Fn(there)27 b(is)g(a)h(map)1674 4750 y Fp(F)12
b Fn(\()p Fp(K)6 b Fn(\))23 b Fj(!)g Fp(X)7 b Fn(\()p
Fp(K)f Fn(\))456 4917 y(whic)n(h)24 b(satis\014es)g(certain)g(tec)n
(hnical)g(prop)r(erties,)g(but)h(whic)n(h)f(need)h(not)f(b)r(e)h(an)g
(isomorphism.)456 5016 y(This)c(is)h(what)g Fp(X)7 b
Fn(\(1\))1101 5028 y Fc(Q)1171 5016 y Fn(and)22 b Fp(X)1396
5028 y Fo(0)1433 5016 y Fn(\(11\))1581 5028 y Fc(Q)1652
5016 y Fn(are)f(for)g(Ell)g(and)h(Ell)2289 5028 y Fo(0)2326
5016 y Fn(.)35 b(Coarse)20 b(mo)r(duli)i(spaces)f(are)g(also)456
5116 y(useful,)28 b(but)g(it)f(requires)f(more)h(care)f(to)i(obtain)f
(information)f(ab)r(out)i Fp(F)39 b Fn(from)27 b(them.)38
b(In)27 b(the)456 5216 y(case)22 b(of)g(Ell)819 5228
y Fo(0)856 5216 y Fn(,)i(the)f(p)r(oin)n(ts)g Fp(X)1355
5228 y Fo(0)1392 5216 y Fn(\(11\))1540 5228 y Fc(Q)1589
5216 y Fn(\()p Fp(K)6 b Fn(\))23 b(turn)g(out)g(to)g(corresp)r(ond)e
(to)h(mo)r(dular)h(pairs)f(\()p Fp(E)5 b(;)14 b(C)6 b
Fn(\))p eop
%%Page: 14 14
14 13 bop 456 251 a Fo(14)1190 b(TOM)22 b(WESTON)456
450 y Fn(de\014ned)h(o)n(v)n(er)e Fp(K)6 b Fn(,)24 b(but)g(only)e(up)i
(to)f(isomorphism)f(o)n(v)n(er)2248 429 y(\026)2226 450
y Fp(K)5 b Fn(.)36 b(In)23 b(particular,)g(the)g(natural)g(map)1432
602 y(Ell)1534 614 y Fo(0)1572 602 y Fn(\()p Fp(K)6 b
Fn(\))23 b Fj(!)g Fp(X)1911 614 y Fo(0)1948 602 y Fn(\(11\))2096
614 y Fc(Q)2145 602 y Fn(\()p Fp(K)6 b Fn(\))18 b Fj(\000)g(C)2431
614 y Fo(0)456 754 y Fn(is)32 b(surjectiv)n(e)h(but)g(need)g(not)g(b)r
(e)h(injectiv)n(e.)53 b(Ev)n(en)32 b(giv)n(en)g(this,)j(the)e
(existence)g(of)g(rational)456 853 y(p)r(oin)n(ts)41
b(on)g Fp(X)917 865 y Fo(0)954 853 y Fn(\(11\))1102 865
y Fc(Q)1192 853 y Fn(do)r(es)g(not)g(imply)g(the)h(existence)f(of)g
(elliptic)h(curv)n(es)e(o)n(v)n(er)f Fl(Q)53 b Fn(with)456
953 y(rational)23 b(11-torsion;)g(for)h(the)h(cyclic)f(subgroup)f
Fp(C)31 b Fn(to)24 b(b)r(e)h(de\014ned)g(o)n(v)n(er)e
Fl(Q)36 b Fn(means)24 b(only)g(that)456 1053 y(it)e(is)g(mapp)r(ed)g
(to)g(itself)g(under)g(the)h(action)e(of)h(Gal\()2086
1031 y(\026)2074 1053 y Fl(Q)12 b Fp(=)p Fl(Q)5 b Fn(\),)29
b(not)22 b(that)g(it)h(is)f(actually)f(p)r(oin)n(t)n(wise)456
1152 y(\014xed.)555 1252 y(Remark)-5 b(ably)e(,)25 b
Fp(X)1101 1264 y Fo(1)1138 1252 y Fn(\(11\))1286 1264
y Fc(Q)1361 1252 y Fn(turns)g(out)h(to)f(b)r(e)h(a)f(\014ne)h(mo)r
(duli)g(space)f(for)g(Ell)2878 1264 y Fo(1)2941 1252
y Fn(\(once)h(w)n(e)f(ha)n(v)n(e)456 1351 y(tak)n(en)31
b(in)n(to)h(accoun)n(t)g(the)g(cusps\).)51 b(That)32
b(is,)i(for)d(ev)n(ery)g(\014eld)i Fp(K)38 b Fn(con)n(taining)31
b Fl(Q)44 b Fn(there)32 b(is)g(a)456 1451 y(bijection)1347
1568 y Fp(X)1416 1580 y Fo(1)1454 1568 y Fn(\(11\))1602
1580 y Fc(Q)1650 1568 y Fn(\()p Fp(K)6 b Fn(\))24 b Fj( )-14
b(!)23 b Fn(Ell)2092 1580 y Fo(1)2130 1568 y Fn(\()p
Fp(K)6 b Fn(\))18 b Fj([)h(C)5 b Fn(\()p Fp(K)h Fn(\))456
1702 y(where)24 b(w)n(e)i(remem)n(b)r(er)e(that)i Fj(C)5
b Fn(\()p Fp(K)h Fn(\))25 b(con)n(tains)f(either)i(5)f(or)f(10)h(cusps)
g(dep)r(ending)g(on)h(whether)456 1802 y(or)g(not)i Fp(K)33
b Fn(con)n(tains)27 b Fl(Q)5 b Fn(\()q Fp(\020)1262 1814
y Fo(11)1338 1802 y Fn(\))1370 1772 y Fo(+)1426 1802
y Fn(.)555 1901 y(These)29 b(facts)f(are)g(quite)h(di\016cult)h(to)e
(pro)n(v)n(e.)39 b(The)29 b(standard)e(references)h(are)g([4)o(])h(and)
g([6)o(],)456 2001 y(but)i(they)g(b)r(oth)g(require)f(a)h(great)e(deal)
i(of)f(algebraic)g(geometric)f(bac)n(kground.)45 b(There)30
b(is)h(a)456 2101 y(nice)h(summary)g(in)g([5,)i(P)n(art)d(2],)i
(although)f(ev)n(en)g(it)h(requires)e(a)h(fair)g(amoun)n(t)g(of)g
(algebraic)456 2200 y(geometry)-7 b(.)555 2300 y(W)g(e)39
b(giv)n(e)f(a)g(brief)h(indication)f(of)g(wh)n(y)h Fp(X)1933
2312 y Fo(1)1970 2300 y Fn(\(11\))2118 2312 y Fc(Q)2205
2300 y Fn(is)g(b)r(etter)g(b)r(eha)n(v)n(ed)f(than)g(our)g(other)456
2400 y(examples.)53 b(The)34 b(k)n(ey)f(fact)g(turns)g(out)h(to)f(b)r
(e)h(the)g(follo)n(wing)e(rigidit)n(y)h(statemen)n(t)g(\(see)h([6)o(];)
456 2499 y(this)f(particular)f(section)g(requires)g(only)h(familiarit)n
(y)f(with)i(the)f(material)f(of)h([14)o(,)i(Chapter)456
2599 y(3]\):)i(If)28 b(\()p Fp(E)789 2611 y Fo(1)827
2599 y Fp(;)14 b(P)917 2611 y Fo(1)955 2599 y Fn(\))28
b(and)g(\()p Fp(E)1270 2611 y Fo(2)1308 2599 y Fp(;)14
b(P)1398 2611 y Fo(2)1435 2599 y Fn(\))28 b(are)f(re\014ned)h(mo)r
(dular)f(pairs)g(de\014ned)i(o)n(v)n(er)d(a)h(\014eld)h
Fp(K)6 b Fn(,)28 b(then)456 2698 y(there)f(is)g(at)h(most)f(one)h
(isomorphism)e Fp(E)1755 2710 y Fo(1)1816 2676 y Fj(\030)1816
2703 y Fn(=)1903 2698 y Fp(E)1964 2710 y Fo(2)2029 2698
y Fn(sending)i Fp(P)2383 2710 y Fo(1)2448 2698 y Fn(to)f
Fp(P)2602 2710 y Fo(2)2640 2698 y Fn(.)555 2798 y(Giv)n(en)19
b(this,)i(w)n(e)e(can)f(sho)n(w)g(that)h(the)h(restriction)e(maps)g
(Ell)2425 2810 y Fo(1)2462 2798 y Fn(\()p Fp(K)6 b Fn(\))23
b Fj(!)g Fn(Ell)2835 2810 y Fo(1)2872 2798 y Fn(\()p
Fp(L)p Fn(\))c(are)f(injectiv)n(e)456 2898 y(for)31 b(extensions)h
Fp(K)k Fj(\022)30 b Fp(L)p Fn(,)j(so)f(that)g(at)g(least)g(that)g
(obstruction)g(to)g(the)g(existence)g(of)g(a)g(\014ne)456
2997 y(mo)r(duli)26 b(space)g(is)g(a)n(v)n(oided.)35
b(Un)n(winding)26 b(the)g(de\014nitions,)h(w)n(e)f(m)n(ust)g(pro)n(v)n
(e)f(that)h(if)h(\()p Fp(E)3247 3009 y Fo(1)3285 2997
y Fp(;)14 b(P)3375 3009 y Fo(1)3412 2997 y Fn(\))456
3097 y(and)30 b(\()p Fp(E)713 3109 y Fo(2)751 3097 y
Fp(;)14 b(P)841 3109 y Fo(2)879 3097 y Fn(\))31 b(are)f(mo)r(dular)g
(pairs)g(o)n(v)n(er)f Fp(K)36 b Fn(for)30 b(whic)n(h)h(there)g(exists)f
(an)h(isomorphism)f Fp(')e Fn(:)456 3197 y Fp(E)517 3209
y Fo(1)577 3197 y Fj(!)23 b Fp(E)744 3209 y Fo(2)807
3197 y Fn(de\014ned)i(o)n(v)n(er)f Fp(L)g Fn(with)i Fp(')p
Fn(\()p Fp(P)1673 3209 y Fo(1)1711 3197 y Fn(\))d(=)g
Fp(P)1907 3209 y Fo(2)1944 3197 y Fn(,)j(then)g Fp(')f
Fn(is)g(actually)g(de\014ned)g(o)n(v)n(er)e Fp(K)6 b
Fn(.)36 b(Let)25 b Fp(\033)456 3296 y Fn(b)r(e)c(an)n(y)g(elemen)n(t)h
(of)f(Gal\()p Fp(L=K)6 b Fn(\).)34 b(Acting)21 b(on)h(ev)n(erything)e
(b)n(y)h Fp(\033)s Fn(,)i(w)n(e)e(obtain)g(an)h(isomorphism)456
3396 y Fp(')510 3366 y Fg(\033)578 3396 y Fn(:)h Fp(E)690
3366 y Fg(\033)685 3416 y Fo(1)758 3396 y Fj(!)g Fp(E)930
3366 y Fg(\033)925 3416 y Fo(2)1000 3396 y Fn(sending)i
Fp(\033)s Fn(\()p Fp(P)1433 3408 y Fo(1)1471 3396 y Fn(\))e
Fj(!)h Fp(\033)s Fn(\()p Fp(P)1768 3408 y Fo(2)1806 3396
y Fn(\);)i(here)f(b)n(y)g Fp(E)2244 3366 y Fg(\033)2239
3417 y(i)2314 3396 y Fn(w)n(e)g(mean)g(the)h(elliptic)g(curv)n(e)e
(with)456 3496 y(equation)36 b(giv)n(en)g(b)n(y)h(acting)f(on)h(an)g
(equation)f(of)h Fp(E)2176 3508 y Fg(i)2241 3496 y Fn(b)n(y)g
Fp(\033)s Fn(.)65 b(But)38 b(since)e Fp(E)2952 3508 y
Fo(1)3027 3496 y Fn(and)h Fp(E)3259 3508 y Fo(2)3333
3496 y Fn(are)456 3595 y(de\014ned)f(o)n(v)n(er)e Fp(K)6
b Fn(,)37 b Fp(\033)i Fn(do)r(es)d(not)g(e\013ect)g(their)g(de\014ning)
f(equations)g(at)h(all,)h(and)f Fp(E)3140 3565 y Fg(\033)3135
3616 y Fo(1)3222 3595 y Fn(=)g Fp(E)3384 3607 y Fo(1)3421
3595 y Fn(,)456 3695 y Fp(E)522 3665 y Fg(\033)517 3715
y Fo(2)589 3695 y Fn(=)23 b Fp(E)738 3707 y Fo(2)776
3695 y Fn(.)36 b(The)27 b(same)f(is)g(true)h(of)f Fp(P)1615
3707 y Fo(1)1679 3695 y Fn(and)h Fp(P)1893 3707 y Fo(2)1930
3695 y Fn(,)g(so)f(w)n(e)g(see)h(that)f Fp(')2568 3665
y Fg(\033)2640 3695 y Fn(yields)g(an)h(isomorphism)456
3794 y(of)e(mo)r(dular)g(pairs)f(o)n(v)n(er)g Fp(L)h
Fn(\()p Fp(E)1428 3806 y Fo(1)1465 3794 y Fp(;)14 b(P)1555
3806 y Fo(1)1593 3794 y Fn(\))1648 3772 y Fj(\030)1648
3799 y Fn(=)1736 3794 y(\()p Fp(E)1829 3806 y Fo(2)1867
3794 y Fp(;)g(P)1957 3806 y Fo(2)1994 3794 y Fn(\).)37
b(By)25 b(rigidit)n(y)f(this)i(m)n(ust)f(agree)f(with)i
Fp(')p Fn(,)g(so)456 3894 y Fp(')d Fn(=)g Fp(')675 3864
y Fg(\033)747 3894 y Fn(for)k(all)g Fp(\033)f Fj(2)e
Fn(Gal)o(\()p Fp(L=K)6 b Fn(\).)36 b(But)28 b(b)n(y)f(the)g(main)h
(theorem)e(of)i(Galois)e(theory)h(\(more)f(or)456 3994
y(less\))h(this)h(means)f(that)h Fp(')g Fn(is)f(de\014ned)h(o)n(v)n(er)
e Fp(K)6 b Fn(,)27 b(whic)n(h)h(is)f(what)h(w)n(e)f(w)n(ere)g(trying)g
(to)g(sho)n(w.)1334 4212 y(8.)41 b Fk(The)32 b(elliptic)g(cur)-7
b(ve)31 b Fp(X)2332 4224 y Fo(1)2369 4212 y Fn(\(11\))2517
4224 y Fc(Q)555 4362 y Fn(Giv)n(en)26 b(what)g(w)n(e)g(said)g(in)g(the)
h(last)e(section,)h(to)g(determine)h(whether)f(or)f(not)h(there)g
(exists)456 4461 y(a)c(rational)f(elliptic)j(curv)n(e)d(with)i
(rational)f(11-torsion)e(is)j(the)g(same)f(as)g(determining)h(whether)
456 4561 y(or)i(not)h(there)f(are)g(non-cuspidal)g(rational)g(p)r(oin)n
(ts)h(on)f Fp(X)2270 4573 y Fo(1)2307 4561 y Fn(\(11\))2455
4573 y Fc(Q)2504 4561 y Fn(.)37 b(T)-7 b(o)25 b(do)h(this,)g(w)n(e)g(m)
n(ust)g(\014nd)456 4661 y(an)35 b(equation)g(for)g Fp(X)1130
4673 y Fo(1)1167 4661 y Fn(\(11\))1315 4673 y Fc(Q)1364
4661 y Fn(.)61 b(This)36 b(can)f(b)r(e)h(done)f(in)h(principal)f(as)g
(w)n(e)g(did)h(for)f Fp(X)3187 4673 y Fo(0)3224 4661
y Fn(\(11\))3372 4673 y Fc(Q)3421 4661 y Fn(,)456 4760
y(although)27 b(it)h(is)f(more)g(complicated;)g(in)h(an)n(y)f(ev)n(en)n
(t,)g(one)g(\014nds)h(the)g(equation)1635 4912 y Fp(y)1679
4878 y Fo(2)1734 4912 y Fn(+)18 b Fp(y)26 b Fn(=)c Fp(x)2018
4878 y Fo(3)2075 4912 y Fj(\000)c Fp(x)2205 4878 y Fo(2)2242
4912 y Fp(:)456 5064 y Fn(This)27 b(elliptic)h(curv)n(e)f(has)g(5)g
(torsion)g(p)r(oin)n(ts:)1028 5216 y Fp(X)1097 5228 y
Fo(1)1134 5216 y Fn(\(11\))1282 5228 y Fc(Q)1331 5216
y Fn(\()p Fl(Q)5 b Fn(\))1454 5228 y Fo(tors)1598 5216
y Fn(=)23 b Fj(f)p Fp(O)r(;)14 b Fn(\(0)p Fp(;)g Fn(0\))p
Fp(;)g Fn(\(1)p Fp(;)g Fj(\000)p Fn(1\))p Fp(;)g Fn(\(1)p
Fp(;)g Fn(0\))p Fp(;)g Fn(\(0)p Fp(;)g Fj(\000)p Fn(1\))p
Fj(g)p Fp(:)p eop
%%Page: 15 15
15 14 bop 1220 251 a Fo(THE)29 b(MODULAR)g(CUR)-7 b(VES)29
b Fg(X)2118 259 y Fd(0)2151 251 y Fo(\(11\))g(AND)g Fg(X)2529
259 y Fd(1)2562 251 y Fo(\(11\))698 b(15)456 450 y Fn(The)31
b(rank)e(of)i Fp(X)991 462 y Fo(1)1028 450 y Fn(\(11\))1176
462 y Fc(Q)1256 450 y Fn(is,)h(as)e(alw)n(a)n(ys,)g(more)g(di\016cult)h
(to)g(determine.)47 b(By)30 b([2,)i(p.)47 b(110],)30
b(it)456 550 y(can)d(b)r(e)h(sho)n(wn)f(to)g(ha)n(v)n(e)g(rank)f(0.)37
b(Th)n(us,)1085 690 y Fp(X)1154 702 y Fo(1)1191 690 y
Fn(\(11\))1339 702 y Fc(Q)1388 690 y Fn(\()p Fl(Q)6 b
Fn(\))30 b(=)22 b Fj(f)p Fp(O)r(;)14 b Fn(\(0)p Fp(;)g
Fn(0\))p Fp(;)g Fn(\(1)p Fp(;)g Fj(\000)p Fn(1\))p Fp(;)g
Fn(\(1)p Fp(;)g Fn(0\))p Fp(;)g Fn(\(0)p Fp(;)g Fj(\000)p
Fn(1\))p Fj(g)p Fp(:)555 831 y Fn(So)35 b Fp(X)747 843
y Fo(1)784 831 y Fn(\(11\))932 843 y Fc(Q)1016 831 y
Fn(has)g(exactly)g(\014v)n(e)g(rational)e(p)r(oin)n(ts.)60
b(But)36 b(recall)e(that)h(w)n(e)g(exp)r(ected)h(\014v)n(e)456
930 y(rational)22 b(cusps!)35 b(Th)n(us)24 b Fp(X)1290
942 y Fo(1)1327 930 y Fn(\(11\))1475 942 y Fc(Q)1548
930 y Fn(has)f(no)g(non-cuspidal)g(rational)g(p)r(oin)n(ts;)i(Ell)2962
942 y Fo(1)2999 930 y Fn(\()p Fl(Q)6 b Fn(\))30 b(is)24
b(there-)456 1030 y(fore)k(empt)n(y)-7 b(,)29 b(and)g(w)n(e)f(conclude)
g(that)i(there)e(are)g(no)g(elliptic)i(curv)n(es)d(o)n(v)n(er)g
Fl(Q)41 b Fn(with)29 b(rational)456 1129 y(p)r(oin)n(ts)e(of)h(order)e
(11!)1554 1316 y(9.)41 b Fk(Generaliza)-6 b(tions)555
1465 y Fn(Of)35 b(course,)h(v)n(ery)d(little)j(sp)r(eci\014c)f(to)g
(the)g(n)n(um)n(b)r(er)f(11)g(came)h(in)n(to)f(our)g(construction)h(of)
456 1565 y Fp(X)525 1577 y Fo(0)562 1565 y Fn(\(11\))710
1577 y Fc(Q)781 1565 y Fn(and)21 b Fp(X)1005 1577 y Fo(1)1042
1565 y Fn(\(11\))1190 1577 y Fc(Q)1239 1565 y Fn(.)35
b(One)22 b(can)f(construct)h(suc)n(h)f(curv)n(es)g Fp(X)2472
1577 y Fo(0)2509 1565 y Fn(\()p Fp(N)9 b Fn(\))2649 1577
y Fc(Q)2721 1565 y Fn(and)21 b Fp(X)2945 1577 y Fo(1)2982
1565 y Fn(\()p Fp(N)9 b Fn(\))3122 1577 y Fc(Q)3194 1565
y Fn(for)21 b(an)n(y)456 1664 y(p)r(ositiv)n(e)j(in)n(teger)h
Fp(N)9 b Fn(,)25 b(corresp)r(onding)e(to)i(pairs)f(of)h(elliptic)h
(curv)n(es)e(and)h(cyclic)g(subgroups)f(of)456 1764 y(order)g
Fp(N)35 b Fn(and)25 b(elliptic)h(curv)n(es)f(and)g(p)r(oin)n(ts)h(of)g
(order)e Fp(N)9 b Fn(,)26 b(resp)r(ectiv)n(ely)-7 b(.)36
b(F)-7 b(or)25 b Fp(N)31 b Fj(\025)23 b Fn(4)i(it)i(turns)456
1864 y(out)g(that)h Fp(X)852 1876 y Fo(0)889 1864 y Fn(\()p
Fp(N)9 b Fn(\))1029 1876 y Fc(Q)1106 1864 y Fn(is)28
b(a)f(coarse)f(mo)r(duli)i(space)f(and)g Fp(X)2240 1876
y Fo(1)2277 1864 y Fn(\()p Fp(N)9 b Fn(\))2417 1876 y
Fc(Q)2495 1864 y Fn(is)27 b(a)g(\014ne)h(mo)r(duli)g(space.)555
1963 y(It)23 b(follo)n(ws)e(that)h(to)g(determine)g(whether)g(or)f(not)
i(there)e(exist)h(elliptic)h(curv)n(es)e(o)n(v)n(er)f
Fl(Q)34 b Fn(with)456 2063 y(a)c(p)r(oin)n(t)h(of)g(order)e
Fp(N)9 b Fn(,)32 b(\\all")e(w)n(e)g(ha)n(v)n(e)g(to)h(do)f(is)h
(determine)g(whether)g(or)f(not)g Fp(X)3066 2075 y Fo(1)3103
2063 y Fn(\()p Fp(N)9 b Fn(\))3243 2075 y Fc(Q)3324 2063
y Fn(has)456 2162 y(non-cuspidal)30 b(rational)g(p)r(oin)n(ts.)48
b(Unfortunately)-7 b(,)32 b(as)f Fp(N)40 b Fn(increases)29
b(the)j(gen)n(us)e(of)i Fp(X)3218 2174 y Fo(1)3255 2162
y Fn(\()p Fp(N)9 b Fn(\))3395 2174 y Fc(Q)456 2262 y
Fn(increases)26 b(and)h(the)h(metho)r(ds)g(w)n(e)f(used)h(for)f
Fp(N)32 b Fn(=)22 b(11)27 b(fail)h(to)f(w)n(ork.)555
2362 y(It)39 b(has)f(b)r(een)h(kno)n(wn)e(for)h(quite)h(a)f(while)h
(that)f(for)g Fp(N)50 b Fn(=)41 b(1)p Fp(;)14 b Fn(2)p
Fp(;)g Fn(3)p Fp(;)g Fn(4)p Fp(;)g Fn(5)p Fp(;)g Fn(6)p
Fp(;)g Fn(7)p Fp(;)g Fn(8)p Fp(;)g Fn(9)p Fp(;)g Fn(10)o
Fp(;)g Fn(12)o(,)456 2461 y Fp(X)525 2473 y Fo(1)562
2461 y Fn(\()p Fp(N)9 b Fn(\))702 2473 y Fc(Q)773 2461
y Fn(has)21 b(gen)n(us)f(0)h(and)g(therefore)g(is)g(isomorphic)f(to)i
Fl(P)2337 2431 y Fo(1)2337 2485 y Fc(Q)2385 2461 y Fn(.)34
b(\(In)22 b(general,)g(a)f(curv)n(e)f(of)h(gen)n(us)456
2570 y(0)g(o)n(v)n(er)f Fl(Q)34 b Fn(is)22 b(isomorphic)f(to)h
Fl(P)1419 2540 y Fo(1)1419 2593 y Fc(Q)1489 2570 y Fn(if)g(and)g(only)g
(if)g(it)h(has)e(a)h(rational)f(p)r(oin)n(t.)35 b(In)22
b(these)g(cases,)g(the)456 2674 y(cusps)30 b(alw)n(a)n(ys)f(giv)n(e)h
(automatic)g(rational)g(p)r(oin)n(ts.\))47 b(It)31 b(follo)n(ws)f(that)
h(there)g(exist)g(in\014nitely)456 2773 y(man)n(y)c(rational)f
(elliptic)i(curv)n(es)e(with)i(p)r(oin)n(ts)g(of)g(order)e(1)p
Fp(;)14 b Fn(2)p Fp(;)g Fn(3)p Fp(;)g Fn(4)p Fp(;)g Fn(5)p
Fp(;)g Fn(6)p Fp(;)g Fn(7)p Fp(;)g Fn(8)p Fp(;)g Fn(9)p
Fp(;)g Fn(10)p Fp(;)f Fn(12)o(.)555 2873 y(F)-7 b(or)39
b(higher)f Fp(N)48 b Fn(the)39 b(problem)g(is)g(m)n(uc)n(h)g(more)f
(di\016cult.)72 b(Before)38 b(1977,)i(results)e(w)n(ere)456
2972 y(kno)n(wn)22 b(only)h(for)g(a)g(few)g(v)-5 b(alues)23
b(of)h Fp(N)9 b Fn(,)24 b(suc)n(h)f(as)f Fp(N)32 b Fn(=)23
b(11)p Fp(;)14 b Fn(13.)33 b(This)23 b(all)g(c)n(hanged)g(when)g(Barry)
456 3072 y(Mazur)g(succeeded)g(in)h(fully)g(analyzing)e(the)i(rational)
f(p)r(oin)n(ts)g(on)h(these)f(curv)n(es,)h(yielding)f(the)456
3172 y(follo)n(wing)j(remark)-5 b(able)26 b(theorem.)456
3324 y Fq(Theorem)g(9.1)i Fn(\(Mazur)c([8)o(])h([9)o(]\))p
Fq(.)39 b Fi(L)l(et)26 b Fp(E)32 b Fi(b)l(e)27 b(an)g(el)t(liptic)i
(curve)e(over)g Fl(Q)6 b Fi(.)43 b(Then)28 b(the)f(torsion)456
3424 y(sub)l(gr)l(oup)i(of)i Fp(E)5 b Fn(\()p Fl(Q)h
Fn(\))36 b Fi(is)30 b(one)g(of)g(the)g(fol)t(lowing)i
Fn(15)d Fi(gr)l(oups:)1283 3565 y Fl(Z)p Fp(=)-6 b(N)9
b Fl(Z)73 b Fi(\(N=1,2,3,4,5,6,7,8,9)q(,10)q(,1)q(2\);)1416
3711 y Fl(Z)o Fp(=)p Fn(2)o Fl(Z)6 b Fj(\002)18 b Fl(Z)o
Fp(=)-5 b(N)9 b Fl(Z)72 b Fi(\(N=1,2,3,4\).)555 3864
y Fn(More)28 b(recen)n(t)g(w)n(ork)g(on)g(the)h(p)r(oin)n(ts)g(of)g
Fp(X)1900 3876 y Fo(1)1937 3864 y Fn(\()p Fp(N)9 b Fn(\))29
b(o)n(v)n(er)e(larger)g(n)n(um)n(b)r(er)h(\014elds)h(has)f(yielded)456
3963 y(the)g(follo)n(wing)e(theorem.)456 4116 y Fq(Theorem)j(9.2)g
Fn(\(Merel)e([10)o(]\))p Fq(.)40 b Fi(L)l(et)28 b Fp(K)35
b Fi(b)l(e)28 b(a)i(numb)l(er)d(\014eld)j(of)f(de)l(gr)l(e)l(e)g
Fp(d)p Fi(.)39 b(Then)29 b(ther)l(e)g(is)g(an)456 4216
y(inte)l(ger)d Fp(M)9 b Fi(,)28 b(dep)l(ending)g(only)f(on)g
Fp(d)f Fi(\(and)i(not)e(on)h Fp(K)32 b Fi(itself)9 b(\))27
b(such)f(that)h(every)h(el)t(liptic)g(curve)456 4315
y(over)i Fp(K)35 b Fi(has)c(torsion)f(sub)l(gr)l(oup)g(of)g(or)l(der)h
(at)e(most)h Fp(M)9 b Fi(.)1708 4502 y Fk(References)491
4634 y Fm([1])35 b(Gary)25 b(Cornell,)g(Joseph)h(Silv)n(erman)e(and)i
(Glenn)g(Stev)n(ens)h(\(ed.\),)f Fb(Mo)l(dular)j(forms)f(and)g(F)-5
b(ermat's)27 b(last)601 4717 y(the)l(or)l(em)p Fm(.)d(Springer-V)-6
b(erlag,)23 b(New)g(Y)-6 b(ork,)23 b(1997.)491 4800 y([2])35
b(J.E.)26 b(Cremona,)h Fb(A)n(lgorithms)j(for)f(Mo)l(dular)i(El)t
(liptic)e(Curves)p Fm(.)d(Cam)n(bridge)h(Univ)n(ersit)n(y)g(Press,)g
(Cam-)601 4883 y(bridge,)c(1997.)491 4967 y([3])35 b(Pierre)21
b(Deligne)h(and)g(W.)g(Kuyk)g(\(ed.\),)h Fb(Mo)l(dular)j(forms)f(of)f
(one)g(variable)g(II)p Fm(.)f(Lecture)g(notes)g(in)e(math-)601
5050 y(ematics)i(349,)h(Springer-V)-6 b(erlag,)22 b(Berlin,)h(1973.)491
5133 y([4])35 b(Pierre)22 b(Deligne)g(and)i(Mic)n(hael)e(Rap)r(op)r
(ort,)h Fb(L)l(es)i(sch)n(\023)-35 b(emas)27 b(de)d(mo)l(dules)j(de)e
(c)l(ourb)l(es)g(el)t(liptiques)p Fm(.)d(In)h([3].)491
5216 y([5])35 b(F)-6 b(red)23 b(Diamond)g(and)h(John)h(Im,)d
Fb(Mo)l(dular)28 b(forms)e(and)h(mo)l(dular)h(curves)p
Fm(.)23 b(In)h([11],)f(pp.)g(39-133.)p eop
%%Page: 16 16
16 15 bop 456 251 a Fo(16)1190 b(TOM)22 b(WESTON)491
450 y Fm([6])35 b(Nic)n(holas)25 b(Katz)i(and)f(Barry)g(Mazur,)f
Fb(A)n(rithmetic)i(mo)l(duli)j(of)e(el)t(liptic)f(curves)p
Fm(.)e(Princeton)h(Univ)n(ersit)n(y)601 533 y(Press,)c(Princeton,)i
(New)g(Jersey)-6 b(,)24 b(1985.)491 616 y([7])35 b(An)n(thon)n(y)25
b(Knapp,)f Fb(El)t(liptic)h(curves)p Fm(.)e(Princeton)i(Univ)n(ersit)n
(y)e(Press,)g(Princeton,)h(New)g(Jersey)-6 b(,)23 b(1992.)491
699 y([8])35 b(Barry)25 b(Mazur,)h Fb(Mo)l(dular)k(curves)d(and)i(the)e
(Eisenstein)h(ide)l(al)p Fm(.)e(IHES)h(Publications)f(Math)n(\023)-33
b(ematiques,)601 782 y(v)n(ol.)23 b(47)h(\(1977\),)h(pp.)f(33-186.)491
865 y([9])35 b(Barry)23 b(Mazur,)g Fb(R)l(ational)28
b(iso)l(genies)e(of)g(prime)g(de)l(gr)l(e)l(e)p Fm(.)e(In)n(v)n(en)n
(tiones)i(Mathematicae,)f(v)n(ol.)e(44)i(\(1978\),)601
948 y(pp.)e(129-162.)456 1031 y([10])35 b(Loic)26 b(Merel,)f
Fb(Bornes)j(p)l(our)h(la)f(torsion)g(des)g(c)l(ourb)l(es)h(el)t
(liptiques)e(sur)h(les)f(c)l(orps)i(de)f(nombr)l(es.)e
Fm(In)n(v)n(en-)601 1114 y(tiones)e(Mathematicae,)g(v)n(ol.)f(124)i
(\(1996\),)g(pp.)e(437-449.)456 1197 y([11])35 b(V.)22
b(Kumar)g(Murt)n(y)h(\(ed.\),)g Fb(Seminar)j(on)f(F)-5
b(ermat's)26 b(last)f(the)l(or)l(em)p Fm(.)f(American)e(Mathematical)h
(So)r(ciet)n(y)-6 b(,)601 1280 y(Pro)n(vidence,)24 b(Rho)r(de)g
(Island,)g(1995.)456 1363 y([12])35 b(Da)n(vid)23 b(Rohrlic)n(h,)g
Fb(Mo)l(dular)k(curves,)e(He)l(cke)f(c)l(orr)l(esp)l(ondenc)l(es)k(and)
e Fa(L)p Fb(-functions)p Fm(.)d(In)g([1],)g(pp.)g(41-100.)456
1446 y([13])35 b(Jean-Pierre)23 b(Serre,)g Fb(A)j(Course)g(in)f(A)n
(rithmetic)p Fm(.)e(Springer-V)-6 b(erlag,)22 b(New)i(Y)-6
b(ork,)23 b(1973.)456 1529 y([14])35 b(Joseph)24 b(Silv)n(erman,)e
Fb(The)k(A)n(rithmetic)f(of)h(El)t(liptic)f(Curves)p
Fm(.)f(Springer-V)-6 b(erlag,)22 b(New)i(Y)-6 b(ork,)23
b(1986.)456 1612 y([15])35 b(Joseph)c(Silv)n(erman,)f
Fb(A)l(dvanc)l(e)l(d)k(T)-5 b(opics)32 b(in)g(the)f(A)n(rithmetic)h(of)
g(El)t(liptic)f(Curves)p Fm(.)f(Springer-V)-6 b(erlag,)601
1695 y(New)23 b(Y)-6 b(ork,)24 b(1994.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
